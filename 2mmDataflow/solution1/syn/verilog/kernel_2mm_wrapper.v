// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="kernel_2mm_wrapper,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=6.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=5.879000,HLS_SYN_LAT=41564,HLS_SYN_TPT=20770,HLS_SYN_MEM=41,HLS_SYN_DSP=52,HLS_SYN_FF=9661,HLS_SYN_LUT=7495,HLS_VERSION=2018_2}" *)

module kernel_2mm_wrapper (
        s_axi_for_control_AWVALID,
        s_axi_for_control_AWREADY,
        s_axi_for_control_AWADDR,
        s_axi_for_control_WVALID,
        s_axi_for_control_WREADY,
        s_axi_for_control_WDATA,
        s_axi_for_control_WSTRB,
        s_axi_for_control_ARVALID,
        s_axi_for_control_ARREADY,
        s_axi_for_control_ARADDR,
        s_axi_for_control_RVALID,
        s_axi_for_control_RREADY,
        s_axi_for_control_RDATA,
        s_axi_for_control_RRESP,
        s_axi_for_control_BVALID,
        s_axi_for_control_BREADY,
        s_axi_for_control_BRESP,
        ap_clk,
        ap_rst_n,
        interrupt,
        m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY,
        m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY,
        m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST,
        m_axi_gmem0_WID,
        m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY,
        m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID,
        m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA,
        m_axi_gmem0_RLAST,
        m_axi_gmem0_RID,
        m_axi_gmem0_RUSER,
        m_axi_gmem0_RRESP,
        m_axi_gmem0_BVALID,
        m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP,
        m_axi_gmem0_BID,
        m_axi_gmem0_BUSER,
        m_axi_gmem1_AWVALID,
        m_axi_gmem1_AWREADY,
        m_axi_gmem1_AWADDR,
        m_axi_gmem1_AWID,
        m_axi_gmem1_AWLEN,
        m_axi_gmem1_AWSIZE,
        m_axi_gmem1_AWBURST,
        m_axi_gmem1_AWLOCK,
        m_axi_gmem1_AWCACHE,
        m_axi_gmem1_AWPROT,
        m_axi_gmem1_AWQOS,
        m_axi_gmem1_AWREGION,
        m_axi_gmem1_AWUSER,
        m_axi_gmem1_WVALID,
        m_axi_gmem1_WREADY,
        m_axi_gmem1_WDATA,
        m_axi_gmem1_WSTRB,
        m_axi_gmem1_WLAST,
        m_axi_gmem1_WID,
        m_axi_gmem1_WUSER,
        m_axi_gmem1_ARVALID,
        m_axi_gmem1_ARREADY,
        m_axi_gmem1_ARADDR,
        m_axi_gmem1_ARID,
        m_axi_gmem1_ARLEN,
        m_axi_gmem1_ARSIZE,
        m_axi_gmem1_ARBURST,
        m_axi_gmem1_ARLOCK,
        m_axi_gmem1_ARCACHE,
        m_axi_gmem1_ARPROT,
        m_axi_gmem1_ARQOS,
        m_axi_gmem1_ARREGION,
        m_axi_gmem1_ARUSER,
        m_axi_gmem1_RVALID,
        m_axi_gmem1_RREADY,
        m_axi_gmem1_RDATA,
        m_axi_gmem1_RLAST,
        m_axi_gmem1_RID,
        m_axi_gmem1_RUSER,
        m_axi_gmem1_RRESP,
        m_axi_gmem1_BVALID,
        m_axi_gmem1_BREADY,
        m_axi_gmem1_BRESP,
        m_axi_gmem1_BID,
        m_axi_gmem1_BUSER,
        m_axi_gmem2_AWVALID,
        m_axi_gmem2_AWREADY,
        m_axi_gmem2_AWADDR,
        m_axi_gmem2_AWID,
        m_axi_gmem2_AWLEN,
        m_axi_gmem2_AWSIZE,
        m_axi_gmem2_AWBURST,
        m_axi_gmem2_AWLOCK,
        m_axi_gmem2_AWCACHE,
        m_axi_gmem2_AWPROT,
        m_axi_gmem2_AWQOS,
        m_axi_gmem2_AWREGION,
        m_axi_gmem2_AWUSER,
        m_axi_gmem2_WVALID,
        m_axi_gmem2_WREADY,
        m_axi_gmem2_WDATA,
        m_axi_gmem2_WSTRB,
        m_axi_gmem2_WLAST,
        m_axi_gmem2_WID,
        m_axi_gmem2_WUSER,
        m_axi_gmem2_ARVALID,
        m_axi_gmem2_ARREADY,
        m_axi_gmem2_ARADDR,
        m_axi_gmem2_ARID,
        m_axi_gmem2_ARLEN,
        m_axi_gmem2_ARSIZE,
        m_axi_gmem2_ARBURST,
        m_axi_gmem2_ARLOCK,
        m_axi_gmem2_ARCACHE,
        m_axi_gmem2_ARPROT,
        m_axi_gmem2_ARQOS,
        m_axi_gmem2_ARREGION,
        m_axi_gmem2_ARUSER,
        m_axi_gmem2_RVALID,
        m_axi_gmem2_RREADY,
        m_axi_gmem2_RDATA,
        m_axi_gmem2_RLAST,
        m_axi_gmem2_RID,
        m_axi_gmem2_RUSER,
        m_axi_gmem2_RRESP,
        m_axi_gmem2_BVALID,
        m_axi_gmem2_BREADY,
        m_axi_gmem2_BRESP,
        m_axi_gmem2_BID,
        m_axi_gmem2_BUSER,
        m_axi_gmem3_AWVALID,
        m_axi_gmem3_AWREADY,
        m_axi_gmem3_AWADDR,
        m_axi_gmem3_AWID,
        m_axi_gmem3_AWLEN,
        m_axi_gmem3_AWSIZE,
        m_axi_gmem3_AWBURST,
        m_axi_gmem3_AWLOCK,
        m_axi_gmem3_AWCACHE,
        m_axi_gmem3_AWPROT,
        m_axi_gmem3_AWQOS,
        m_axi_gmem3_AWREGION,
        m_axi_gmem3_AWUSER,
        m_axi_gmem3_WVALID,
        m_axi_gmem3_WREADY,
        m_axi_gmem3_WDATA,
        m_axi_gmem3_WSTRB,
        m_axi_gmem3_WLAST,
        m_axi_gmem3_WID,
        m_axi_gmem3_WUSER,
        m_axi_gmem3_ARVALID,
        m_axi_gmem3_ARREADY,
        m_axi_gmem3_ARADDR,
        m_axi_gmem3_ARID,
        m_axi_gmem3_ARLEN,
        m_axi_gmem3_ARSIZE,
        m_axi_gmem3_ARBURST,
        m_axi_gmem3_ARLOCK,
        m_axi_gmem3_ARCACHE,
        m_axi_gmem3_ARPROT,
        m_axi_gmem3_ARQOS,
        m_axi_gmem3_ARREGION,
        m_axi_gmem3_ARUSER,
        m_axi_gmem3_RVALID,
        m_axi_gmem3_RREADY,
        m_axi_gmem3_RDATA,
        m_axi_gmem3_RLAST,
        m_axi_gmem3_RID,
        m_axi_gmem3_RUSER,
        m_axi_gmem3_RRESP,
        m_axi_gmem3_BVALID,
        m_axi_gmem3_BREADY,
        m_axi_gmem3_BRESP,
        m_axi_gmem3_BID,
        m_axi_gmem3_BUSER,
        m_axi_gmem4_AWVALID,
        m_axi_gmem4_AWREADY,
        m_axi_gmem4_AWADDR,
        m_axi_gmem4_AWID,
        m_axi_gmem4_AWLEN,
        m_axi_gmem4_AWSIZE,
        m_axi_gmem4_AWBURST,
        m_axi_gmem4_AWLOCK,
        m_axi_gmem4_AWCACHE,
        m_axi_gmem4_AWPROT,
        m_axi_gmem4_AWQOS,
        m_axi_gmem4_AWREGION,
        m_axi_gmem4_AWUSER,
        m_axi_gmem4_WVALID,
        m_axi_gmem4_WREADY,
        m_axi_gmem4_WDATA,
        m_axi_gmem4_WSTRB,
        m_axi_gmem4_WLAST,
        m_axi_gmem4_WID,
        m_axi_gmem4_WUSER,
        m_axi_gmem4_ARVALID,
        m_axi_gmem4_ARREADY,
        m_axi_gmem4_ARADDR,
        m_axi_gmem4_ARID,
        m_axi_gmem4_ARLEN,
        m_axi_gmem4_ARSIZE,
        m_axi_gmem4_ARBURST,
        m_axi_gmem4_ARLOCK,
        m_axi_gmem4_ARCACHE,
        m_axi_gmem4_ARPROT,
        m_axi_gmem4_ARQOS,
        m_axi_gmem4_ARREGION,
        m_axi_gmem4_ARUSER,
        m_axi_gmem4_RVALID,
        m_axi_gmem4_RREADY,
        m_axi_gmem4_RDATA,
        m_axi_gmem4_RLAST,
        m_axi_gmem4_RID,
        m_axi_gmem4_RUSER,
        m_axi_gmem4_RRESP,
        m_axi_gmem4_BVALID,
        m_axi_gmem4_BREADY,
        m_axi_gmem4_BRESP,
        m_axi_gmem4_BID,
        m_axi_gmem4_BUSER
);

parameter    C_S_AXI_FOR_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_FOR_CONTROL_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_S_AXI_ADDR_WIDTH = 32;
parameter    C_M_AXI_GMEM0_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM0_ADDR_WIDTH = 32;
parameter    C_M_AXI_GMEM0_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM0_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_USER_VALUE = 0;
parameter    C_M_AXI_GMEM0_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM0_CACHE_VALUE = 3;
parameter    C_M_AXI_ID_WIDTH = 1;
parameter    C_M_AXI_ADDR_WIDTH = 32;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_AWUSER_WIDTH = 1;
parameter    C_M_AXI_ARUSER_WIDTH = 1;
parameter    C_M_AXI_WUSER_WIDTH = 1;
parameter    C_M_AXI_RUSER_WIDTH = 1;
parameter    C_M_AXI_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM1_ADDR_WIDTH = 32;
parameter    C_M_AXI_GMEM1_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM1_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_USER_VALUE = 0;
parameter    C_M_AXI_GMEM1_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM1_CACHE_VALUE = 3;
parameter    C_M_AXI_GMEM2_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM2_ADDR_WIDTH = 32;
parameter    C_M_AXI_GMEM2_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM2_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM2_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM2_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM2_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM2_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM2_USER_VALUE = 0;
parameter    C_M_AXI_GMEM2_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM2_CACHE_VALUE = 3;
parameter    C_M_AXI_GMEM3_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM3_ADDR_WIDTH = 32;
parameter    C_M_AXI_GMEM3_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM3_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM3_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM3_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM3_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM3_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM3_USER_VALUE = 0;
parameter    C_M_AXI_GMEM3_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM3_CACHE_VALUE = 3;
parameter    C_M_AXI_GMEM4_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM4_ADDR_WIDTH = 32;
parameter    C_M_AXI_GMEM4_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM4_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM4_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM4_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM4_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM4_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM4_USER_VALUE = 0;
parameter    C_M_AXI_GMEM4_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM4_CACHE_VALUE = 3;

parameter C_S_AXI_FOR_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM0_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM1_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM2_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM3_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM4_WSTRB_WIDTH = (32 / 8);

input   s_axi_for_control_AWVALID;
output   s_axi_for_control_AWREADY;
input  [C_S_AXI_FOR_CONTROL_ADDR_WIDTH - 1:0] s_axi_for_control_AWADDR;
input   s_axi_for_control_WVALID;
output   s_axi_for_control_WREADY;
input  [C_S_AXI_FOR_CONTROL_DATA_WIDTH - 1:0] s_axi_for_control_WDATA;
input  [C_S_AXI_FOR_CONTROL_WSTRB_WIDTH - 1:0] s_axi_for_control_WSTRB;
input   s_axi_for_control_ARVALID;
output   s_axi_for_control_ARREADY;
input  [C_S_AXI_FOR_CONTROL_ADDR_WIDTH - 1:0] s_axi_for_control_ARADDR;
output   s_axi_for_control_RVALID;
input   s_axi_for_control_RREADY;
output  [C_S_AXI_FOR_CONTROL_DATA_WIDTH - 1:0] s_axi_for_control_RDATA;
output  [1:0] s_axi_for_control_RRESP;
output   s_axi_for_control_BVALID;
input   s_axi_for_control_BREADY;
output  [1:0] s_axi_for_control_BRESP;
input   ap_clk;
input   ap_rst_n;
output   interrupt;
output   m_axi_gmem0_AWVALID;
input   m_axi_gmem0_AWREADY;
output  [C_M_AXI_GMEM0_ADDR_WIDTH - 1:0] m_axi_gmem0_AWADDR;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_AWID;
output  [7:0] m_axi_gmem0_AWLEN;
output  [2:0] m_axi_gmem0_AWSIZE;
output  [1:0] m_axi_gmem0_AWBURST;
output  [1:0] m_axi_gmem0_AWLOCK;
output  [3:0] m_axi_gmem0_AWCACHE;
output  [2:0] m_axi_gmem0_AWPROT;
output  [3:0] m_axi_gmem0_AWQOS;
output  [3:0] m_axi_gmem0_AWREGION;
output  [C_M_AXI_GMEM0_AWUSER_WIDTH - 1:0] m_axi_gmem0_AWUSER;
output   m_axi_gmem0_WVALID;
input   m_axi_gmem0_WREADY;
output  [C_M_AXI_GMEM0_DATA_WIDTH - 1:0] m_axi_gmem0_WDATA;
output  [C_M_AXI_GMEM0_WSTRB_WIDTH - 1:0] m_axi_gmem0_WSTRB;
output   m_axi_gmem0_WLAST;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_WID;
output  [C_M_AXI_GMEM0_WUSER_WIDTH - 1:0] m_axi_gmem0_WUSER;
output   m_axi_gmem0_ARVALID;
input   m_axi_gmem0_ARREADY;
output  [C_M_AXI_GMEM0_ADDR_WIDTH - 1:0] m_axi_gmem0_ARADDR;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_ARID;
output  [7:0] m_axi_gmem0_ARLEN;
output  [2:0] m_axi_gmem0_ARSIZE;
output  [1:0] m_axi_gmem0_ARBURST;
output  [1:0] m_axi_gmem0_ARLOCK;
output  [3:0] m_axi_gmem0_ARCACHE;
output  [2:0] m_axi_gmem0_ARPROT;
output  [3:0] m_axi_gmem0_ARQOS;
output  [3:0] m_axi_gmem0_ARREGION;
output  [C_M_AXI_GMEM0_ARUSER_WIDTH - 1:0] m_axi_gmem0_ARUSER;
input   m_axi_gmem0_RVALID;
output   m_axi_gmem0_RREADY;
input  [C_M_AXI_GMEM0_DATA_WIDTH - 1:0] m_axi_gmem0_RDATA;
input   m_axi_gmem0_RLAST;
input  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_RID;
input  [C_M_AXI_GMEM0_RUSER_WIDTH - 1:0] m_axi_gmem0_RUSER;
input  [1:0] m_axi_gmem0_RRESP;
input   m_axi_gmem0_BVALID;
output   m_axi_gmem0_BREADY;
input  [1:0] m_axi_gmem0_BRESP;
input  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_BID;
input  [C_M_AXI_GMEM0_BUSER_WIDTH - 1:0] m_axi_gmem0_BUSER;
output   m_axi_gmem1_AWVALID;
input   m_axi_gmem1_AWREADY;
output  [C_M_AXI_GMEM1_ADDR_WIDTH - 1:0] m_axi_gmem1_AWADDR;
output  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_AWID;
output  [7:0] m_axi_gmem1_AWLEN;
output  [2:0] m_axi_gmem1_AWSIZE;
output  [1:0] m_axi_gmem1_AWBURST;
output  [1:0] m_axi_gmem1_AWLOCK;
output  [3:0] m_axi_gmem1_AWCACHE;
output  [2:0] m_axi_gmem1_AWPROT;
output  [3:0] m_axi_gmem1_AWQOS;
output  [3:0] m_axi_gmem1_AWREGION;
output  [C_M_AXI_GMEM1_AWUSER_WIDTH - 1:0] m_axi_gmem1_AWUSER;
output   m_axi_gmem1_WVALID;
input   m_axi_gmem1_WREADY;
output  [C_M_AXI_GMEM1_DATA_WIDTH - 1:0] m_axi_gmem1_WDATA;
output  [C_M_AXI_GMEM1_WSTRB_WIDTH - 1:0] m_axi_gmem1_WSTRB;
output   m_axi_gmem1_WLAST;
output  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_WID;
output  [C_M_AXI_GMEM1_WUSER_WIDTH - 1:0] m_axi_gmem1_WUSER;
output   m_axi_gmem1_ARVALID;
input   m_axi_gmem1_ARREADY;
output  [C_M_AXI_GMEM1_ADDR_WIDTH - 1:0] m_axi_gmem1_ARADDR;
output  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_ARID;
output  [7:0] m_axi_gmem1_ARLEN;
output  [2:0] m_axi_gmem1_ARSIZE;
output  [1:0] m_axi_gmem1_ARBURST;
output  [1:0] m_axi_gmem1_ARLOCK;
output  [3:0] m_axi_gmem1_ARCACHE;
output  [2:0] m_axi_gmem1_ARPROT;
output  [3:0] m_axi_gmem1_ARQOS;
output  [3:0] m_axi_gmem1_ARREGION;
output  [C_M_AXI_GMEM1_ARUSER_WIDTH - 1:0] m_axi_gmem1_ARUSER;
input   m_axi_gmem1_RVALID;
output   m_axi_gmem1_RREADY;
input  [C_M_AXI_GMEM1_DATA_WIDTH - 1:0] m_axi_gmem1_RDATA;
input   m_axi_gmem1_RLAST;
input  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_RID;
input  [C_M_AXI_GMEM1_RUSER_WIDTH - 1:0] m_axi_gmem1_RUSER;
input  [1:0] m_axi_gmem1_RRESP;
input   m_axi_gmem1_BVALID;
output   m_axi_gmem1_BREADY;
input  [1:0] m_axi_gmem1_BRESP;
input  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_BID;
input  [C_M_AXI_GMEM1_BUSER_WIDTH - 1:0] m_axi_gmem1_BUSER;
output   m_axi_gmem2_AWVALID;
input   m_axi_gmem2_AWREADY;
output  [C_M_AXI_GMEM2_ADDR_WIDTH - 1:0] m_axi_gmem2_AWADDR;
output  [C_M_AXI_GMEM2_ID_WIDTH - 1:0] m_axi_gmem2_AWID;
output  [7:0] m_axi_gmem2_AWLEN;
output  [2:0] m_axi_gmem2_AWSIZE;
output  [1:0] m_axi_gmem2_AWBURST;
output  [1:0] m_axi_gmem2_AWLOCK;
output  [3:0] m_axi_gmem2_AWCACHE;
output  [2:0] m_axi_gmem2_AWPROT;
output  [3:0] m_axi_gmem2_AWQOS;
output  [3:0] m_axi_gmem2_AWREGION;
output  [C_M_AXI_GMEM2_AWUSER_WIDTH - 1:0] m_axi_gmem2_AWUSER;
output   m_axi_gmem2_WVALID;
input   m_axi_gmem2_WREADY;
output  [C_M_AXI_GMEM2_DATA_WIDTH - 1:0] m_axi_gmem2_WDATA;
output  [C_M_AXI_GMEM2_WSTRB_WIDTH - 1:0] m_axi_gmem2_WSTRB;
output   m_axi_gmem2_WLAST;
output  [C_M_AXI_GMEM2_ID_WIDTH - 1:0] m_axi_gmem2_WID;
output  [C_M_AXI_GMEM2_WUSER_WIDTH - 1:0] m_axi_gmem2_WUSER;
output   m_axi_gmem2_ARVALID;
input   m_axi_gmem2_ARREADY;
output  [C_M_AXI_GMEM2_ADDR_WIDTH - 1:0] m_axi_gmem2_ARADDR;
output  [C_M_AXI_GMEM2_ID_WIDTH - 1:0] m_axi_gmem2_ARID;
output  [7:0] m_axi_gmem2_ARLEN;
output  [2:0] m_axi_gmem2_ARSIZE;
output  [1:0] m_axi_gmem2_ARBURST;
output  [1:0] m_axi_gmem2_ARLOCK;
output  [3:0] m_axi_gmem2_ARCACHE;
output  [2:0] m_axi_gmem2_ARPROT;
output  [3:0] m_axi_gmem2_ARQOS;
output  [3:0] m_axi_gmem2_ARREGION;
output  [C_M_AXI_GMEM2_ARUSER_WIDTH - 1:0] m_axi_gmem2_ARUSER;
input   m_axi_gmem2_RVALID;
output   m_axi_gmem2_RREADY;
input  [C_M_AXI_GMEM2_DATA_WIDTH - 1:0] m_axi_gmem2_RDATA;
input   m_axi_gmem2_RLAST;
input  [C_M_AXI_GMEM2_ID_WIDTH - 1:0] m_axi_gmem2_RID;
input  [C_M_AXI_GMEM2_RUSER_WIDTH - 1:0] m_axi_gmem2_RUSER;
input  [1:0] m_axi_gmem2_RRESP;
input   m_axi_gmem2_BVALID;
output   m_axi_gmem2_BREADY;
input  [1:0] m_axi_gmem2_BRESP;
input  [C_M_AXI_GMEM2_ID_WIDTH - 1:0] m_axi_gmem2_BID;
input  [C_M_AXI_GMEM2_BUSER_WIDTH - 1:0] m_axi_gmem2_BUSER;
output   m_axi_gmem3_AWVALID;
input   m_axi_gmem3_AWREADY;
output  [C_M_AXI_GMEM3_ADDR_WIDTH - 1:0] m_axi_gmem3_AWADDR;
output  [C_M_AXI_GMEM3_ID_WIDTH - 1:0] m_axi_gmem3_AWID;
output  [7:0] m_axi_gmem3_AWLEN;
output  [2:0] m_axi_gmem3_AWSIZE;
output  [1:0] m_axi_gmem3_AWBURST;
output  [1:0] m_axi_gmem3_AWLOCK;
output  [3:0] m_axi_gmem3_AWCACHE;
output  [2:0] m_axi_gmem3_AWPROT;
output  [3:0] m_axi_gmem3_AWQOS;
output  [3:0] m_axi_gmem3_AWREGION;
output  [C_M_AXI_GMEM3_AWUSER_WIDTH - 1:0] m_axi_gmem3_AWUSER;
output   m_axi_gmem3_WVALID;
input   m_axi_gmem3_WREADY;
output  [C_M_AXI_GMEM3_DATA_WIDTH - 1:0] m_axi_gmem3_WDATA;
output  [C_M_AXI_GMEM3_WSTRB_WIDTH - 1:0] m_axi_gmem3_WSTRB;
output   m_axi_gmem3_WLAST;
output  [C_M_AXI_GMEM3_ID_WIDTH - 1:0] m_axi_gmem3_WID;
output  [C_M_AXI_GMEM3_WUSER_WIDTH - 1:0] m_axi_gmem3_WUSER;
output   m_axi_gmem3_ARVALID;
input   m_axi_gmem3_ARREADY;
output  [C_M_AXI_GMEM3_ADDR_WIDTH - 1:0] m_axi_gmem3_ARADDR;
output  [C_M_AXI_GMEM3_ID_WIDTH - 1:0] m_axi_gmem3_ARID;
output  [7:0] m_axi_gmem3_ARLEN;
output  [2:0] m_axi_gmem3_ARSIZE;
output  [1:0] m_axi_gmem3_ARBURST;
output  [1:0] m_axi_gmem3_ARLOCK;
output  [3:0] m_axi_gmem3_ARCACHE;
output  [2:0] m_axi_gmem3_ARPROT;
output  [3:0] m_axi_gmem3_ARQOS;
output  [3:0] m_axi_gmem3_ARREGION;
output  [C_M_AXI_GMEM3_ARUSER_WIDTH - 1:0] m_axi_gmem3_ARUSER;
input   m_axi_gmem3_RVALID;
output   m_axi_gmem3_RREADY;
input  [C_M_AXI_GMEM3_DATA_WIDTH - 1:0] m_axi_gmem3_RDATA;
input   m_axi_gmem3_RLAST;
input  [C_M_AXI_GMEM3_ID_WIDTH - 1:0] m_axi_gmem3_RID;
input  [C_M_AXI_GMEM3_RUSER_WIDTH - 1:0] m_axi_gmem3_RUSER;
input  [1:0] m_axi_gmem3_RRESP;
input   m_axi_gmem3_BVALID;
output   m_axi_gmem3_BREADY;
input  [1:0] m_axi_gmem3_BRESP;
input  [C_M_AXI_GMEM3_ID_WIDTH - 1:0] m_axi_gmem3_BID;
input  [C_M_AXI_GMEM3_BUSER_WIDTH - 1:0] m_axi_gmem3_BUSER;
output   m_axi_gmem4_AWVALID;
input   m_axi_gmem4_AWREADY;
output  [C_M_AXI_GMEM4_ADDR_WIDTH - 1:0] m_axi_gmem4_AWADDR;
output  [C_M_AXI_GMEM4_ID_WIDTH - 1:0] m_axi_gmem4_AWID;
output  [7:0] m_axi_gmem4_AWLEN;
output  [2:0] m_axi_gmem4_AWSIZE;
output  [1:0] m_axi_gmem4_AWBURST;
output  [1:0] m_axi_gmem4_AWLOCK;
output  [3:0] m_axi_gmem4_AWCACHE;
output  [2:0] m_axi_gmem4_AWPROT;
output  [3:0] m_axi_gmem4_AWQOS;
output  [3:0] m_axi_gmem4_AWREGION;
output  [C_M_AXI_GMEM4_AWUSER_WIDTH - 1:0] m_axi_gmem4_AWUSER;
output   m_axi_gmem4_WVALID;
input   m_axi_gmem4_WREADY;
output  [C_M_AXI_GMEM4_DATA_WIDTH - 1:0] m_axi_gmem4_WDATA;
output  [C_M_AXI_GMEM4_WSTRB_WIDTH - 1:0] m_axi_gmem4_WSTRB;
output   m_axi_gmem4_WLAST;
output  [C_M_AXI_GMEM4_ID_WIDTH - 1:0] m_axi_gmem4_WID;
output  [C_M_AXI_GMEM4_WUSER_WIDTH - 1:0] m_axi_gmem4_WUSER;
output   m_axi_gmem4_ARVALID;
input   m_axi_gmem4_ARREADY;
output  [C_M_AXI_GMEM4_ADDR_WIDTH - 1:0] m_axi_gmem4_ARADDR;
output  [C_M_AXI_GMEM4_ID_WIDTH - 1:0] m_axi_gmem4_ARID;
output  [7:0] m_axi_gmem4_ARLEN;
output  [2:0] m_axi_gmem4_ARSIZE;
output  [1:0] m_axi_gmem4_ARBURST;
output  [1:0] m_axi_gmem4_ARLOCK;
output  [3:0] m_axi_gmem4_ARCACHE;
output  [2:0] m_axi_gmem4_ARPROT;
output  [3:0] m_axi_gmem4_ARQOS;
output  [3:0] m_axi_gmem4_ARREGION;
output  [C_M_AXI_GMEM4_ARUSER_WIDTH - 1:0] m_axi_gmem4_ARUSER;
input   m_axi_gmem4_RVALID;
output   m_axi_gmem4_RREADY;
input  [C_M_AXI_GMEM4_DATA_WIDTH - 1:0] m_axi_gmem4_RDATA;
input   m_axi_gmem4_RLAST;
input  [C_M_AXI_GMEM4_ID_WIDTH - 1:0] m_axi_gmem4_RID;
input  [C_M_AXI_GMEM4_RUSER_WIDTH - 1:0] m_axi_gmem4_RUSER;
input  [1:0] m_axi_gmem4_RRESP;
input   m_axi_gmem4_BVALID;
output   m_axi_gmem4_BREADY;
input  [1:0] m_axi_gmem4_BRESP;
input  [C_M_AXI_GMEM4_ID_WIDTH - 1:0] m_axi_gmem4_BID;
input  [C_M_AXI_GMEM4_BUSER_WIDTH - 1:0] m_axi_gmem4_BUSER;

 reg    ap_rst_n_inv;
wire    ap_start;
wire    ap_ready;
wire    ap_done;
wire    ap_idle;
wire   [31:0] A_AXI;
wire   [31:0] B_AXI;
wire   [31:0] C_AXI;
wire   [31:0] D_input_AXI;
wire   [31:0] D_output_AXI;
wire    gmem0_AWREADY;
wire    gmem0_WREADY;
wire    gmem0_ARREADY;
wire    gmem0_RVALID;
wire   [31:0] gmem0_RDATA;
wire    gmem0_RLAST;
wire   [0:0] gmem0_RID;
wire   [0:0] gmem0_RUSER;
wire   [1:0] gmem0_RRESP;
wire    gmem0_BVALID;
wire   [1:0] gmem0_BRESP;
wire   [0:0] gmem0_BID;
wire   [0:0] gmem0_BUSER;
wire    gmem1_AWREADY;
wire    gmem1_WREADY;
wire    gmem1_ARREADY;
wire    gmem1_RVALID;
wire   [31:0] gmem1_RDATA;
wire    gmem1_RLAST;
wire   [0:0] gmem1_RID;
wire   [0:0] gmem1_RUSER;
wire   [1:0] gmem1_RRESP;
wire    gmem1_BVALID;
wire   [1:0] gmem1_BRESP;
wire   [0:0] gmem1_BID;
wire   [0:0] gmem1_BUSER;
wire    gmem2_AWREADY;
wire    gmem2_WREADY;
wire    gmem2_ARREADY;
wire    gmem2_RVALID;
wire   [31:0] gmem2_RDATA;
wire    gmem2_RLAST;
wire   [0:0] gmem2_RID;
wire   [0:0] gmem2_RUSER;
wire   [1:0] gmem2_RRESP;
wire    gmem2_BVALID;
wire   [1:0] gmem2_BRESP;
wire   [0:0] gmem2_BID;
wire   [0:0] gmem2_BUSER;
wire    gmem3_AWREADY;
wire    gmem3_WREADY;
wire    gmem3_ARREADY;
wire    gmem3_RVALID;
wire   [31:0] gmem3_RDATA;
wire    gmem3_RLAST;
wire   [0:0] gmem3_RID;
wire   [0:0] gmem3_RUSER;
wire   [1:0] gmem3_RRESP;
wire    gmem3_BVALID;
wire   [1:0] gmem3_BRESP;
wire   [0:0] gmem3_BID;
wire   [0:0] gmem3_BUSER;
wire    gmem4_AWREADY;
wire    gmem4_WREADY;
wire    gmem4_ARREADY;
wire    gmem4_RVALID;
wire   [31:0] gmem4_RDATA;
wire    gmem4_RLAST;
wire   [0:0] gmem4_RID;
wire   [0:0] gmem4_RUSER;
wire   [1:0] gmem4_RRESP;
wire    gmem4_BVALID;
wire   [1:0] gmem4_BRESP;
wire   [0:0] gmem4_BID;
wire   [0:0] gmem4_BUSER;
wire   [31:0] A_0_i_q0;
wire   [31:0] A_0_t_q0;
wire   [31:0] A_1_i_q0;
wire   [31:0] A_1_t_q0;
wire   [31:0] B_0_i_q0;
wire   [31:0] B_0_t_q0;
wire   [31:0] B_1_i_q0;
wire   [31:0] B_1_t_q0;
wire   [31:0] C_0_i_q0;
wire   [31:0] C_0_t_q0;
wire   [31:0] C_1_i_q0;
wire   [31:0] C_1_t_q0;
wire   [31:0] C_2_i_q0;
wire   [31:0] C_2_t_q0;
wire   [31:0] C_3_i_q0;
wire   [31:0] C_3_t_q0;
wire   [31:0] C_4_i_q0;
wire   [31:0] C_4_t_q0;
wire   [31:0] C_5_i_q0;
wire   [31:0] C_5_t_q0;
wire   [31:0] C_6_i_q0;
wire   [31:0] C_6_t_q0;
wire   [31:0] C_7_i_q0;
wire   [31:0] C_7_t_q0;
wire   [31:0] D_i_q0;
wire   [31:0] D_t_q0;
wire   [31:0] D_output_i_q0;
wire   [31:0] D_output_t_q0;
wire    readData32_U0_ap_start;
wire    readData32_U0_ap_done;
wire    readData32_U0_ap_continue;
wire    readData32_U0_ap_idle;
wire    readData32_U0_ap_ready;
wire    readData32_U0_m_axi_A_AXI_AWVALID;
wire   [31:0] readData32_U0_m_axi_A_AXI_AWADDR;
wire   [0:0] readData32_U0_m_axi_A_AXI_AWID;
wire   [31:0] readData32_U0_m_axi_A_AXI_AWLEN;
wire   [2:0] readData32_U0_m_axi_A_AXI_AWSIZE;
wire   [1:0] readData32_U0_m_axi_A_AXI_AWBURST;
wire   [1:0] readData32_U0_m_axi_A_AXI_AWLOCK;
wire   [3:0] readData32_U0_m_axi_A_AXI_AWCACHE;
wire   [2:0] readData32_U0_m_axi_A_AXI_AWPROT;
wire   [3:0] readData32_U0_m_axi_A_AXI_AWQOS;
wire   [3:0] readData32_U0_m_axi_A_AXI_AWREGION;
wire   [0:0] readData32_U0_m_axi_A_AXI_AWUSER;
wire    readData32_U0_m_axi_A_AXI_WVALID;
wire   [31:0] readData32_U0_m_axi_A_AXI_WDATA;
wire   [3:0] readData32_U0_m_axi_A_AXI_WSTRB;
wire    readData32_U0_m_axi_A_AXI_WLAST;
wire   [0:0] readData32_U0_m_axi_A_AXI_WID;
wire   [0:0] readData32_U0_m_axi_A_AXI_WUSER;
wire    readData32_U0_m_axi_A_AXI_ARVALID;
wire   [31:0] readData32_U0_m_axi_A_AXI_ARADDR;
wire   [0:0] readData32_U0_m_axi_A_AXI_ARID;
wire   [31:0] readData32_U0_m_axi_A_AXI_ARLEN;
wire   [2:0] readData32_U0_m_axi_A_AXI_ARSIZE;
wire   [1:0] readData32_U0_m_axi_A_AXI_ARBURST;
wire   [1:0] readData32_U0_m_axi_A_AXI_ARLOCK;
wire   [3:0] readData32_U0_m_axi_A_AXI_ARCACHE;
wire   [2:0] readData32_U0_m_axi_A_AXI_ARPROT;
wire   [3:0] readData32_U0_m_axi_A_AXI_ARQOS;
wire   [3:0] readData32_U0_m_axi_A_AXI_ARREGION;
wire   [0:0] readData32_U0_m_axi_A_AXI_ARUSER;
wire    readData32_U0_m_axi_A_AXI_RREADY;
wire    readData32_U0_m_axi_A_AXI_BREADY;
wire    readData32_U0_m_axi_B_AXI_AWVALID;
wire   [31:0] readData32_U0_m_axi_B_AXI_AWADDR;
wire   [0:0] readData32_U0_m_axi_B_AXI_AWID;
wire   [31:0] readData32_U0_m_axi_B_AXI_AWLEN;
wire   [2:0] readData32_U0_m_axi_B_AXI_AWSIZE;
wire   [1:0] readData32_U0_m_axi_B_AXI_AWBURST;
wire   [1:0] readData32_U0_m_axi_B_AXI_AWLOCK;
wire   [3:0] readData32_U0_m_axi_B_AXI_AWCACHE;
wire   [2:0] readData32_U0_m_axi_B_AXI_AWPROT;
wire   [3:0] readData32_U0_m_axi_B_AXI_AWQOS;
wire   [3:0] readData32_U0_m_axi_B_AXI_AWREGION;
wire   [0:0] readData32_U0_m_axi_B_AXI_AWUSER;
wire    readData32_U0_m_axi_B_AXI_WVALID;
wire   [31:0] readData32_U0_m_axi_B_AXI_WDATA;
wire   [3:0] readData32_U0_m_axi_B_AXI_WSTRB;
wire    readData32_U0_m_axi_B_AXI_WLAST;
wire   [0:0] readData32_U0_m_axi_B_AXI_WID;
wire   [0:0] readData32_U0_m_axi_B_AXI_WUSER;
wire    readData32_U0_m_axi_B_AXI_ARVALID;
wire   [31:0] readData32_U0_m_axi_B_AXI_ARADDR;
wire   [0:0] readData32_U0_m_axi_B_AXI_ARID;
wire   [31:0] readData32_U0_m_axi_B_AXI_ARLEN;
wire   [2:0] readData32_U0_m_axi_B_AXI_ARSIZE;
wire   [1:0] readData32_U0_m_axi_B_AXI_ARBURST;
wire   [1:0] readData32_U0_m_axi_B_AXI_ARLOCK;
wire   [3:0] readData32_U0_m_axi_B_AXI_ARCACHE;
wire   [2:0] readData32_U0_m_axi_B_AXI_ARPROT;
wire   [3:0] readData32_U0_m_axi_B_AXI_ARQOS;
wire   [3:0] readData32_U0_m_axi_B_AXI_ARREGION;
wire   [0:0] readData32_U0_m_axi_B_AXI_ARUSER;
wire    readData32_U0_m_axi_B_AXI_RREADY;
wire    readData32_U0_m_axi_B_AXI_BREADY;
wire    readData32_U0_m_axi_C_AXI_AWVALID;
wire   [31:0] readData32_U0_m_axi_C_AXI_AWADDR;
wire   [0:0] readData32_U0_m_axi_C_AXI_AWID;
wire   [31:0] readData32_U0_m_axi_C_AXI_AWLEN;
wire   [2:0] readData32_U0_m_axi_C_AXI_AWSIZE;
wire   [1:0] readData32_U0_m_axi_C_AXI_AWBURST;
wire   [1:0] readData32_U0_m_axi_C_AXI_AWLOCK;
wire   [3:0] readData32_U0_m_axi_C_AXI_AWCACHE;
wire   [2:0] readData32_U0_m_axi_C_AXI_AWPROT;
wire   [3:0] readData32_U0_m_axi_C_AXI_AWQOS;
wire   [3:0] readData32_U0_m_axi_C_AXI_AWREGION;
wire   [0:0] readData32_U0_m_axi_C_AXI_AWUSER;
wire    readData32_U0_m_axi_C_AXI_WVALID;
wire   [31:0] readData32_U0_m_axi_C_AXI_WDATA;
wire   [3:0] readData32_U0_m_axi_C_AXI_WSTRB;
wire    readData32_U0_m_axi_C_AXI_WLAST;
wire   [0:0] readData32_U0_m_axi_C_AXI_WID;
wire   [0:0] readData32_U0_m_axi_C_AXI_WUSER;
wire    readData32_U0_m_axi_C_AXI_ARVALID;
wire   [31:0] readData32_U0_m_axi_C_AXI_ARADDR;
wire   [0:0] readData32_U0_m_axi_C_AXI_ARID;
wire   [31:0] readData32_U0_m_axi_C_AXI_ARLEN;
wire   [2:0] readData32_U0_m_axi_C_AXI_ARSIZE;
wire   [1:0] readData32_U0_m_axi_C_AXI_ARBURST;
wire   [1:0] readData32_U0_m_axi_C_AXI_ARLOCK;
wire   [3:0] readData32_U0_m_axi_C_AXI_ARCACHE;
wire   [2:0] readData32_U0_m_axi_C_AXI_ARPROT;
wire   [3:0] readData32_U0_m_axi_C_AXI_ARQOS;
wire   [3:0] readData32_U0_m_axi_C_AXI_ARREGION;
wire   [0:0] readData32_U0_m_axi_C_AXI_ARUSER;
wire    readData32_U0_m_axi_C_AXI_RREADY;
wire    readData32_U0_m_axi_C_AXI_BREADY;
wire    readData32_U0_m_axi_D_input_AXI_AWVALID;
wire   [31:0] readData32_U0_m_axi_D_input_AXI_AWADDR;
wire   [0:0] readData32_U0_m_axi_D_input_AXI_AWID;
wire   [31:0] readData32_U0_m_axi_D_input_AXI_AWLEN;
wire   [2:0] readData32_U0_m_axi_D_input_AXI_AWSIZE;
wire   [1:0] readData32_U0_m_axi_D_input_AXI_AWBURST;
wire   [1:0] readData32_U0_m_axi_D_input_AXI_AWLOCK;
wire   [3:0] readData32_U0_m_axi_D_input_AXI_AWCACHE;
wire   [2:0] readData32_U0_m_axi_D_input_AXI_AWPROT;
wire   [3:0] readData32_U0_m_axi_D_input_AXI_AWQOS;
wire   [3:0] readData32_U0_m_axi_D_input_AXI_AWREGION;
wire   [0:0] readData32_U0_m_axi_D_input_AXI_AWUSER;
wire    readData32_U0_m_axi_D_input_AXI_WVALID;
wire   [31:0] readData32_U0_m_axi_D_input_AXI_WDATA;
wire   [3:0] readData32_U0_m_axi_D_input_AXI_WSTRB;
wire    readData32_U0_m_axi_D_input_AXI_WLAST;
wire   [0:0] readData32_U0_m_axi_D_input_AXI_WID;
wire   [0:0] readData32_U0_m_axi_D_input_AXI_WUSER;
wire    readData32_U0_m_axi_D_input_AXI_ARVALID;
wire   [31:0] readData32_U0_m_axi_D_input_AXI_ARADDR;
wire   [0:0] readData32_U0_m_axi_D_input_AXI_ARID;
wire   [31:0] readData32_U0_m_axi_D_input_AXI_ARLEN;
wire   [2:0] readData32_U0_m_axi_D_input_AXI_ARSIZE;
wire   [1:0] readData32_U0_m_axi_D_input_AXI_ARBURST;
wire   [1:0] readData32_U0_m_axi_D_input_AXI_ARLOCK;
wire   [3:0] readData32_U0_m_axi_D_input_AXI_ARCACHE;
wire   [2:0] readData32_U0_m_axi_D_input_AXI_ARPROT;
wire   [3:0] readData32_U0_m_axi_D_input_AXI_ARQOS;
wire   [3:0] readData32_U0_m_axi_D_input_AXI_ARREGION;
wire   [0:0] readData32_U0_m_axi_D_input_AXI_ARUSER;
wire    readData32_U0_m_axi_D_input_AXI_RREADY;
wire    readData32_U0_m_axi_D_input_AXI_BREADY;
wire   [7:0] readData32_U0_A_0_address0;
wire    readData32_U0_A_0_ce0;
wire    readData32_U0_A_0_we0;
wire   [31:0] readData32_U0_A_0_d0;
wire   [7:0] readData32_U0_A_1_address0;
wire    readData32_U0_A_1_ce0;
wire    readData32_U0_A_1_we0;
wire   [31:0] readData32_U0_A_1_d0;
wire   [7:0] readData32_U0_B_0_address0;
wire    readData32_U0_B_0_ce0;
wire    readData32_U0_B_0_we0;
wire   [31:0] readData32_U0_B_0_d0;
wire   [7:0] readData32_U0_B_1_address0;
wire    readData32_U0_B_1_ce0;
wire    readData32_U0_B_1_we0;
wire   [31:0] readData32_U0_B_1_d0;
wire   [6:0] readData32_U0_C_0_address0;
wire    readData32_U0_C_0_ce0;
wire    readData32_U0_C_0_we0;
wire   [31:0] readData32_U0_C_0_d0;
wire   [6:0] readData32_U0_C_1_address0;
wire    readData32_U0_C_1_ce0;
wire    readData32_U0_C_1_we0;
wire   [31:0] readData32_U0_C_1_d0;
wire   [5:0] readData32_U0_C_2_address0;
wire    readData32_U0_C_2_ce0;
wire    readData32_U0_C_2_we0;
wire   [31:0] readData32_U0_C_2_d0;
wire   [5:0] readData32_U0_C_3_address0;
wire    readData32_U0_C_3_ce0;
wire    readData32_U0_C_3_we0;
wire   [31:0] readData32_U0_C_3_d0;
wire   [5:0] readData32_U0_C_4_address0;
wire    readData32_U0_C_4_ce0;
wire    readData32_U0_C_4_we0;
wire   [31:0] readData32_U0_C_4_d0;
wire   [5:0] readData32_U0_C_5_address0;
wire    readData32_U0_C_5_ce0;
wire    readData32_U0_C_5_we0;
wire   [31:0] readData32_U0_C_5_d0;
wire   [5:0] readData32_U0_C_6_address0;
wire    readData32_U0_C_6_ce0;
wire    readData32_U0_C_6_we0;
wire   [31:0] readData32_U0_C_6_d0;
wire   [5:0] readData32_U0_C_7_address0;
wire    readData32_U0_C_7_ce0;
wire    readData32_U0_C_7_we0;
wire   [31:0] readData32_U0_C_7_d0;
wire   [8:0] readData32_U0_D_address0;
wire    readData32_U0_D_ce0;
wire    readData32_U0_D_we0;
wire   [31:0] readData32_U0_D_d0;
wire   [31:0] readData32_U0_D_output_AXI_out_din;
wire    readData32_U0_D_output_AXI_out_write;
wire    ap_channel_done_D;
wire    readData32_U0_D_full_n;
reg    ap_sync_reg_channel_write_D;
wire    ap_sync_channel_write_D;
wire    ap_channel_done_C_7;
wire    readData32_U0_C_7_full_n;
reg    ap_sync_reg_channel_write_C_7;
wire    ap_sync_channel_write_C_7;
wire    ap_channel_done_C_6;
wire    readData32_U0_C_6_full_n;
reg    ap_sync_reg_channel_write_C_6;
wire    ap_sync_channel_write_C_6;
wire    ap_channel_done_C_5;
wire    readData32_U0_C_5_full_n;
reg    ap_sync_reg_channel_write_C_5;
wire    ap_sync_channel_write_C_5;
wire    ap_channel_done_C_4;
wire    readData32_U0_C_4_full_n;
reg    ap_sync_reg_channel_write_C_4;
wire    ap_sync_channel_write_C_4;
wire    ap_channel_done_C_3;
wire    readData32_U0_C_3_full_n;
reg    ap_sync_reg_channel_write_C_3;
wire    ap_sync_channel_write_C_3;
wire    ap_channel_done_C_2;
wire    readData32_U0_C_2_full_n;
reg    ap_sync_reg_channel_write_C_2;
wire    ap_sync_channel_write_C_2;
wire    ap_channel_done_C_1;
wire    readData32_U0_C_1_full_n;
reg    ap_sync_reg_channel_write_C_1;
wire    ap_sync_channel_write_C_1;
wire    ap_channel_done_C_0;
wire    readData32_U0_C_0_full_n;
reg    ap_sync_reg_channel_write_C_0;
wire    ap_sync_channel_write_C_0;
wire    ap_channel_done_B_1;
wire    readData32_U0_B_1_full_n;
reg    ap_sync_reg_channel_write_B_1;
wire    ap_sync_channel_write_B_1;
wire    ap_channel_done_B_0;
wire    readData32_U0_B_0_full_n;
reg    ap_sync_reg_channel_write_B_0;
wire    ap_sync_channel_write_B_0;
wire    ap_channel_done_A_1;
wire    readData32_U0_A_1_full_n;
reg    ap_sync_reg_channel_write_A_1;
wire    ap_sync_channel_write_A_1;
wire    ap_channel_done_A_0;
wire    readData32_U0_A_0_full_n;
reg    ap_sync_reg_channel_write_A_0;
wire    ap_sync_channel_write_A_0;
wire   [7:0] kernel_2mm_U0_A_0_address0;
wire    kernel_2mm_U0_A_0_ce0;
wire   [31:0] kernel_2mm_U0_A_0_d0;
wire    kernel_2mm_U0_A_0_we0;
wire   [7:0] kernel_2mm_U0_A_0_address1;
wire    kernel_2mm_U0_A_0_ce1;
wire   [31:0] kernel_2mm_U0_A_0_d1;
wire    kernel_2mm_U0_A_0_we1;
wire   [7:0] kernel_2mm_U0_A_1_address0;
wire    kernel_2mm_U0_A_1_ce0;
wire   [31:0] kernel_2mm_U0_A_1_d0;
wire    kernel_2mm_U0_A_1_we0;
wire   [7:0] kernel_2mm_U0_A_1_address1;
wire    kernel_2mm_U0_A_1_ce1;
wire   [31:0] kernel_2mm_U0_A_1_d1;
wire    kernel_2mm_U0_A_1_we1;
wire   [7:0] kernel_2mm_U0_B_0_address0;
wire    kernel_2mm_U0_B_0_ce0;
wire   [31:0] kernel_2mm_U0_B_0_d0;
wire    kernel_2mm_U0_B_0_we0;
wire   [7:0] kernel_2mm_U0_B_0_address1;
wire    kernel_2mm_U0_B_0_ce1;
wire   [31:0] kernel_2mm_U0_B_0_d1;
wire    kernel_2mm_U0_B_0_we1;
wire   [7:0] kernel_2mm_U0_B_1_address0;
wire    kernel_2mm_U0_B_1_ce0;
wire   [31:0] kernel_2mm_U0_B_1_d0;
wire    kernel_2mm_U0_B_1_we0;
wire   [7:0] kernel_2mm_U0_B_1_address1;
wire    kernel_2mm_U0_B_1_ce1;
wire   [31:0] kernel_2mm_U0_B_1_d1;
wire    kernel_2mm_U0_B_1_we1;
wire   [6:0] kernel_2mm_U0_C_0_address0;
wire    kernel_2mm_U0_C_0_ce0;
wire   [31:0] kernel_2mm_U0_C_0_d0;
wire    kernel_2mm_U0_C_0_we0;
wire   [6:0] kernel_2mm_U0_C_0_address1;
wire    kernel_2mm_U0_C_0_ce1;
wire   [31:0] kernel_2mm_U0_C_0_d1;
wire    kernel_2mm_U0_C_0_we1;
wire   [6:0] kernel_2mm_U0_C_1_address0;
wire    kernel_2mm_U0_C_1_ce0;
wire   [31:0] kernel_2mm_U0_C_1_d0;
wire    kernel_2mm_U0_C_1_we0;
wire   [6:0] kernel_2mm_U0_C_1_address1;
wire    kernel_2mm_U0_C_1_ce1;
wire   [31:0] kernel_2mm_U0_C_1_d1;
wire    kernel_2mm_U0_C_1_we1;
wire   [5:0] kernel_2mm_U0_C_2_address0;
wire    kernel_2mm_U0_C_2_ce0;
wire   [31:0] kernel_2mm_U0_C_2_d0;
wire    kernel_2mm_U0_C_2_we0;
wire   [5:0] kernel_2mm_U0_C_2_address1;
wire    kernel_2mm_U0_C_2_ce1;
wire   [31:0] kernel_2mm_U0_C_2_d1;
wire    kernel_2mm_U0_C_2_we1;
wire   [5:0] kernel_2mm_U0_C_3_address0;
wire    kernel_2mm_U0_C_3_ce0;
wire   [31:0] kernel_2mm_U0_C_3_d0;
wire    kernel_2mm_U0_C_3_we0;
wire   [5:0] kernel_2mm_U0_C_3_address1;
wire    kernel_2mm_U0_C_3_ce1;
wire   [31:0] kernel_2mm_U0_C_3_d1;
wire    kernel_2mm_U0_C_3_we1;
wire   [5:0] kernel_2mm_U0_C_4_address0;
wire    kernel_2mm_U0_C_4_ce0;
wire   [31:0] kernel_2mm_U0_C_4_d0;
wire    kernel_2mm_U0_C_4_we0;
wire   [5:0] kernel_2mm_U0_C_4_address1;
wire    kernel_2mm_U0_C_4_ce1;
wire   [31:0] kernel_2mm_U0_C_4_d1;
wire    kernel_2mm_U0_C_4_we1;
wire   [5:0] kernel_2mm_U0_C_5_address0;
wire    kernel_2mm_U0_C_5_ce0;
wire   [31:0] kernel_2mm_U0_C_5_d0;
wire    kernel_2mm_U0_C_5_we0;
wire   [5:0] kernel_2mm_U0_C_5_address1;
wire    kernel_2mm_U0_C_5_ce1;
wire   [31:0] kernel_2mm_U0_C_5_d1;
wire    kernel_2mm_U0_C_5_we1;
wire   [5:0] kernel_2mm_U0_C_6_address0;
wire    kernel_2mm_U0_C_6_ce0;
wire   [31:0] kernel_2mm_U0_C_6_d0;
wire    kernel_2mm_U0_C_6_we0;
wire   [5:0] kernel_2mm_U0_C_6_address1;
wire    kernel_2mm_U0_C_6_ce1;
wire   [31:0] kernel_2mm_U0_C_6_d1;
wire    kernel_2mm_U0_C_6_we1;
wire   [5:0] kernel_2mm_U0_C_7_address0;
wire    kernel_2mm_U0_C_7_ce0;
wire   [31:0] kernel_2mm_U0_C_7_d0;
wire    kernel_2mm_U0_C_7_we0;
wire   [5:0] kernel_2mm_U0_C_7_address1;
wire    kernel_2mm_U0_C_7_ce1;
wire   [31:0] kernel_2mm_U0_C_7_d1;
wire    kernel_2mm_U0_C_7_we1;
wire   [8:0] kernel_2mm_U0_D_address0;
wire    kernel_2mm_U0_D_ce0;
wire   [31:0] kernel_2mm_U0_D_d0;
wire    kernel_2mm_U0_D_we0;
wire   [8:0] kernel_2mm_U0_D_address1;
wire    kernel_2mm_U0_D_ce1;
wire   [31:0] kernel_2mm_U0_D_d1;
wire    kernel_2mm_U0_D_we1;
wire   [8:0] kernel_2mm_U0_D_output_address0;
wire    kernel_2mm_U0_D_output_ce0;
wire   [31:0] kernel_2mm_U0_D_output_d0;
wire    kernel_2mm_U0_D_output_we0;
wire   [8:0] kernel_2mm_U0_D_output_address1;
wire    kernel_2mm_U0_D_output_ce1;
wire   [31:0] kernel_2mm_U0_D_output_d1;
wire    kernel_2mm_U0_D_output_we1;
wire    kernel_2mm_U0_A_0_read;
wire    kernel_2mm_U0_A_1_read;
wire    kernel_2mm_U0_B_0_read;
wire    kernel_2mm_U0_B_1_read;
wire    kernel_2mm_U0_C_0_read;
wire    kernel_2mm_U0_C_1_read;
wire    kernel_2mm_U0_C_2_read;
wire    kernel_2mm_U0_C_3_read;
wire    kernel_2mm_U0_C_4_read;
wire    kernel_2mm_U0_C_5_read;
wire    kernel_2mm_U0_C_6_read;
wire    kernel_2mm_U0_C_7_read;
wire    kernel_2mm_U0_D_read;
wire    kernel_2mm_U0_D_output_full_n;
wire    kernel_2mm_U0_D_output_write;
wire    kernel_2mm_U0_ap_done;
wire    kernel_2mm_U0_ap_start;
wire    kernel_2mm_U0_ap_ready;
wire    kernel_2mm_U0_ap_idle;
wire    kernel_2mm_U0_ap_continue;
wire    ap_channel_done_D_output;
wire    writeData_U0_ap_start;
wire    writeData_U0_ap_done;
wire    writeData_U0_ap_continue;
wire    writeData_U0_ap_idle;
wire    writeData_U0_ap_ready;
wire    writeData_U0_m_axi_D_output_AXI_AWVALID;
wire   [31:0] writeData_U0_m_axi_D_output_AXI_AWADDR;
wire   [0:0] writeData_U0_m_axi_D_output_AXI_AWID;
wire   [31:0] writeData_U0_m_axi_D_output_AXI_AWLEN;
wire   [2:0] writeData_U0_m_axi_D_output_AXI_AWSIZE;
wire   [1:0] writeData_U0_m_axi_D_output_AXI_AWBURST;
wire   [1:0] writeData_U0_m_axi_D_output_AXI_AWLOCK;
wire   [3:0] writeData_U0_m_axi_D_output_AXI_AWCACHE;
wire   [2:0] writeData_U0_m_axi_D_output_AXI_AWPROT;
wire   [3:0] writeData_U0_m_axi_D_output_AXI_AWQOS;
wire   [3:0] writeData_U0_m_axi_D_output_AXI_AWREGION;
wire   [0:0] writeData_U0_m_axi_D_output_AXI_AWUSER;
wire    writeData_U0_m_axi_D_output_AXI_WVALID;
wire   [31:0] writeData_U0_m_axi_D_output_AXI_WDATA;
wire   [3:0] writeData_U0_m_axi_D_output_AXI_WSTRB;
wire    writeData_U0_m_axi_D_output_AXI_WLAST;
wire   [0:0] writeData_U0_m_axi_D_output_AXI_WID;
wire   [0:0] writeData_U0_m_axi_D_output_AXI_WUSER;
wire    writeData_U0_m_axi_D_output_AXI_ARVALID;
wire   [31:0] writeData_U0_m_axi_D_output_AXI_ARADDR;
wire   [0:0] writeData_U0_m_axi_D_output_AXI_ARID;
wire   [31:0] writeData_U0_m_axi_D_output_AXI_ARLEN;
wire   [2:0] writeData_U0_m_axi_D_output_AXI_ARSIZE;
wire   [1:0] writeData_U0_m_axi_D_output_AXI_ARBURST;
wire   [1:0] writeData_U0_m_axi_D_output_AXI_ARLOCK;
wire   [3:0] writeData_U0_m_axi_D_output_AXI_ARCACHE;
wire   [2:0] writeData_U0_m_axi_D_output_AXI_ARPROT;
wire   [3:0] writeData_U0_m_axi_D_output_AXI_ARQOS;
wire   [3:0] writeData_U0_m_axi_D_output_AXI_ARREGION;
wire   [0:0] writeData_U0_m_axi_D_output_AXI_ARUSER;
wire    writeData_U0_m_axi_D_output_AXI_RREADY;
wire    writeData_U0_m_axi_D_output_AXI_BREADY;
wire    writeData_U0_D_output_AXI_offset_read;
wire   [8:0] writeData_U0_D_output_address0;
wire    writeData_U0_D_output_ce0;
wire    ap_sync_continue;
wire    A_0_i_full_n;
wire    A_0_t_empty_n;
wire    A_1_i_full_n;
wire    A_1_t_empty_n;
wire    B_0_i_full_n;
wire    B_0_t_empty_n;
wire    B_1_i_full_n;
wire    B_1_t_empty_n;
wire    C_0_i_full_n;
wire    C_0_t_empty_n;
wire    C_1_i_full_n;
wire    C_1_t_empty_n;
wire    C_2_i_full_n;
wire    C_2_t_empty_n;
wire    C_3_i_full_n;
wire    C_3_t_empty_n;
wire    C_4_i_full_n;
wire    C_4_t_empty_n;
wire    C_5_i_full_n;
wire    C_5_t_empty_n;
wire    C_6_i_full_n;
wire    C_6_t_empty_n;
wire    C_7_i_full_n;
wire    C_7_t_empty_n;
wire    D_i_full_n;
wire    D_t_empty_n;
wire    D_output_i_full_n;
wire    D_output_t_empty_n;
wire    D_output_AXI_c_full_n;
wire   [31:0] D_output_AXI_c_dout;
wire    D_output_AXI_c_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
wire    readData32_U0_start_full_n;
wire    readData32_U0_start_write;
wire    kernel_2mm_U0_start_full_n;
wire    kernel_2mm_U0_start_write;
wire    writeData_U0_start_full_n;
wire    writeData_U0_start_write;

// power-on initialization
initial begin
#0 ap_sync_reg_channel_write_D = 1'b0;
#0 ap_sync_reg_channel_write_C_7 = 1'b0;
#0 ap_sync_reg_channel_write_C_6 = 1'b0;
#0 ap_sync_reg_channel_write_C_5 = 1'b0;
#0 ap_sync_reg_channel_write_C_4 = 1'b0;
#0 ap_sync_reg_channel_write_C_3 = 1'b0;
#0 ap_sync_reg_channel_write_C_2 = 1'b0;
#0 ap_sync_reg_channel_write_C_1 = 1'b0;
#0 ap_sync_reg_channel_write_C_0 = 1'b0;
#0 ap_sync_reg_channel_write_B_1 = 1'b0;
#0 ap_sync_reg_channel_write_B_0 = 1'b0;
#0 ap_sync_reg_channel_write_A_1 = 1'b0;
#0 ap_sync_reg_channel_write_A_0 = 1'b0;
end

kernel_2mm_wrapper_for_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_FOR_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_FOR_CONTROL_DATA_WIDTH ))
kernel_2mm_wrapper_for_control_s_axi_U(
    .AWVALID(s_axi_for_control_AWVALID),
    .AWREADY(s_axi_for_control_AWREADY),
    .AWADDR(s_axi_for_control_AWADDR),
    .WVALID(s_axi_for_control_WVALID),
    .WREADY(s_axi_for_control_WREADY),
    .WDATA(s_axi_for_control_WDATA),
    .WSTRB(s_axi_for_control_WSTRB),
    .ARVALID(s_axi_for_control_ARVALID),
    .ARREADY(s_axi_for_control_ARREADY),
    .ARADDR(s_axi_for_control_ARADDR),
    .RVALID(s_axi_for_control_RVALID),
    .RREADY(s_axi_for_control_RREADY),
    .RDATA(s_axi_for_control_RDATA),
    .RRESP(s_axi_for_control_RRESP),
    .BVALID(s_axi_for_control_BVALID),
    .BREADY(s_axi_for_control_BREADY),
    .BRESP(s_axi_for_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .A_AXI(A_AXI),
    .B_AXI(B_AXI),
    .C_AXI(C_AXI),
    .D_input_AXI(D_input_AXI),
    .D_output_AXI(D_output_AXI)
);

kernel_2mm_wrapper_gmem0_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM0_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM0_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM0_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM0_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM0_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM0_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM0_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM0_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM0_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM0_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM0_CACHE_VALUE ))
kernel_2mm_wrapper_gmem0_m_axi_U(
    .AWVALID(m_axi_gmem0_AWVALID),
    .AWREADY(m_axi_gmem0_AWREADY),
    .AWADDR(m_axi_gmem0_AWADDR),
    .AWID(m_axi_gmem0_AWID),
    .AWLEN(m_axi_gmem0_AWLEN),
    .AWSIZE(m_axi_gmem0_AWSIZE),
    .AWBURST(m_axi_gmem0_AWBURST),
    .AWLOCK(m_axi_gmem0_AWLOCK),
    .AWCACHE(m_axi_gmem0_AWCACHE),
    .AWPROT(m_axi_gmem0_AWPROT),
    .AWQOS(m_axi_gmem0_AWQOS),
    .AWREGION(m_axi_gmem0_AWREGION),
    .AWUSER(m_axi_gmem0_AWUSER),
    .WVALID(m_axi_gmem0_WVALID),
    .WREADY(m_axi_gmem0_WREADY),
    .WDATA(m_axi_gmem0_WDATA),
    .WSTRB(m_axi_gmem0_WSTRB),
    .WLAST(m_axi_gmem0_WLAST),
    .WID(m_axi_gmem0_WID),
    .WUSER(m_axi_gmem0_WUSER),
    .ARVALID(m_axi_gmem0_ARVALID),
    .ARREADY(m_axi_gmem0_ARREADY),
    .ARADDR(m_axi_gmem0_ARADDR),
    .ARID(m_axi_gmem0_ARID),
    .ARLEN(m_axi_gmem0_ARLEN),
    .ARSIZE(m_axi_gmem0_ARSIZE),
    .ARBURST(m_axi_gmem0_ARBURST),
    .ARLOCK(m_axi_gmem0_ARLOCK),
    .ARCACHE(m_axi_gmem0_ARCACHE),
    .ARPROT(m_axi_gmem0_ARPROT),
    .ARQOS(m_axi_gmem0_ARQOS),
    .ARREGION(m_axi_gmem0_ARREGION),
    .ARUSER(m_axi_gmem0_ARUSER),
    .RVALID(m_axi_gmem0_RVALID),
    .RREADY(m_axi_gmem0_RREADY),
    .RDATA(m_axi_gmem0_RDATA),
    .RLAST(m_axi_gmem0_RLAST),
    .RID(m_axi_gmem0_RID),
    .RUSER(m_axi_gmem0_RUSER),
    .RRESP(m_axi_gmem0_RRESP),
    .BVALID(m_axi_gmem0_BVALID),
    .BREADY(m_axi_gmem0_BREADY),
    .BRESP(m_axi_gmem0_BRESP),
    .BID(m_axi_gmem0_BID),
    .BUSER(m_axi_gmem0_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(readData32_U0_m_axi_A_AXI_ARVALID),
    .I_ARREADY(gmem0_ARREADY),
    .I_ARADDR(readData32_U0_m_axi_A_AXI_ARADDR),
    .I_ARID(readData32_U0_m_axi_A_AXI_ARID),
    .I_ARLEN(readData32_U0_m_axi_A_AXI_ARLEN),
    .I_ARSIZE(readData32_U0_m_axi_A_AXI_ARSIZE),
    .I_ARLOCK(readData32_U0_m_axi_A_AXI_ARLOCK),
    .I_ARCACHE(readData32_U0_m_axi_A_AXI_ARCACHE),
    .I_ARQOS(readData32_U0_m_axi_A_AXI_ARQOS),
    .I_ARPROT(readData32_U0_m_axi_A_AXI_ARPROT),
    .I_ARUSER(readData32_U0_m_axi_A_AXI_ARUSER),
    .I_ARBURST(readData32_U0_m_axi_A_AXI_ARBURST),
    .I_ARREGION(readData32_U0_m_axi_A_AXI_ARREGION),
    .I_RVALID(gmem0_RVALID),
    .I_RREADY(readData32_U0_m_axi_A_AXI_RREADY),
    .I_RDATA(gmem0_RDATA),
    .I_RID(gmem0_RID),
    .I_RUSER(gmem0_RUSER),
    .I_RRESP(gmem0_RRESP),
    .I_RLAST(gmem0_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(gmem0_AWREADY),
    .I_AWADDR(32'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(gmem0_WREADY),
    .I_WDATA(32'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(4'd0),
    .I_BVALID(gmem0_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(gmem0_BRESP),
    .I_BID(gmem0_BID),
    .I_BUSER(gmem0_BUSER)
);

kernel_2mm_wrapper_gmem1_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM1_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM1_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM1_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM1_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM1_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM1_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM1_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM1_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM1_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM1_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM1_CACHE_VALUE ))
kernel_2mm_wrapper_gmem1_m_axi_U(
    .AWVALID(m_axi_gmem1_AWVALID),
    .AWREADY(m_axi_gmem1_AWREADY),
    .AWADDR(m_axi_gmem1_AWADDR),
    .AWID(m_axi_gmem1_AWID),
    .AWLEN(m_axi_gmem1_AWLEN),
    .AWSIZE(m_axi_gmem1_AWSIZE),
    .AWBURST(m_axi_gmem1_AWBURST),
    .AWLOCK(m_axi_gmem1_AWLOCK),
    .AWCACHE(m_axi_gmem1_AWCACHE),
    .AWPROT(m_axi_gmem1_AWPROT),
    .AWQOS(m_axi_gmem1_AWQOS),
    .AWREGION(m_axi_gmem1_AWREGION),
    .AWUSER(m_axi_gmem1_AWUSER),
    .WVALID(m_axi_gmem1_WVALID),
    .WREADY(m_axi_gmem1_WREADY),
    .WDATA(m_axi_gmem1_WDATA),
    .WSTRB(m_axi_gmem1_WSTRB),
    .WLAST(m_axi_gmem1_WLAST),
    .WID(m_axi_gmem1_WID),
    .WUSER(m_axi_gmem1_WUSER),
    .ARVALID(m_axi_gmem1_ARVALID),
    .ARREADY(m_axi_gmem1_ARREADY),
    .ARADDR(m_axi_gmem1_ARADDR),
    .ARID(m_axi_gmem1_ARID),
    .ARLEN(m_axi_gmem1_ARLEN),
    .ARSIZE(m_axi_gmem1_ARSIZE),
    .ARBURST(m_axi_gmem1_ARBURST),
    .ARLOCK(m_axi_gmem1_ARLOCK),
    .ARCACHE(m_axi_gmem1_ARCACHE),
    .ARPROT(m_axi_gmem1_ARPROT),
    .ARQOS(m_axi_gmem1_ARQOS),
    .ARREGION(m_axi_gmem1_ARREGION),
    .ARUSER(m_axi_gmem1_ARUSER),
    .RVALID(m_axi_gmem1_RVALID),
    .RREADY(m_axi_gmem1_RREADY),
    .RDATA(m_axi_gmem1_RDATA),
    .RLAST(m_axi_gmem1_RLAST),
    .RID(m_axi_gmem1_RID),
    .RUSER(m_axi_gmem1_RUSER),
    .RRESP(m_axi_gmem1_RRESP),
    .BVALID(m_axi_gmem1_BVALID),
    .BREADY(m_axi_gmem1_BREADY),
    .BRESP(m_axi_gmem1_BRESP),
    .BID(m_axi_gmem1_BID),
    .BUSER(m_axi_gmem1_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(readData32_U0_m_axi_B_AXI_ARVALID),
    .I_ARREADY(gmem1_ARREADY),
    .I_ARADDR(readData32_U0_m_axi_B_AXI_ARADDR),
    .I_ARID(readData32_U0_m_axi_B_AXI_ARID),
    .I_ARLEN(readData32_U0_m_axi_B_AXI_ARLEN),
    .I_ARSIZE(readData32_U0_m_axi_B_AXI_ARSIZE),
    .I_ARLOCK(readData32_U0_m_axi_B_AXI_ARLOCK),
    .I_ARCACHE(readData32_U0_m_axi_B_AXI_ARCACHE),
    .I_ARQOS(readData32_U0_m_axi_B_AXI_ARQOS),
    .I_ARPROT(readData32_U0_m_axi_B_AXI_ARPROT),
    .I_ARUSER(readData32_U0_m_axi_B_AXI_ARUSER),
    .I_ARBURST(readData32_U0_m_axi_B_AXI_ARBURST),
    .I_ARREGION(readData32_U0_m_axi_B_AXI_ARREGION),
    .I_RVALID(gmem1_RVALID),
    .I_RREADY(readData32_U0_m_axi_B_AXI_RREADY),
    .I_RDATA(gmem1_RDATA),
    .I_RID(gmem1_RID),
    .I_RUSER(gmem1_RUSER),
    .I_RRESP(gmem1_RRESP),
    .I_RLAST(gmem1_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(gmem1_AWREADY),
    .I_AWADDR(32'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(gmem1_WREADY),
    .I_WDATA(32'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(4'd0),
    .I_BVALID(gmem1_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(gmem1_BRESP),
    .I_BID(gmem1_BID),
    .I_BUSER(gmem1_BUSER)
);

kernel_2mm_wrapper_gmem2_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM2_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM2_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM2_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM2_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM2_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM2_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM2_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM2_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM2_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM2_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM2_CACHE_VALUE ))
kernel_2mm_wrapper_gmem2_m_axi_U(
    .AWVALID(m_axi_gmem2_AWVALID),
    .AWREADY(m_axi_gmem2_AWREADY),
    .AWADDR(m_axi_gmem2_AWADDR),
    .AWID(m_axi_gmem2_AWID),
    .AWLEN(m_axi_gmem2_AWLEN),
    .AWSIZE(m_axi_gmem2_AWSIZE),
    .AWBURST(m_axi_gmem2_AWBURST),
    .AWLOCK(m_axi_gmem2_AWLOCK),
    .AWCACHE(m_axi_gmem2_AWCACHE),
    .AWPROT(m_axi_gmem2_AWPROT),
    .AWQOS(m_axi_gmem2_AWQOS),
    .AWREGION(m_axi_gmem2_AWREGION),
    .AWUSER(m_axi_gmem2_AWUSER),
    .WVALID(m_axi_gmem2_WVALID),
    .WREADY(m_axi_gmem2_WREADY),
    .WDATA(m_axi_gmem2_WDATA),
    .WSTRB(m_axi_gmem2_WSTRB),
    .WLAST(m_axi_gmem2_WLAST),
    .WID(m_axi_gmem2_WID),
    .WUSER(m_axi_gmem2_WUSER),
    .ARVALID(m_axi_gmem2_ARVALID),
    .ARREADY(m_axi_gmem2_ARREADY),
    .ARADDR(m_axi_gmem2_ARADDR),
    .ARID(m_axi_gmem2_ARID),
    .ARLEN(m_axi_gmem2_ARLEN),
    .ARSIZE(m_axi_gmem2_ARSIZE),
    .ARBURST(m_axi_gmem2_ARBURST),
    .ARLOCK(m_axi_gmem2_ARLOCK),
    .ARCACHE(m_axi_gmem2_ARCACHE),
    .ARPROT(m_axi_gmem2_ARPROT),
    .ARQOS(m_axi_gmem2_ARQOS),
    .ARREGION(m_axi_gmem2_ARREGION),
    .ARUSER(m_axi_gmem2_ARUSER),
    .RVALID(m_axi_gmem2_RVALID),
    .RREADY(m_axi_gmem2_RREADY),
    .RDATA(m_axi_gmem2_RDATA),
    .RLAST(m_axi_gmem2_RLAST),
    .RID(m_axi_gmem2_RID),
    .RUSER(m_axi_gmem2_RUSER),
    .RRESP(m_axi_gmem2_RRESP),
    .BVALID(m_axi_gmem2_BVALID),
    .BREADY(m_axi_gmem2_BREADY),
    .BRESP(m_axi_gmem2_BRESP),
    .BID(m_axi_gmem2_BID),
    .BUSER(m_axi_gmem2_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(readData32_U0_m_axi_C_AXI_ARVALID),
    .I_ARREADY(gmem2_ARREADY),
    .I_ARADDR(readData32_U0_m_axi_C_AXI_ARADDR),
    .I_ARID(readData32_U0_m_axi_C_AXI_ARID),
    .I_ARLEN(readData32_U0_m_axi_C_AXI_ARLEN),
    .I_ARSIZE(readData32_U0_m_axi_C_AXI_ARSIZE),
    .I_ARLOCK(readData32_U0_m_axi_C_AXI_ARLOCK),
    .I_ARCACHE(readData32_U0_m_axi_C_AXI_ARCACHE),
    .I_ARQOS(readData32_U0_m_axi_C_AXI_ARQOS),
    .I_ARPROT(readData32_U0_m_axi_C_AXI_ARPROT),
    .I_ARUSER(readData32_U0_m_axi_C_AXI_ARUSER),
    .I_ARBURST(readData32_U0_m_axi_C_AXI_ARBURST),
    .I_ARREGION(readData32_U0_m_axi_C_AXI_ARREGION),
    .I_RVALID(gmem2_RVALID),
    .I_RREADY(readData32_U0_m_axi_C_AXI_RREADY),
    .I_RDATA(gmem2_RDATA),
    .I_RID(gmem2_RID),
    .I_RUSER(gmem2_RUSER),
    .I_RRESP(gmem2_RRESP),
    .I_RLAST(gmem2_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(gmem2_AWREADY),
    .I_AWADDR(32'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(gmem2_WREADY),
    .I_WDATA(32'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(4'd0),
    .I_BVALID(gmem2_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(gmem2_BRESP),
    .I_BID(gmem2_BID),
    .I_BUSER(gmem2_BUSER)
);

kernel_2mm_wrapper_gmem3_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM3_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM3_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM3_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM3_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM3_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM3_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM3_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM3_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM3_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM3_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM3_CACHE_VALUE ))
kernel_2mm_wrapper_gmem3_m_axi_U(
    .AWVALID(m_axi_gmem3_AWVALID),
    .AWREADY(m_axi_gmem3_AWREADY),
    .AWADDR(m_axi_gmem3_AWADDR),
    .AWID(m_axi_gmem3_AWID),
    .AWLEN(m_axi_gmem3_AWLEN),
    .AWSIZE(m_axi_gmem3_AWSIZE),
    .AWBURST(m_axi_gmem3_AWBURST),
    .AWLOCK(m_axi_gmem3_AWLOCK),
    .AWCACHE(m_axi_gmem3_AWCACHE),
    .AWPROT(m_axi_gmem3_AWPROT),
    .AWQOS(m_axi_gmem3_AWQOS),
    .AWREGION(m_axi_gmem3_AWREGION),
    .AWUSER(m_axi_gmem3_AWUSER),
    .WVALID(m_axi_gmem3_WVALID),
    .WREADY(m_axi_gmem3_WREADY),
    .WDATA(m_axi_gmem3_WDATA),
    .WSTRB(m_axi_gmem3_WSTRB),
    .WLAST(m_axi_gmem3_WLAST),
    .WID(m_axi_gmem3_WID),
    .WUSER(m_axi_gmem3_WUSER),
    .ARVALID(m_axi_gmem3_ARVALID),
    .ARREADY(m_axi_gmem3_ARREADY),
    .ARADDR(m_axi_gmem3_ARADDR),
    .ARID(m_axi_gmem3_ARID),
    .ARLEN(m_axi_gmem3_ARLEN),
    .ARSIZE(m_axi_gmem3_ARSIZE),
    .ARBURST(m_axi_gmem3_ARBURST),
    .ARLOCK(m_axi_gmem3_ARLOCK),
    .ARCACHE(m_axi_gmem3_ARCACHE),
    .ARPROT(m_axi_gmem3_ARPROT),
    .ARQOS(m_axi_gmem3_ARQOS),
    .ARREGION(m_axi_gmem3_ARREGION),
    .ARUSER(m_axi_gmem3_ARUSER),
    .RVALID(m_axi_gmem3_RVALID),
    .RREADY(m_axi_gmem3_RREADY),
    .RDATA(m_axi_gmem3_RDATA),
    .RLAST(m_axi_gmem3_RLAST),
    .RID(m_axi_gmem3_RID),
    .RUSER(m_axi_gmem3_RUSER),
    .RRESP(m_axi_gmem3_RRESP),
    .BVALID(m_axi_gmem3_BVALID),
    .BREADY(m_axi_gmem3_BREADY),
    .BRESP(m_axi_gmem3_BRESP),
    .BID(m_axi_gmem3_BID),
    .BUSER(m_axi_gmem3_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(readData32_U0_m_axi_D_input_AXI_ARVALID),
    .I_ARREADY(gmem3_ARREADY),
    .I_ARADDR(readData32_U0_m_axi_D_input_AXI_ARADDR),
    .I_ARID(readData32_U0_m_axi_D_input_AXI_ARID),
    .I_ARLEN(readData32_U0_m_axi_D_input_AXI_ARLEN),
    .I_ARSIZE(readData32_U0_m_axi_D_input_AXI_ARSIZE),
    .I_ARLOCK(readData32_U0_m_axi_D_input_AXI_ARLOCK),
    .I_ARCACHE(readData32_U0_m_axi_D_input_AXI_ARCACHE),
    .I_ARQOS(readData32_U0_m_axi_D_input_AXI_ARQOS),
    .I_ARPROT(readData32_U0_m_axi_D_input_AXI_ARPROT),
    .I_ARUSER(readData32_U0_m_axi_D_input_AXI_ARUSER),
    .I_ARBURST(readData32_U0_m_axi_D_input_AXI_ARBURST),
    .I_ARREGION(readData32_U0_m_axi_D_input_AXI_ARREGION),
    .I_RVALID(gmem3_RVALID),
    .I_RREADY(readData32_U0_m_axi_D_input_AXI_RREADY),
    .I_RDATA(gmem3_RDATA),
    .I_RID(gmem3_RID),
    .I_RUSER(gmem3_RUSER),
    .I_RRESP(gmem3_RRESP),
    .I_RLAST(gmem3_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(gmem3_AWREADY),
    .I_AWADDR(32'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(gmem3_WREADY),
    .I_WDATA(32'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(4'd0),
    .I_BVALID(gmem3_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(gmem3_BRESP),
    .I_BID(gmem3_BID),
    .I_BUSER(gmem3_BUSER)
);

kernel_2mm_wrapper_gmem4_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM4_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM4_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM4_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM4_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM4_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM4_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM4_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM4_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM4_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM4_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM4_CACHE_VALUE ))
kernel_2mm_wrapper_gmem4_m_axi_U(
    .AWVALID(m_axi_gmem4_AWVALID),
    .AWREADY(m_axi_gmem4_AWREADY),
    .AWADDR(m_axi_gmem4_AWADDR),
    .AWID(m_axi_gmem4_AWID),
    .AWLEN(m_axi_gmem4_AWLEN),
    .AWSIZE(m_axi_gmem4_AWSIZE),
    .AWBURST(m_axi_gmem4_AWBURST),
    .AWLOCK(m_axi_gmem4_AWLOCK),
    .AWCACHE(m_axi_gmem4_AWCACHE),
    .AWPROT(m_axi_gmem4_AWPROT),
    .AWQOS(m_axi_gmem4_AWQOS),
    .AWREGION(m_axi_gmem4_AWREGION),
    .AWUSER(m_axi_gmem4_AWUSER),
    .WVALID(m_axi_gmem4_WVALID),
    .WREADY(m_axi_gmem4_WREADY),
    .WDATA(m_axi_gmem4_WDATA),
    .WSTRB(m_axi_gmem4_WSTRB),
    .WLAST(m_axi_gmem4_WLAST),
    .WID(m_axi_gmem4_WID),
    .WUSER(m_axi_gmem4_WUSER),
    .ARVALID(m_axi_gmem4_ARVALID),
    .ARREADY(m_axi_gmem4_ARREADY),
    .ARADDR(m_axi_gmem4_ARADDR),
    .ARID(m_axi_gmem4_ARID),
    .ARLEN(m_axi_gmem4_ARLEN),
    .ARSIZE(m_axi_gmem4_ARSIZE),
    .ARBURST(m_axi_gmem4_ARBURST),
    .ARLOCK(m_axi_gmem4_ARLOCK),
    .ARCACHE(m_axi_gmem4_ARCACHE),
    .ARPROT(m_axi_gmem4_ARPROT),
    .ARQOS(m_axi_gmem4_ARQOS),
    .ARREGION(m_axi_gmem4_ARREGION),
    .ARUSER(m_axi_gmem4_ARUSER),
    .RVALID(m_axi_gmem4_RVALID),
    .RREADY(m_axi_gmem4_RREADY),
    .RDATA(m_axi_gmem4_RDATA),
    .RLAST(m_axi_gmem4_RLAST),
    .RID(m_axi_gmem4_RID),
    .RUSER(m_axi_gmem4_RUSER),
    .RRESP(m_axi_gmem4_RRESP),
    .BVALID(m_axi_gmem4_BVALID),
    .BREADY(m_axi_gmem4_BREADY),
    .BRESP(m_axi_gmem4_BRESP),
    .BID(m_axi_gmem4_BID),
    .BUSER(m_axi_gmem4_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(gmem4_ARREADY),
    .I_ARADDR(32'd0),
    .I_ARID(1'd0),
    .I_ARLEN(32'd0),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(gmem4_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(gmem4_RDATA),
    .I_RID(gmem4_RID),
    .I_RUSER(gmem4_RUSER),
    .I_RRESP(gmem4_RRESP),
    .I_RLAST(gmem4_RLAST),
    .I_AWVALID(writeData_U0_m_axi_D_output_AXI_AWVALID),
    .I_AWREADY(gmem4_AWREADY),
    .I_AWADDR(writeData_U0_m_axi_D_output_AXI_AWADDR),
    .I_AWID(writeData_U0_m_axi_D_output_AXI_AWID),
    .I_AWLEN(writeData_U0_m_axi_D_output_AXI_AWLEN),
    .I_AWSIZE(writeData_U0_m_axi_D_output_AXI_AWSIZE),
    .I_AWLOCK(writeData_U0_m_axi_D_output_AXI_AWLOCK),
    .I_AWCACHE(writeData_U0_m_axi_D_output_AXI_AWCACHE),
    .I_AWQOS(writeData_U0_m_axi_D_output_AXI_AWQOS),
    .I_AWPROT(writeData_U0_m_axi_D_output_AXI_AWPROT),
    .I_AWUSER(writeData_U0_m_axi_D_output_AXI_AWUSER),
    .I_AWBURST(writeData_U0_m_axi_D_output_AXI_AWBURST),
    .I_AWREGION(writeData_U0_m_axi_D_output_AXI_AWREGION),
    .I_WVALID(writeData_U0_m_axi_D_output_AXI_WVALID),
    .I_WREADY(gmem4_WREADY),
    .I_WDATA(writeData_U0_m_axi_D_output_AXI_WDATA),
    .I_WID(writeData_U0_m_axi_D_output_AXI_WID),
    .I_WUSER(writeData_U0_m_axi_D_output_AXI_WUSER),
    .I_WLAST(writeData_U0_m_axi_D_output_AXI_WLAST),
    .I_WSTRB(writeData_U0_m_axi_D_output_AXI_WSTRB),
    .I_BVALID(gmem4_BVALID),
    .I_BREADY(writeData_U0_m_axi_D_output_AXI_BREADY),
    .I_BRESP(gmem4_BRESP),
    .I_BID(gmem4_BID),
    .I_BUSER(gmem4_BUSER)
);

kernel_2mm_wrappemb6 #(
    .DataWidth( 32 ),
    .AddressRange( 192 ),
    .AddressWidth( 8 ))
A_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(readData32_U0_A_0_address0),
    .i_ce0(readData32_U0_A_0_ce0),
    .i_we0(readData32_U0_A_0_we0),
    .i_d0(readData32_U0_A_0_d0),
    .i_q0(A_0_i_q0),
    .t_address0(kernel_2mm_U0_A_0_address0),
    .t_ce0(kernel_2mm_U0_A_0_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(A_0_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(A_0_i_full_n),
    .i_write(ap_channel_done_A_0),
    .t_empty_n(A_0_t_empty_n),
    .t_read(kernel_2mm_U0_ap_ready)
);

kernel_2mm_wrappemb6 #(
    .DataWidth( 32 ),
    .AddressRange( 192 ),
    .AddressWidth( 8 ))
A_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(readData32_U0_A_1_address0),
    .i_ce0(readData32_U0_A_1_ce0),
    .i_we0(readData32_U0_A_1_we0),
    .i_d0(readData32_U0_A_1_d0),
    .i_q0(A_1_i_q0),
    .t_address0(kernel_2mm_U0_A_1_address0),
    .t_ce0(kernel_2mm_U0_A_1_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(A_1_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(A_1_i_full_n),
    .i_write(ap_channel_done_A_1),
    .t_empty_n(A_1_t_empty_n),
    .t_read(kernel_2mm_U0_ap_ready)
);

kernel_2mm_wrappeocq #(
    .DataWidth( 32 ),
    .AddressRange( 216 ),
    .AddressWidth( 8 ))
B_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(readData32_U0_B_0_address0),
    .i_ce0(readData32_U0_B_0_ce0),
    .i_we0(readData32_U0_B_0_we0),
    .i_d0(readData32_U0_B_0_d0),
    .i_q0(B_0_i_q0),
    .t_address0(kernel_2mm_U0_B_0_address0),
    .t_ce0(kernel_2mm_U0_B_0_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(B_0_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(B_0_i_full_n),
    .i_write(ap_channel_done_B_0),
    .t_empty_n(B_0_t_empty_n),
    .t_read(kernel_2mm_U0_ap_ready)
);

kernel_2mm_wrappeocq #(
    .DataWidth( 32 ),
    .AddressRange( 216 ),
    .AddressWidth( 8 ))
B_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(readData32_U0_B_1_address0),
    .i_ce0(readData32_U0_B_1_ce0),
    .i_we0(readData32_U0_B_1_we0),
    .i_d0(readData32_U0_B_1_d0),
    .i_q0(B_1_i_q0),
    .t_address0(kernel_2mm_U0_B_1_address0),
    .t_ce0(kernel_2mm_U0_B_1_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(B_1_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(B_1_i_full_n),
    .i_write(ap_channel_done_B_1),
    .t_empty_n(B_1_t_empty_n),
    .t_read(kernel_2mm_U0_ap_ready)
);

kernel_2mm_wrappeqcK #(
    .DataWidth( 32 ),
    .AddressRange( 72 ),
    .AddressWidth( 7 ))
C_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(readData32_U0_C_0_address0),
    .i_ce0(readData32_U0_C_0_ce0),
    .i_we0(readData32_U0_C_0_we0),
    .i_d0(readData32_U0_C_0_d0),
    .i_q0(C_0_i_q0),
    .t_address0(kernel_2mm_U0_C_0_address0),
    .t_ce0(kernel_2mm_U0_C_0_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(C_0_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(C_0_i_full_n),
    .i_write(ap_channel_done_C_0),
    .t_empty_n(C_0_t_empty_n),
    .t_read(kernel_2mm_U0_ap_ready)
);

kernel_2mm_wrappeqcK #(
    .DataWidth( 32 ),
    .AddressRange( 72 ),
    .AddressWidth( 7 ))
C_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(readData32_U0_C_1_address0),
    .i_ce0(readData32_U0_C_1_ce0),
    .i_we0(readData32_U0_C_1_we0),
    .i_d0(readData32_U0_C_1_d0),
    .i_q0(C_1_i_q0),
    .t_address0(kernel_2mm_U0_C_1_address0),
    .t_ce0(kernel_2mm_U0_C_1_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(C_1_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(C_1_i_full_n),
    .i_write(ap_channel_done_C_1),
    .t_empty_n(C_1_t_empty_n),
    .t_read(kernel_2mm_U0_ap_ready)
);

kernel_2mm_wrappesc4 #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
C_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(readData32_U0_C_2_address0),
    .i_ce0(readData32_U0_C_2_ce0),
    .i_we0(readData32_U0_C_2_we0),
    .i_d0(readData32_U0_C_2_d0),
    .i_q0(C_2_i_q0),
    .t_address0(kernel_2mm_U0_C_2_address0),
    .t_ce0(kernel_2mm_U0_C_2_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(C_2_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(C_2_i_full_n),
    .i_write(ap_channel_done_C_2),
    .t_empty_n(C_2_t_empty_n),
    .t_read(kernel_2mm_U0_ap_ready)
);

kernel_2mm_wrappesc4 #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
C_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(readData32_U0_C_3_address0),
    .i_ce0(readData32_U0_C_3_ce0),
    .i_we0(readData32_U0_C_3_we0),
    .i_d0(readData32_U0_C_3_d0),
    .i_q0(C_3_i_q0),
    .t_address0(kernel_2mm_U0_C_3_address0),
    .t_ce0(kernel_2mm_U0_C_3_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(C_3_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(C_3_i_full_n),
    .i_write(ap_channel_done_C_3),
    .t_empty_n(C_3_t_empty_n),
    .t_read(kernel_2mm_U0_ap_ready)
);

kernel_2mm_wrappesc4 #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
C_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(readData32_U0_C_4_address0),
    .i_ce0(readData32_U0_C_4_ce0),
    .i_we0(readData32_U0_C_4_we0),
    .i_d0(readData32_U0_C_4_d0),
    .i_q0(C_4_i_q0),
    .t_address0(kernel_2mm_U0_C_4_address0),
    .t_ce0(kernel_2mm_U0_C_4_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(C_4_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(C_4_i_full_n),
    .i_write(ap_channel_done_C_4),
    .t_empty_n(C_4_t_empty_n),
    .t_read(kernel_2mm_U0_ap_ready)
);

kernel_2mm_wrappesc4 #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
C_5_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(readData32_U0_C_5_address0),
    .i_ce0(readData32_U0_C_5_ce0),
    .i_we0(readData32_U0_C_5_we0),
    .i_d0(readData32_U0_C_5_d0),
    .i_q0(C_5_i_q0),
    .t_address0(kernel_2mm_U0_C_5_address0),
    .t_ce0(kernel_2mm_U0_C_5_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(C_5_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(C_5_i_full_n),
    .i_write(ap_channel_done_C_5),
    .t_empty_n(C_5_t_empty_n),
    .t_read(kernel_2mm_U0_ap_ready)
);

kernel_2mm_wrappesc4 #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
C_6_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(readData32_U0_C_6_address0),
    .i_ce0(readData32_U0_C_6_ce0),
    .i_we0(readData32_U0_C_6_we0),
    .i_d0(readData32_U0_C_6_d0),
    .i_q0(C_6_i_q0),
    .t_address0(kernel_2mm_U0_C_6_address0),
    .t_ce0(kernel_2mm_U0_C_6_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(C_6_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(C_6_i_full_n),
    .i_write(ap_channel_done_C_6),
    .t_empty_n(C_6_t_empty_n),
    .t_read(kernel_2mm_U0_ap_ready)
);

kernel_2mm_wrappesc4 #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
C_7_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(readData32_U0_C_7_address0),
    .i_ce0(readData32_U0_C_7_ce0),
    .i_we0(readData32_U0_C_7_we0),
    .i_d0(readData32_U0_C_7_d0),
    .i_q0(C_7_i_q0),
    .t_address0(kernel_2mm_U0_C_7_address0),
    .t_ce0(kernel_2mm_U0_C_7_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(C_7_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(C_7_i_full_n),
    .i_write(ap_channel_done_C_7),
    .t_empty_n(C_7_t_empty_n),
    .t_read(kernel_2mm_U0_ap_ready)
);

kernel_2mm_wrappeyd2 #(
    .DataWidth( 32 ),
    .AddressRange( 384 ),
    .AddressWidth( 9 ))
D_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(readData32_U0_D_address0),
    .i_ce0(readData32_U0_D_ce0),
    .i_we0(readData32_U0_D_we0),
    .i_d0(readData32_U0_D_d0),
    .i_q0(D_i_q0),
    .t_address0(kernel_2mm_U0_D_address0),
    .t_ce0(kernel_2mm_U0_D_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(D_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(D_i_full_n),
    .i_write(ap_channel_done_D),
    .t_empty_n(D_t_empty_n),
    .t_read(kernel_2mm_U0_ap_ready)
);

kernel_2mm_wrappeyd2 #(
    .DataWidth( 32 ),
    .AddressRange( 384 ),
    .AddressWidth( 9 ))
D_output_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(kernel_2mm_U0_D_output_address0),
    .i_ce0(kernel_2mm_U0_D_output_ce0),
    .i_we0(kernel_2mm_U0_D_output_we0),
    .i_d0(kernel_2mm_U0_D_output_d0),
    .i_q0(D_output_i_q0),
    .t_address0(writeData_U0_D_output_address0),
    .t_ce0(writeData_U0_D_output_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(D_output_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(D_output_i_full_n),
    .i_write(kernel_2mm_U0_ap_done),
    .t_empty_n(D_output_t_empty_n),
    .t_read(writeData_U0_ap_ready)
);

readData32 readData32_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(readData32_U0_ap_start),
    .ap_done(readData32_U0_ap_done),
    .ap_continue(readData32_U0_ap_continue),
    .ap_idle(readData32_U0_ap_idle),
    .ap_ready(readData32_U0_ap_ready),
    .m_axi_A_AXI_AWVALID(readData32_U0_m_axi_A_AXI_AWVALID),
    .m_axi_A_AXI_AWREADY(1'b0),
    .m_axi_A_AXI_AWADDR(readData32_U0_m_axi_A_AXI_AWADDR),
    .m_axi_A_AXI_AWID(readData32_U0_m_axi_A_AXI_AWID),
    .m_axi_A_AXI_AWLEN(readData32_U0_m_axi_A_AXI_AWLEN),
    .m_axi_A_AXI_AWSIZE(readData32_U0_m_axi_A_AXI_AWSIZE),
    .m_axi_A_AXI_AWBURST(readData32_U0_m_axi_A_AXI_AWBURST),
    .m_axi_A_AXI_AWLOCK(readData32_U0_m_axi_A_AXI_AWLOCK),
    .m_axi_A_AXI_AWCACHE(readData32_U0_m_axi_A_AXI_AWCACHE),
    .m_axi_A_AXI_AWPROT(readData32_U0_m_axi_A_AXI_AWPROT),
    .m_axi_A_AXI_AWQOS(readData32_U0_m_axi_A_AXI_AWQOS),
    .m_axi_A_AXI_AWREGION(readData32_U0_m_axi_A_AXI_AWREGION),
    .m_axi_A_AXI_AWUSER(readData32_U0_m_axi_A_AXI_AWUSER),
    .m_axi_A_AXI_WVALID(readData32_U0_m_axi_A_AXI_WVALID),
    .m_axi_A_AXI_WREADY(1'b0),
    .m_axi_A_AXI_WDATA(readData32_U0_m_axi_A_AXI_WDATA),
    .m_axi_A_AXI_WSTRB(readData32_U0_m_axi_A_AXI_WSTRB),
    .m_axi_A_AXI_WLAST(readData32_U0_m_axi_A_AXI_WLAST),
    .m_axi_A_AXI_WID(readData32_U0_m_axi_A_AXI_WID),
    .m_axi_A_AXI_WUSER(readData32_U0_m_axi_A_AXI_WUSER),
    .m_axi_A_AXI_ARVALID(readData32_U0_m_axi_A_AXI_ARVALID),
    .m_axi_A_AXI_ARREADY(gmem0_ARREADY),
    .m_axi_A_AXI_ARADDR(readData32_U0_m_axi_A_AXI_ARADDR),
    .m_axi_A_AXI_ARID(readData32_U0_m_axi_A_AXI_ARID),
    .m_axi_A_AXI_ARLEN(readData32_U0_m_axi_A_AXI_ARLEN),
    .m_axi_A_AXI_ARSIZE(readData32_U0_m_axi_A_AXI_ARSIZE),
    .m_axi_A_AXI_ARBURST(readData32_U0_m_axi_A_AXI_ARBURST),
    .m_axi_A_AXI_ARLOCK(readData32_U0_m_axi_A_AXI_ARLOCK),
    .m_axi_A_AXI_ARCACHE(readData32_U0_m_axi_A_AXI_ARCACHE),
    .m_axi_A_AXI_ARPROT(readData32_U0_m_axi_A_AXI_ARPROT),
    .m_axi_A_AXI_ARQOS(readData32_U0_m_axi_A_AXI_ARQOS),
    .m_axi_A_AXI_ARREGION(readData32_U0_m_axi_A_AXI_ARREGION),
    .m_axi_A_AXI_ARUSER(readData32_U0_m_axi_A_AXI_ARUSER),
    .m_axi_A_AXI_RVALID(gmem0_RVALID),
    .m_axi_A_AXI_RREADY(readData32_U0_m_axi_A_AXI_RREADY),
    .m_axi_A_AXI_RDATA(gmem0_RDATA),
    .m_axi_A_AXI_RLAST(gmem0_RLAST),
    .m_axi_A_AXI_RID(gmem0_RID),
    .m_axi_A_AXI_RUSER(gmem0_RUSER),
    .m_axi_A_AXI_RRESP(gmem0_RRESP),
    .m_axi_A_AXI_BVALID(1'b0),
    .m_axi_A_AXI_BREADY(readData32_U0_m_axi_A_AXI_BREADY),
    .m_axi_A_AXI_BRESP(2'd0),
    .m_axi_A_AXI_BID(1'd0),
    .m_axi_A_AXI_BUSER(1'd0),
    .A_AXI_offset(A_AXI),
    .m_axi_B_AXI_AWVALID(readData32_U0_m_axi_B_AXI_AWVALID),
    .m_axi_B_AXI_AWREADY(1'b0),
    .m_axi_B_AXI_AWADDR(readData32_U0_m_axi_B_AXI_AWADDR),
    .m_axi_B_AXI_AWID(readData32_U0_m_axi_B_AXI_AWID),
    .m_axi_B_AXI_AWLEN(readData32_U0_m_axi_B_AXI_AWLEN),
    .m_axi_B_AXI_AWSIZE(readData32_U0_m_axi_B_AXI_AWSIZE),
    .m_axi_B_AXI_AWBURST(readData32_U0_m_axi_B_AXI_AWBURST),
    .m_axi_B_AXI_AWLOCK(readData32_U0_m_axi_B_AXI_AWLOCK),
    .m_axi_B_AXI_AWCACHE(readData32_U0_m_axi_B_AXI_AWCACHE),
    .m_axi_B_AXI_AWPROT(readData32_U0_m_axi_B_AXI_AWPROT),
    .m_axi_B_AXI_AWQOS(readData32_U0_m_axi_B_AXI_AWQOS),
    .m_axi_B_AXI_AWREGION(readData32_U0_m_axi_B_AXI_AWREGION),
    .m_axi_B_AXI_AWUSER(readData32_U0_m_axi_B_AXI_AWUSER),
    .m_axi_B_AXI_WVALID(readData32_U0_m_axi_B_AXI_WVALID),
    .m_axi_B_AXI_WREADY(1'b0),
    .m_axi_B_AXI_WDATA(readData32_U0_m_axi_B_AXI_WDATA),
    .m_axi_B_AXI_WSTRB(readData32_U0_m_axi_B_AXI_WSTRB),
    .m_axi_B_AXI_WLAST(readData32_U0_m_axi_B_AXI_WLAST),
    .m_axi_B_AXI_WID(readData32_U0_m_axi_B_AXI_WID),
    .m_axi_B_AXI_WUSER(readData32_U0_m_axi_B_AXI_WUSER),
    .m_axi_B_AXI_ARVALID(readData32_U0_m_axi_B_AXI_ARVALID),
    .m_axi_B_AXI_ARREADY(gmem1_ARREADY),
    .m_axi_B_AXI_ARADDR(readData32_U0_m_axi_B_AXI_ARADDR),
    .m_axi_B_AXI_ARID(readData32_U0_m_axi_B_AXI_ARID),
    .m_axi_B_AXI_ARLEN(readData32_U0_m_axi_B_AXI_ARLEN),
    .m_axi_B_AXI_ARSIZE(readData32_U0_m_axi_B_AXI_ARSIZE),
    .m_axi_B_AXI_ARBURST(readData32_U0_m_axi_B_AXI_ARBURST),
    .m_axi_B_AXI_ARLOCK(readData32_U0_m_axi_B_AXI_ARLOCK),
    .m_axi_B_AXI_ARCACHE(readData32_U0_m_axi_B_AXI_ARCACHE),
    .m_axi_B_AXI_ARPROT(readData32_U0_m_axi_B_AXI_ARPROT),
    .m_axi_B_AXI_ARQOS(readData32_U0_m_axi_B_AXI_ARQOS),
    .m_axi_B_AXI_ARREGION(readData32_U0_m_axi_B_AXI_ARREGION),
    .m_axi_B_AXI_ARUSER(readData32_U0_m_axi_B_AXI_ARUSER),
    .m_axi_B_AXI_RVALID(gmem1_RVALID),
    .m_axi_B_AXI_RREADY(readData32_U0_m_axi_B_AXI_RREADY),
    .m_axi_B_AXI_RDATA(gmem1_RDATA),
    .m_axi_B_AXI_RLAST(gmem1_RLAST),
    .m_axi_B_AXI_RID(gmem1_RID),
    .m_axi_B_AXI_RUSER(gmem1_RUSER),
    .m_axi_B_AXI_RRESP(gmem1_RRESP),
    .m_axi_B_AXI_BVALID(1'b0),
    .m_axi_B_AXI_BREADY(readData32_U0_m_axi_B_AXI_BREADY),
    .m_axi_B_AXI_BRESP(2'd0),
    .m_axi_B_AXI_BID(1'd0),
    .m_axi_B_AXI_BUSER(1'd0),
    .B_AXI_offset(B_AXI),
    .m_axi_C_AXI_AWVALID(readData32_U0_m_axi_C_AXI_AWVALID),
    .m_axi_C_AXI_AWREADY(1'b0),
    .m_axi_C_AXI_AWADDR(readData32_U0_m_axi_C_AXI_AWADDR),
    .m_axi_C_AXI_AWID(readData32_U0_m_axi_C_AXI_AWID),
    .m_axi_C_AXI_AWLEN(readData32_U0_m_axi_C_AXI_AWLEN),
    .m_axi_C_AXI_AWSIZE(readData32_U0_m_axi_C_AXI_AWSIZE),
    .m_axi_C_AXI_AWBURST(readData32_U0_m_axi_C_AXI_AWBURST),
    .m_axi_C_AXI_AWLOCK(readData32_U0_m_axi_C_AXI_AWLOCK),
    .m_axi_C_AXI_AWCACHE(readData32_U0_m_axi_C_AXI_AWCACHE),
    .m_axi_C_AXI_AWPROT(readData32_U0_m_axi_C_AXI_AWPROT),
    .m_axi_C_AXI_AWQOS(readData32_U0_m_axi_C_AXI_AWQOS),
    .m_axi_C_AXI_AWREGION(readData32_U0_m_axi_C_AXI_AWREGION),
    .m_axi_C_AXI_AWUSER(readData32_U0_m_axi_C_AXI_AWUSER),
    .m_axi_C_AXI_WVALID(readData32_U0_m_axi_C_AXI_WVALID),
    .m_axi_C_AXI_WREADY(1'b0),
    .m_axi_C_AXI_WDATA(readData32_U0_m_axi_C_AXI_WDATA),
    .m_axi_C_AXI_WSTRB(readData32_U0_m_axi_C_AXI_WSTRB),
    .m_axi_C_AXI_WLAST(readData32_U0_m_axi_C_AXI_WLAST),
    .m_axi_C_AXI_WID(readData32_U0_m_axi_C_AXI_WID),
    .m_axi_C_AXI_WUSER(readData32_U0_m_axi_C_AXI_WUSER),
    .m_axi_C_AXI_ARVALID(readData32_U0_m_axi_C_AXI_ARVALID),
    .m_axi_C_AXI_ARREADY(gmem2_ARREADY),
    .m_axi_C_AXI_ARADDR(readData32_U0_m_axi_C_AXI_ARADDR),
    .m_axi_C_AXI_ARID(readData32_U0_m_axi_C_AXI_ARID),
    .m_axi_C_AXI_ARLEN(readData32_U0_m_axi_C_AXI_ARLEN),
    .m_axi_C_AXI_ARSIZE(readData32_U0_m_axi_C_AXI_ARSIZE),
    .m_axi_C_AXI_ARBURST(readData32_U0_m_axi_C_AXI_ARBURST),
    .m_axi_C_AXI_ARLOCK(readData32_U0_m_axi_C_AXI_ARLOCK),
    .m_axi_C_AXI_ARCACHE(readData32_U0_m_axi_C_AXI_ARCACHE),
    .m_axi_C_AXI_ARPROT(readData32_U0_m_axi_C_AXI_ARPROT),
    .m_axi_C_AXI_ARQOS(readData32_U0_m_axi_C_AXI_ARQOS),
    .m_axi_C_AXI_ARREGION(readData32_U0_m_axi_C_AXI_ARREGION),
    .m_axi_C_AXI_ARUSER(readData32_U0_m_axi_C_AXI_ARUSER),
    .m_axi_C_AXI_RVALID(gmem2_RVALID),
    .m_axi_C_AXI_RREADY(readData32_U0_m_axi_C_AXI_RREADY),
    .m_axi_C_AXI_RDATA(gmem2_RDATA),
    .m_axi_C_AXI_RLAST(gmem2_RLAST),
    .m_axi_C_AXI_RID(gmem2_RID),
    .m_axi_C_AXI_RUSER(gmem2_RUSER),
    .m_axi_C_AXI_RRESP(gmem2_RRESP),
    .m_axi_C_AXI_BVALID(1'b0),
    .m_axi_C_AXI_BREADY(readData32_U0_m_axi_C_AXI_BREADY),
    .m_axi_C_AXI_BRESP(2'd0),
    .m_axi_C_AXI_BID(1'd0),
    .m_axi_C_AXI_BUSER(1'd0),
    .C_AXI_offset(C_AXI),
    .m_axi_D_input_AXI_AWVALID(readData32_U0_m_axi_D_input_AXI_AWVALID),
    .m_axi_D_input_AXI_AWREADY(1'b0),
    .m_axi_D_input_AXI_AWADDR(readData32_U0_m_axi_D_input_AXI_AWADDR),
    .m_axi_D_input_AXI_AWID(readData32_U0_m_axi_D_input_AXI_AWID),
    .m_axi_D_input_AXI_AWLEN(readData32_U0_m_axi_D_input_AXI_AWLEN),
    .m_axi_D_input_AXI_AWSIZE(readData32_U0_m_axi_D_input_AXI_AWSIZE),
    .m_axi_D_input_AXI_AWBURST(readData32_U0_m_axi_D_input_AXI_AWBURST),
    .m_axi_D_input_AXI_AWLOCK(readData32_U0_m_axi_D_input_AXI_AWLOCK),
    .m_axi_D_input_AXI_AWCACHE(readData32_U0_m_axi_D_input_AXI_AWCACHE),
    .m_axi_D_input_AXI_AWPROT(readData32_U0_m_axi_D_input_AXI_AWPROT),
    .m_axi_D_input_AXI_AWQOS(readData32_U0_m_axi_D_input_AXI_AWQOS),
    .m_axi_D_input_AXI_AWREGION(readData32_U0_m_axi_D_input_AXI_AWREGION),
    .m_axi_D_input_AXI_AWUSER(readData32_U0_m_axi_D_input_AXI_AWUSER),
    .m_axi_D_input_AXI_WVALID(readData32_U0_m_axi_D_input_AXI_WVALID),
    .m_axi_D_input_AXI_WREADY(1'b0),
    .m_axi_D_input_AXI_WDATA(readData32_U0_m_axi_D_input_AXI_WDATA),
    .m_axi_D_input_AXI_WSTRB(readData32_U0_m_axi_D_input_AXI_WSTRB),
    .m_axi_D_input_AXI_WLAST(readData32_U0_m_axi_D_input_AXI_WLAST),
    .m_axi_D_input_AXI_WID(readData32_U0_m_axi_D_input_AXI_WID),
    .m_axi_D_input_AXI_WUSER(readData32_U0_m_axi_D_input_AXI_WUSER),
    .m_axi_D_input_AXI_ARVALID(readData32_U0_m_axi_D_input_AXI_ARVALID),
    .m_axi_D_input_AXI_ARREADY(gmem3_ARREADY),
    .m_axi_D_input_AXI_ARADDR(readData32_U0_m_axi_D_input_AXI_ARADDR),
    .m_axi_D_input_AXI_ARID(readData32_U0_m_axi_D_input_AXI_ARID),
    .m_axi_D_input_AXI_ARLEN(readData32_U0_m_axi_D_input_AXI_ARLEN),
    .m_axi_D_input_AXI_ARSIZE(readData32_U0_m_axi_D_input_AXI_ARSIZE),
    .m_axi_D_input_AXI_ARBURST(readData32_U0_m_axi_D_input_AXI_ARBURST),
    .m_axi_D_input_AXI_ARLOCK(readData32_U0_m_axi_D_input_AXI_ARLOCK),
    .m_axi_D_input_AXI_ARCACHE(readData32_U0_m_axi_D_input_AXI_ARCACHE),
    .m_axi_D_input_AXI_ARPROT(readData32_U0_m_axi_D_input_AXI_ARPROT),
    .m_axi_D_input_AXI_ARQOS(readData32_U0_m_axi_D_input_AXI_ARQOS),
    .m_axi_D_input_AXI_ARREGION(readData32_U0_m_axi_D_input_AXI_ARREGION),
    .m_axi_D_input_AXI_ARUSER(readData32_U0_m_axi_D_input_AXI_ARUSER),
    .m_axi_D_input_AXI_RVALID(gmem3_RVALID),
    .m_axi_D_input_AXI_RREADY(readData32_U0_m_axi_D_input_AXI_RREADY),
    .m_axi_D_input_AXI_RDATA(gmem3_RDATA),
    .m_axi_D_input_AXI_RLAST(gmem3_RLAST),
    .m_axi_D_input_AXI_RID(gmem3_RID),
    .m_axi_D_input_AXI_RUSER(gmem3_RUSER),
    .m_axi_D_input_AXI_RRESP(gmem3_RRESP),
    .m_axi_D_input_AXI_BVALID(1'b0),
    .m_axi_D_input_AXI_BREADY(readData32_U0_m_axi_D_input_AXI_BREADY),
    .m_axi_D_input_AXI_BRESP(2'd0),
    .m_axi_D_input_AXI_BID(1'd0),
    .m_axi_D_input_AXI_BUSER(1'd0),
    .D_input_AXI_offset(D_input_AXI),
    .A_0_address0(readData32_U0_A_0_address0),
    .A_0_ce0(readData32_U0_A_0_ce0),
    .A_0_we0(readData32_U0_A_0_we0),
    .A_0_d0(readData32_U0_A_0_d0),
    .A_1_address0(readData32_U0_A_1_address0),
    .A_1_ce0(readData32_U0_A_1_ce0),
    .A_1_we0(readData32_U0_A_1_we0),
    .A_1_d0(readData32_U0_A_1_d0),
    .B_0_address0(readData32_U0_B_0_address0),
    .B_0_ce0(readData32_U0_B_0_ce0),
    .B_0_we0(readData32_U0_B_0_we0),
    .B_0_d0(readData32_U0_B_0_d0),
    .B_1_address0(readData32_U0_B_1_address0),
    .B_1_ce0(readData32_U0_B_1_ce0),
    .B_1_we0(readData32_U0_B_1_we0),
    .B_1_d0(readData32_U0_B_1_d0),
    .C_0_address0(readData32_U0_C_0_address0),
    .C_0_ce0(readData32_U0_C_0_ce0),
    .C_0_we0(readData32_U0_C_0_we0),
    .C_0_d0(readData32_U0_C_0_d0),
    .C_1_address0(readData32_U0_C_1_address0),
    .C_1_ce0(readData32_U0_C_1_ce0),
    .C_1_we0(readData32_U0_C_1_we0),
    .C_1_d0(readData32_U0_C_1_d0),
    .C_2_address0(readData32_U0_C_2_address0),
    .C_2_ce0(readData32_U0_C_2_ce0),
    .C_2_we0(readData32_U0_C_2_we0),
    .C_2_d0(readData32_U0_C_2_d0),
    .C_3_address0(readData32_U0_C_3_address0),
    .C_3_ce0(readData32_U0_C_3_ce0),
    .C_3_we0(readData32_U0_C_3_we0),
    .C_3_d0(readData32_U0_C_3_d0),
    .C_4_address0(readData32_U0_C_4_address0),
    .C_4_ce0(readData32_U0_C_4_ce0),
    .C_4_we0(readData32_U0_C_4_we0),
    .C_4_d0(readData32_U0_C_4_d0),
    .C_5_address0(readData32_U0_C_5_address0),
    .C_5_ce0(readData32_U0_C_5_ce0),
    .C_5_we0(readData32_U0_C_5_we0),
    .C_5_d0(readData32_U0_C_5_d0),
    .C_6_address0(readData32_U0_C_6_address0),
    .C_6_ce0(readData32_U0_C_6_ce0),
    .C_6_we0(readData32_U0_C_6_we0),
    .C_6_d0(readData32_U0_C_6_d0),
    .C_7_address0(readData32_U0_C_7_address0),
    .C_7_ce0(readData32_U0_C_7_ce0),
    .C_7_we0(readData32_U0_C_7_we0),
    .C_7_d0(readData32_U0_C_7_d0),
    .D_address0(readData32_U0_D_address0),
    .D_ce0(readData32_U0_D_ce0),
    .D_we0(readData32_U0_D_we0),
    .D_d0(readData32_U0_D_d0),
    .D_output_AXI(D_output_AXI),
    .D_output_AXI_out_din(readData32_U0_D_output_AXI_out_din),
    .D_output_AXI_out_full_n(D_output_AXI_c_full_n),
    .D_output_AXI_out_write(readData32_U0_D_output_AXI_out_write)
);

kernel_2mm kernel_2mm_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .A_0_address0(kernel_2mm_U0_A_0_address0),
    .A_0_ce0(kernel_2mm_U0_A_0_ce0),
    .A_0_d0(kernel_2mm_U0_A_0_d0),
    .A_0_q0(A_0_t_q0),
    .A_0_we0(kernel_2mm_U0_A_0_we0),
    .A_0_address1(kernel_2mm_U0_A_0_address1),
    .A_0_ce1(kernel_2mm_U0_A_0_ce1),
    .A_0_d1(kernel_2mm_U0_A_0_d1),
    .A_0_q1(32'd0),
    .A_0_we1(kernel_2mm_U0_A_0_we1),
    .A_1_address0(kernel_2mm_U0_A_1_address0),
    .A_1_ce0(kernel_2mm_U0_A_1_ce0),
    .A_1_d0(kernel_2mm_U0_A_1_d0),
    .A_1_q0(A_1_t_q0),
    .A_1_we0(kernel_2mm_U0_A_1_we0),
    .A_1_address1(kernel_2mm_U0_A_1_address1),
    .A_1_ce1(kernel_2mm_U0_A_1_ce1),
    .A_1_d1(kernel_2mm_U0_A_1_d1),
    .A_1_q1(32'd0),
    .A_1_we1(kernel_2mm_U0_A_1_we1),
    .B_0_address0(kernel_2mm_U0_B_0_address0),
    .B_0_ce0(kernel_2mm_U0_B_0_ce0),
    .B_0_d0(kernel_2mm_U0_B_0_d0),
    .B_0_q0(B_0_t_q0),
    .B_0_we0(kernel_2mm_U0_B_0_we0),
    .B_0_address1(kernel_2mm_U0_B_0_address1),
    .B_0_ce1(kernel_2mm_U0_B_0_ce1),
    .B_0_d1(kernel_2mm_U0_B_0_d1),
    .B_0_q1(32'd0),
    .B_0_we1(kernel_2mm_U0_B_0_we1),
    .B_1_address0(kernel_2mm_U0_B_1_address0),
    .B_1_ce0(kernel_2mm_U0_B_1_ce0),
    .B_1_d0(kernel_2mm_U0_B_1_d0),
    .B_1_q0(B_1_t_q0),
    .B_1_we0(kernel_2mm_U0_B_1_we0),
    .B_1_address1(kernel_2mm_U0_B_1_address1),
    .B_1_ce1(kernel_2mm_U0_B_1_ce1),
    .B_1_d1(kernel_2mm_U0_B_1_d1),
    .B_1_q1(32'd0),
    .B_1_we1(kernel_2mm_U0_B_1_we1),
    .C_0_address0(kernel_2mm_U0_C_0_address0),
    .C_0_ce0(kernel_2mm_U0_C_0_ce0),
    .C_0_d0(kernel_2mm_U0_C_0_d0),
    .C_0_q0(C_0_t_q0),
    .C_0_we0(kernel_2mm_U0_C_0_we0),
    .C_0_address1(kernel_2mm_U0_C_0_address1),
    .C_0_ce1(kernel_2mm_U0_C_0_ce1),
    .C_0_d1(kernel_2mm_U0_C_0_d1),
    .C_0_q1(32'd0),
    .C_0_we1(kernel_2mm_U0_C_0_we1),
    .C_1_address0(kernel_2mm_U0_C_1_address0),
    .C_1_ce0(kernel_2mm_U0_C_1_ce0),
    .C_1_d0(kernel_2mm_U0_C_1_d0),
    .C_1_q0(C_1_t_q0),
    .C_1_we0(kernel_2mm_U0_C_1_we0),
    .C_1_address1(kernel_2mm_U0_C_1_address1),
    .C_1_ce1(kernel_2mm_U0_C_1_ce1),
    .C_1_d1(kernel_2mm_U0_C_1_d1),
    .C_1_q1(32'd0),
    .C_1_we1(kernel_2mm_U0_C_1_we1),
    .C_2_address0(kernel_2mm_U0_C_2_address0),
    .C_2_ce0(kernel_2mm_U0_C_2_ce0),
    .C_2_d0(kernel_2mm_U0_C_2_d0),
    .C_2_q0(C_2_t_q0),
    .C_2_we0(kernel_2mm_U0_C_2_we0),
    .C_2_address1(kernel_2mm_U0_C_2_address1),
    .C_2_ce1(kernel_2mm_U0_C_2_ce1),
    .C_2_d1(kernel_2mm_U0_C_2_d1),
    .C_2_q1(32'd0),
    .C_2_we1(kernel_2mm_U0_C_2_we1),
    .C_3_address0(kernel_2mm_U0_C_3_address0),
    .C_3_ce0(kernel_2mm_U0_C_3_ce0),
    .C_3_d0(kernel_2mm_U0_C_3_d0),
    .C_3_q0(C_3_t_q0),
    .C_3_we0(kernel_2mm_U0_C_3_we0),
    .C_3_address1(kernel_2mm_U0_C_3_address1),
    .C_3_ce1(kernel_2mm_U0_C_3_ce1),
    .C_3_d1(kernel_2mm_U0_C_3_d1),
    .C_3_q1(32'd0),
    .C_3_we1(kernel_2mm_U0_C_3_we1),
    .C_4_address0(kernel_2mm_U0_C_4_address0),
    .C_4_ce0(kernel_2mm_U0_C_4_ce0),
    .C_4_d0(kernel_2mm_U0_C_4_d0),
    .C_4_q0(C_4_t_q0),
    .C_4_we0(kernel_2mm_U0_C_4_we0),
    .C_4_address1(kernel_2mm_U0_C_4_address1),
    .C_4_ce1(kernel_2mm_U0_C_4_ce1),
    .C_4_d1(kernel_2mm_U0_C_4_d1),
    .C_4_q1(32'd0),
    .C_4_we1(kernel_2mm_U0_C_4_we1),
    .C_5_address0(kernel_2mm_U0_C_5_address0),
    .C_5_ce0(kernel_2mm_U0_C_5_ce0),
    .C_5_d0(kernel_2mm_U0_C_5_d0),
    .C_5_q0(C_5_t_q0),
    .C_5_we0(kernel_2mm_U0_C_5_we0),
    .C_5_address1(kernel_2mm_U0_C_5_address1),
    .C_5_ce1(kernel_2mm_U0_C_5_ce1),
    .C_5_d1(kernel_2mm_U0_C_5_d1),
    .C_5_q1(32'd0),
    .C_5_we1(kernel_2mm_U0_C_5_we1),
    .C_6_address0(kernel_2mm_U0_C_6_address0),
    .C_6_ce0(kernel_2mm_U0_C_6_ce0),
    .C_6_d0(kernel_2mm_U0_C_6_d0),
    .C_6_q0(C_6_t_q0),
    .C_6_we0(kernel_2mm_U0_C_6_we0),
    .C_6_address1(kernel_2mm_U0_C_6_address1),
    .C_6_ce1(kernel_2mm_U0_C_6_ce1),
    .C_6_d1(kernel_2mm_U0_C_6_d1),
    .C_6_q1(32'd0),
    .C_6_we1(kernel_2mm_U0_C_6_we1),
    .C_7_address0(kernel_2mm_U0_C_7_address0),
    .C_7_ce0(kernel_2mm_U0_C_7_ce0),
    .C_7_d0(kernel_2mm_U0_C_7_d0),
    .C_7_q0(C_7_t_q0),
    .C_7_we0(kernel_2mm_U0_C_7_we0),
    .C_7_address1(kernel_2mm_U0_C_7_address1),
    .C_7_ce1(kernel_2mm_U0_C_7_ce1),
    .C_7_d1(kernel_2mm_U0_C_7_d1),
    .C_7_q1(32'd0),
    .C_7_we1(kernel_2mm_U0_C_7_we1),
    .D_address0(kernel_2mm_U0_D_address0),
    .D_ce0(kernel_2mm_U0_D_ce0),
    .D_d0(kernel_2mm_U0_D_d0),
    .D_q0(D_t_q0),
    .D_we0(kernel_2mm_U0_D_we0),
    .D_address1(kernel_2mm_U0_D_address1),
    .D_ce1(kernel_2mm_U0_D_ce1),
    .D_d1(kernel_2mm_U0_D_d1),
    .D_q1(32'd0),
    .D_we1(kernel_2mm_U0_D_we1),
    .D_output_address0(kernel_2mm_U0_D_output_address0),
    .D_output_ce0(kernel_2mm_U0_D_output_ce0),
    .D_output_d0(kernel_2mm_U0_D_output_d0),
    .D_output_q0(32'd0),
    .D_output_we0(kernel_2mm_U0_D_output_we0),
    .D_output_address1(kernel_2mm_U0_D_output_address1),
    .D_output_ce1(kernel_2mm_U0_D_output_ce1),
    .D_output_d1(kernel_2mm_U0_D_output_d1),
    .D_output_q1(32'd0),
    .D_output_we1(kernel_2mm_U0_D_output_we1),
    .A_0_empty_n(1'b0),
    .A_0_read(kernel_2mm_U0_A_0_read),
    .A_1_empty_n(1'b0),
    .A_1_read(kernel_2mm_U0_A_1_read),
    .B_0_empty_n(1'b0),
    .B_0_read(kernel_2mm_U0_B_0_read),
    .B_1_empty_n(1'b0),
    .B_1_read(kernel_2mm_U0_B_1_read),
    .C_0_empty_n(1'b0),
    .C_0_read(kernel_2mm_U0_C_0_read),
    .C_1_empty_n(1'b0),
    .C_1_read(kernel_2mm_U0_C_1_read),
    .C_2_empty_n(1'b0),
    .C_2_read(kernel_2mm_U0_C_2_read),
    .C_3_empty_n(1'b0),
    .C_3_read(kernel_2mm_U0_C_3_read),
    .C_4_empty_n(1'b0),
    .C_4_read(kernel_2mm_U0_C_4_read),
    .C_5_empty_n(1'b0),
    .C_5_read(kernel_2mm_U0_C_5_read),
    .C_6_empty_n(1'b0),
    .C_6_read(kernel_2mm_U0_C_6_read),
    .C_7_empty_n(1'b0),
    .C_7_read(kernel_2mm_U0_C_7_read),
    .D_empty_n(1'b0),
    .D_read(kernel_2mm_U0_D_read),
    .D_output_full_n(D_output_i_full_n),
    .D_output_write(kernel_2mm_U0_D_output_write),
    .ap_done(kernel_2mm_U0_ap_done),
    .ap_start(kernel_2mm_U0_ap_start),
    .ap_ready(kernel_2mm_U0_ap_ready),
    .ap_idle(kernel_2mm_U0_ap_idle),
    .ap_continue(kernel_2mm_U0_ap_continue)
);

writeData writeData_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(writeData_U0_ap_start),
    .ap_done(writeData_U0_ap_done),
    .ap_continue(writeData_U0_ap_continue),
    .ap_idle(writeData_U0_ap_idle),
    .ap_ready(writeData_U0_ap_ready),
    .m_axi_D_output_AXI_AWVALID(writeData_U0_m_axi_D_output_AXI_AWVALID),
    .m_axi_D_output_AXI_AWREADY(gmem4_AWREADY),
    .m_axi_D_output_AXI_AWADDR(writeData_U0_m_axi_D_output_AXI_AWADDR),
    .m_axi_D_output_AXI_AWID(writeData_U0_m_axi_D_output_AXI_AWID),
    .m_axi_D_output_AXI_AWLEN(writeData_U0_m_axi_D_output_AXI_AWLEN),
    .m_axi_D_output_AXI_AWSIZE(writeData_U0_m_axi_D_output_AXI_AWSIZE),
    .m_axi_D_output_AXI_AWBURST(writeData_U0_m_axi_D_output_AXI_AWBURST),
    .m_axi_D_output_AXI_AWLOCK(writeData_U0_m_axi_D_output_AXI_AWLOCK),
    .m_axi_D_output_AXI_AWCACHE(writeData_U0_m_axi_D_output_AXI_AWCACHE),
    .m_axi_D_output_AXI_AWPROT(writeData_U0_m_axi_D_output_AXI_AWPROT),
    .m_axi_D_output_AXI_AWQOS(writeData_U0_m_axi_D_output_AXI_AWQOS),
    .m_axi_D_output_AXI_AWREGION(writeData_U0_m_axi_D_output_AXI_AWREGION),
    .m_axi_D_output_AXI_AWUSER(writeData_U0_m_axi_D_output_AXI_AWUSER),
    .m_axi_D_output_AXI_WVALID(writeData_U0_m_axi_D_output_AXI_WVALID),
    .m_axi_D_output_AXI_WREADY(gmem4_WREADY),
    .m_axi_D_output_AXI_WDATA(writeData_U0_m_axi_D_output_AXI_WDATA),
    .m_axi_D_output_AXI_WSTRB(writeData_U0_m_axi_D_output_AXI_WSTRB),
    .m_axi_D_output_AXI_WLAST(writeData_U0_m_axi_D_output_AXI_WLAST),
    .m_axi_D_output_AXI_WID(writeData_U0_m_axi_D_output_AXI_WID),
    .m_axi_D_output_AXI_WUSER(writeData_U0_m_axi_D_output_AXI_WUSER),
    .m_axi_D_output_AXI_ARVALID(writeData_U0_m_axi_D_output_AXI_ARVALID),
    .m_axi_D_output_AXI_ARREADY(1'b0),
    .m_axi_D_output_AXI_ARADDR(writeData_U0_m_axi_D_output_AXI_ARADDR),
    .m_axi_D_output_AXI_ARID(writeData_U0_m_axi_D_output_AXI_ARID),
    .m_axi_D_output_AXI_ARLEN(writeData_U0_m_axi_D_output_AXI_ARLEN),
    .m_axi_D_output_AXI_ARSIZE(writeData_U0_m_axi_D_output_AXI_ARSIZE),
    .m_axi_D_output_AXI_ARBURST(writeData_U0_m_axi_D_output_AXI_ARBURST),
    .m_axi_D_output_AXI_ARLOCK(writeData_U0_m_axi_D_output_AXI_ARLOCK),
    .m_axi_D_output_AXI_ARCACHE(writeData_U0_m_axi_D_output_AXI_ARCACHE),
    .m_axi_D_output_AXI_ARPROT(writeData_U0_m_axi_D_output_AXI_ARPROT),
    .m_axi_D_output_AXI_ARQOS(writeData_U0_m_axi_D_output_AXI_ARQOS),
    .m_axi_D_output_AXI_ARREGION(writeData_U0_m_axi_D_output_AXI_ARREGION),
    .m_axi_D_output_AXI_ARUSER(writeData_U0_m_axi_D_output_AXI_ARUSER),
    .m_axi_D_output_AXI_RVALID(1'b0),
    .m_axi_D_output_AXI_RREADY(writeData_U0_m_axi_D_output_AXI_RREADY),
    .m_axi_D_output_AXI_RDATA(32'd0),
    .m_axi_D_output_AXI_RLAST(1'b0),
    .m_axi_D_output_AXI_RID(1'd0),
    .m_axi_D_output_AXI_RUSER(1'd0),
    .m_axi_D_output_AXI_RRESP(2'd0),
    .m_axi_D_output_AXI_BVALID(gmem4_BVALID),
    .m_axi_D_output_AXI_BREADY(writeData_U0_m_axi_D_output_AXI_BREADY),
    .m_axi_D_output_AXI_BRESP(gmem4_BRESP),
    .m_axi_D_output_AXI_BID(gmem4_BID),
    .m_axi_D_output_AXI_BUSER(gmem4_BUSER),
    .D_output_AXI_offset_dout(D_output_AXI_c_dout),
    .D_output_AXI_offset_empty_n(D_output_AXI_c_empty_n),
    .D_output_AXI_offset_read(writeData_U0_D_output_AXI_offset_read),
    .D_output_address0(writeData_U0_D_output_address0),
    .D_output_ce0(writeData_U0_D_output_ce0),
    .D_output_q0(D_output_t_q0)
);

fifo_w32_d3_A D_output_AXI_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(readData32_U0_D_output_AXI_out_din),
    .if_full_n(D_output_AXI_c_full_n),
    .if_write(readData32_U0_D_output_AXI_out_write),
    .if_dout(D_output_AXI_c_dout),
    .if_empty_n(D_output_AXI_c_empty_n),
    .if_read(writeData_U0_D_output_AXI_offset_read)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_A_0 <= 1'b0;
    end else begin
        if (((readData32_U0_ap_done & readData32_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_A_0 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_A_0 <= ap_sync_channel_write_A_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_A_1 <= 1'b0;
    end else begin
        if (((readData32_U0_ap_done & readData32_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_A_1 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_A_1 <= ap_sync_channel_write_A_1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_B_0 <= 1'b0;
    end else begin
        if (((readData32_U0_ap_done & readData32_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_B_0 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_B_0 <= ap_sync_channel_write_B_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_B_1 <= 1'b0;
    end else begin
        if (((readData32_U0_ap_done & readData32_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_B_1 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_B_1 <= ap_sync_channel_write_B_1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_C_0 <= 1'b0;
    end else begin
        if (((readData32_U0_ap_done & readData32_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_C_0 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_C_0 <= ap_sync_channel_write_C_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_C_1 <= 1'b0;
    end else begin
        if (((readData32_U0_ap_done & readData32_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_C_1 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_C_1 <= ap_sync_channel_write_C_1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_C_2 <= 1'b0;
    end else begin
        if (((readData32_U0_ap_done & readData32_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_C_2 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_C_2 <= ap_sync_channel_write_C_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_C_3 <= 1'b0;
    end else begin
        if (((readData32_U0_ap_done & readData32_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_C_3 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_C_3 <= ap_sync_channel_write_C_3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_C_4 <= 1'b0;
    end else begin
        if (((readData32_U0_ap_done & readData32_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_C_4 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_C_4 <= ap_sync_channel_write_C_4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_C_5 <= 1'b0;
    end else begin
        if (((readData32_U0_ap_done & readData32_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_C_5 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_C_5 <= ap_sync_channel_write_C_5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_C_6 <= 1'b0;
    end else begin
        if (((readData32_U0_ap_done & readData32_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_C_6 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_C_6 <= ap_sync_channel_write_C_6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_C_7 <= 1'b0;
    end else begin
        if (((readData32_U0_ap_done & readData32_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_C_7 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_C_7 <= ap_sync_channel_write_C_7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_D <= 1'b0;
    end else begin
        if (((readData32_U0_ap_done & readData32_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_D <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_D <= ap_sync_channel_write_D;
        end
    end
end

assign ap_channel_done_A_0 = (readData32_U0_ap_done & (ap_sync_reg_channel_write_A_0 ^ 1'b1));

assign ap_channel_done_A_1 = (readData32_U0_ap_done & (ap_sync_reg_channel_write_A_1 ^ 1'b1));

assign ap_channel_done_B_0 = (readData32_U0_ap_done & (ap_sync_reg_channel_write_B_0 ^ 1'b1));

assign ap_channel_done_B_1 = (readData32_U0_ap_done & (ap_sync_reg_channel_write_B_1 ^ 1'b1));

assign ap_channel_done_C_0 = (readData32_U0_ap_done & (ap_sync_reg_channel_write_C_0 ^ 1'b1));

assign ap_channel_done_C_1 = (readData32_U0_ap_done & (ap_sync_reg_channel_write_C_1 ^ 1'b1));

assign ap_channel_done_C_2 = (readData32_U0_ap_done & (ap_sync_reg_channel_write_C_2 ^ 1'b1));

assign ap_channel_done_C_3 = (readData32_U0_ap_done & (ap_sync_reg_channel_write_C_3 ^ 1'b1));

assign ap_channel_done_C_4 = (readData32_U0_ap_done & (ap_sync_reg_channel_write_C_4 ^ 1'b1));

assign ap_channel_done_C_5 = (readData32_U0_ap_done & (ap_sync_reg_channel_write_C_5 ^ 1'b1));

assign ap_channel_done_C_6 = (readData32_U0_ap_done & (ap_sync_reg_channel_write_C_6 ^ 1'b1));

assign ap_channel_done_C_7 = (readData32_U0_ap_done & (ap_sync_reg_channel_write_C_7 ^ 1'b1));

assign ap_channel_done_D = (readData32_U0_ap_done & (ap_sync_reg_channel_write_D ^ 1'b1));

assign ap_channel_done_D_output = kernel_2mm_U0_ap_done;

assign ap_done = writeData_U0_ap_done;

assign ap_idle = (writeData_U0_ap_idle & readData32_U0_ap_idle & kernel_2mm_U0_ap_idle & (1'b1 ^ D_output_t_empty_n) & (1'b1 ^ D_t_empty_n) & (1'b1 ^ C_7_t_empty_n) & (1'b1 ^ C_6_t_empty_n) & (1'b1 ^ C_5_t_empty_n) & (1'b1 ^ C_4_t_empty_n) & (1'b1 ^ C_3_t_empty_n) & (1'b1 ^ C_2_t_empty_n) & (1'b1 ^ C_1_t_empty_n) & (1'b1 ^ C_0_t_empty_n) & (1'b1 ^ B_1_t_empty_n) & (1'b1 ^ B_0_t_empty_n) & (1'b1 ^ A_1_t_empty_n) & (1'b1 ^ A_0_t_empty_n));

assign ap_ready = readData32_U0_ap_ready;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_channel_write_A_0 = ((readData32_U0_A_0_full_n & ap_channel_done_A_0) | ap_sync_reg_channel_write_A_0);

assign ap_sync_channel_write_A_1 = ((readData32_U0_A_1_full_n & ap_channel_done_A_1) | ap_sync_reg_channel_write_A_1);

assign ap_sync_channel_write_B_0 = ((readData32_U0_B_0_full_n & ap_channel_done_B_0) | ap_sync_reg_channel_write_B_0);

assign ap_sync_channel_write_B_1 = ((readData32_U0_B_1_full_n & ap_channel_done_B_1) | ap_sync_reg_channel_write_B_1);

assign ap_sync_channel_write_C_0 = ((readData32_U0_C_0_full_n & ap_channel_done_C_0) | ap_sync_reg_channel_write_C_0);

assign ap_sync_channel_write_C_1 = ((readData32_U0_C_1_full_n & ap_channel_done_C_1) | ap_sync_reg_channel_write_C_1);

assign ap_sync_channel_write_C_2 = ((readData32_U0_C_2_full_n & ap_channel_done_C_2) | ap_sync_reg_channel_write_C_2);

assign ap_sync_channel_write_C_3 = ((readData32_U0_C_3_full_n & ap_channel_done_C_3) | ap_sync_reg_channel_write_C_3);

assign ap_sync_channel_write_C_4 = ((readData32_U0_C_4_full_n & ap_channel_done_C_4) | ap_sync_reg_channel_write_C_4);

assign ap_sync_channel_write_C_5 = ((readData32_U0_C_5_full_n & ap_channel_done_C_5) | ap_sync_reg_channel_write_C_5);

assign ap_sync_channel_write_C_6 = ((readData32_U0_C_6_full_n & ap_channel_done_C_6) | ap_sync_reg_channel_write_C_6);

assign ap_sync_channel_write_C_7 = ((readData32_U0_C_7_full_n & ap_channel_done_C_7) | ap_sync_reg_channel_write_C_7);

assign ap_sync_channel_write_D = ((readData32_U0_D_full_n & ap_channel_done_D) | ap_sync_reg_channel_write_D);

assign ap_sync_continue = 1'b1;

assign ap_sync_done = writeData_U0_ap_done;

assign ap_sync_ready = readData32_U0_ap_ready;

assign kernel_2mm_U0_D_output_full_n = D_output_i_full_n;

assign kernel_2mm_U0_ap_continue = kernel_2mm_U0_D_output_full_n;

assign kernel_2mm_U0_ap_start = (D_t_empty_n & C_7_t_empty_n & C_6_t_empty_n & C_5_t_empty_n & C_4_t_empty_n & C_3_t_empty_n & C_2_t_empty_n & C_1_t_empty_n & C_0_t_empty_n & B_1_t_empty_n & B_0_t_empty_n & A_1_t_empty_n & A_0_t_empty_n);

assign kernel_2mm_U0_start_full_n = 1'b1;

assign kernel_2mm_U0_start_write = 1'b0;

assign readData32_U0_A_0_full_n = A_0_i_full_n;

assign readData32_U0_A_1_full_n = A_1_i_full_n;

assign readData32_U0_B_0_full_n = B_0_i_full_n;

assign readData32_U0_B_1_full_n = B_1_i_full_n;

assign readData32_U0_C_0_full_n = C_0_i_full_n;

assign readData32_U0_C_1_full_n = C_1_i_full_n;

assign readData32_U0_C_2_full_n = C_2_i_full_n;

assign readData32_U0_C_3_full_n = C_3_i_full_n;

assign readData32_U0_C_4_full_n = C_4_i_full_n;

assign readData32_U0_C_5_full_n = C_5_i_full_n;

assign readData32_U0_C_6_full_n = C_6_i_full_n;

assign readData32_U0_C_7_full_n = C_7_i_full_n;

assign readData32_U0_D_full_n = D_i_full_n;

assign readData32_U0_ap_continue = (ap_sync_channel_write_D & ap_sync_channel_write_C_7 & ap_sync_channel_write_C_6 & ap_sync_channel_write_C_5 & ap_sync_channel_write_C_4 & ap_sync_channel_write_C_3 & ap_sync_channel_write_C_2 & ap_sync_channel_write_C_1 & ap_sync_channel_write_C_0 & ap_sync_channel_write_B_1 & ap_sync_channel_write_B_0 & ap_sync_channel_write_A_1 & ap_sync_channel_write_A_0);

assign readData32_U0_ap_start = ap_start;

assign readData32_U0_start_full_n = 1'b1;

assign readData32_U0_start_write = 1'b0;

assign writeData_U0_ap_continue = 1'b1;

assign writeData_U0_ap_start = D_output_t_empty_n;

assign writeData_U0_start_full_n = 1'b1;

assign writeData_U0_start_write = 1'b0;

endmodule //kernel_2mm_wrapper
