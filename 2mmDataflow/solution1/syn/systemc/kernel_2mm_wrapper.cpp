// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "kernel_2mm_wrapper.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const int kernel_2mm_wrapper::C_S_AXI_DATA_WIDTH = "100000";
const int kernel_2mm_wrapper::C_S_AXI_WSTRB_WIDTH = "100";
const int kernel_2mm_wrapper::C_S_AXI_ADDR_WIDTH = "100000";
const sc_logic kernel_2mm_wrapper::ap_const_logic_1 = sc_dt::Log_1;
const int kernel_2mm_wrapper::C_M_AXI_GMEM0_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int kernel_2mm_wrapper::C_M_AXI_GMEM0_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int kernel_2mm_wrapper::C_M_AXI_GMEM0_CACHE_VALUE = "11";
const int kernel_2mm_wrapper::C_M_AXI_ID_WIDTH = "1";
const int kernel_2mm_wrapper::C_M_AXI_ADDR_WIDTH = "100000";
const int kernel_2mm_wrapper::C_M_AXI_DATA_WIDTH = "100000";
const int kernel_2mm_wrapper::C_M_AXI_WSTRB_WIDTH = "100";
const int kernel_2mm_wrapper::C_M_AXI_AWUSER_WIDTH = "1";
const int kernel_2mm_wrapper::C_M_AXI_ARUSER_WIDTH = "1";
const int kernel_2mm_wrapper::C_M_AXI_WUSER_WIDTH = "1";
const int kernel_2mm_wrapper::C_M_AXI_RUSER_WIDTH = "1";
const int kernel_2mm_wrapper::C_M_AXI_BUSER_WIDTH = "1";
const int kernel_2mm_wrapper::C_M_AXI_GMEM1_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int kernel_2mm_wrapper::C_M_AXI_GMEM1_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int kernel_2mm_wrapper::C_M_AXI_GMEM1_CACHE_VALUE = "11";
const int kernel_2mm_wrapper::C_M_AXI_GMEM2_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int kernel_2mm_wrapper::C_M_AXI_GMEM2_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int kernel_2mm_wrapper::C_M_AXI_GMEM2_CACHE_VALUE = "11";
const int kernel_2mm_wrapper::C_M_AXI_GMEM3_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int kernel_2mm_wrapper::C_M_AXI_GMEM3_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int kernel_2mm_wrapper::C_M_AXI_GMEM3_CACHE_VALUE = "11";
const int kernel_2mm_wrapper::C_M_AXI_GMEM4_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int kernel_2mm_wrapper::C_M_AXI_GMEM4_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int kernel_2mm_wrapper::C_M_AXI_GMEM4_CACHE_VALUE = "11";
const sc_logic kernel_2mm_wrapper::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<32> kernel_2mm_wrapper::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> kernel_2mm_wrapper::ap_const_lv32_1 = "1";
const sc_lv<1> kernel_2mm_wrapper::ap_const_lv1_0 = "0";
const sc_lv<1> kernel_2mm_wrapper::ap_const_lv1_1 = "1";
const sc_lv<3> kernel_2mm_wrapper::ap_const_lv3_0 = "000";
const sc_lv<3> kernel_2mm_wrapper::ap_const_lv3_1 = "1";
const sc_lv<2> kernel_2mm_wrapper::ap_const_lv2_0 = "00";
const sc_lv<2> kernel_2mm_wrapper::ap_const_lv2_1 = "1";
const sc_lv<4> kernel_2mm_wrapper::ap_const_lv4_0 = "0000";
const sc_lv<4> kernel_2mm_wrapper::ap_const_lv4_1 = "1";
const bool kernel_2mm_wrapper::ap_const_boolean_1 = true;

kernel_2mm_wrapper::kernel_2mm_wrapper(sc_module_name name) : sc_module(name), mVcdFile(0) {
    kernel_2mm_wrapper_for_control_s_axi_U = new kernel_2mm_wrapper_for_control_s_axi<C_S_AXI_FOR_CONTROL_ADDR_WIDTH,C_S_AXI_FOR_CONTROL_DATA_WIDTH>("kernel_2mm_wrapper_for_control_s_axi_U");
    kernel_2mm_wrapper_for_control_s_axi_U->AWVALID(s_axi_for_control_AWVALID);
    kernel_2mm_wrapper_for_control_s_axi_U->AWREADY(s_axi_for_control_AWREADY);
    kernel_2mm_wrapper_for_control_s_axi_U->AWADDR(s_axi_for_control_AWADDR);
    kernel_2mm_wrapper_for_control_s_axi_U->WVALID(s_axi_for_control_WVALID);
    kernel_2mm_wrapper_for_control_s_axi_U->WREADY(s_axi_for_control_WREADY);
    kernel_2mm_wrapper_for_control_s_axi_U->WDATA(s_axi_for_control_WDATA);
    kernel_2mm_wrapper_for_control_s_axi_U->WSTRB(s_axi_for_control_WSTRB);
    kernel_2mm_wrapper_for_control_s_axi_U->ARVALID(s_axi_for_control_ARVALID);
    kernel_2mm_wrapper_for_control_s_axi_U->ARREADY(s_axi_for_control_ARREADY);
    kernel_2mm_wrapper_for_control_s_axi_U->ARADDR(s_axi_for_control_ARADDR);
    kernel_2mm_wrapper_for_control_s_axi_U->RVALID(s_axi_for_control_RVALID);
    kernel_2mm_wrapper_for_control_s_axi_U->RREADY(s_axi_for_control_RREADY);
    kernel_2mm_wrapper_for_control_s_axi_U->RDATA(s_axi_for_control_RDATA);
    kernel_2mm_wrapper_for_control_s_axi_U->RRESP(s_axi_for_control_RRESP);
    kernel_2mm_wrapper_for_control_s_axi_U->BVALID(s_axi_for_control_BVALID);
    kernel_2mm_wrapper_for_control_s_axi_U->BREADY(s_axi_for_control_BREADY);
    kernel_2mm_wrapper_for_control_s_axi_U->BRESP(s_axi_for_control_BRESP);
    kernel_2mm_wrapper_for_control_s_axi_U->ACLK(ap_clk);
    kernel_2mm_wrapper_for_control_s_axi_U->ARESET(ap_rst_n_inv);
    kernel_2mm_wrapper_for_control_s_axi_U->ACLK_EN(ap_var_for_const0);
    kernel_2mm_wrapper_for_control_s_axi_U->ap_start(ap_start);
    kernel_2mm_wrapper_for_control_s_axi_U->interrupt(interrupt);
    kernel_2mm_wrapper_for_control_s_axi_U->ap_ready(ap_ready);
    kernel_2mm_wrapper_for_control_s_axi_U->ap_done(ap_done);
    kernel_2mm_wrapper_for_control_s_axi_U->ap_idle(ap_idle);
    kernel_2mm_wrapper_for_control_s_axi_U->A_AXI(A_AXI);
    kernel_2mm_wrapper_for_control_s_axi_U->B_AXI(B_AXI);
    kernel_2mm_wrapper_for_control_s_axi_U->C_AXI(C_AXI);
    kernel_2mm_wrapper_for_control_s_axi_U->D_input_AXI(D_input_AXI);
    kernel_2mm_wrapper_for_control_s_axi_U->D_output_AXI(D_output_AXI);
    kernel_2mm_wrapper_gmem0_m_axi_U = new kernel_2mm_wrapper_gmem0_m_axi<0,32,32,5,16,16,16,16,C_M_AXI_GMEM0_ID_WIDTH,C_M_AXI_GMEM0_ADDR_WIDTH,C_M_AXI_GMEM0_DATA_WIDTH,C_M_AXI_GMEM0_AWUSER_WIDTH,C_M_AXI_GMEM0_ARUSER_WIDTH,C_M_AXI_GMEM0_WUSER_WIDTH,C_M_AXI_GMEM0_RUSER_WIDTH,C_M_AXI_GMEM0_BUSER_WIDTH,C_M_AXI_GMEM0_USER_VALUE,C_M_AXI_GMEM0_PROT_VALUE,C_M_AXI_GMEM0_CACHE_VALUE>("kernel_2mm_wrapper_gmem0_m_axi_U");
    kernel_2mm_wrapper_gmem0_m_axi_U->AWVALID(m_axi_gmem0_AWVALID);
    kernel_2mm_wrapper_gmem0_m_axi_U->AWREADY(m_axi_gmem0_AWREADY);
    kernel_2mm_wrapper_gmem0_m_axi_U->AWADDR(m_axi_gmem0_AWADDR);
    kernel_2mm_wrapper_gmem0_m_axi_U->AWID(m_axi_gmem0_AWID);
    kernel_2mm_wrapper_gmem0_m_axi_U->AWLEN(m_axi_gmem0_AWLEN);
    kernel_2mm_wrapper_gmem0_m_axi_U->AWSIZE(m_axi_gmem0_AWSIZE);
    kernel_2mm_wrapper_gmem0_m_axi_U->AWBURST(m_axi_gmem0_AWBURST);
    kernel_2mm_wrapper_gmem0_m_axi_U->AWLOCK(m_axi_gmem0_AWLOCK);
    kernel_2mm_wrapper_gmem0_m_axi_U->AWCACHE(m_axi_gmem0_AWCACHE);
    kernel_2mm_wrapper_gmem0_m_axi_U->AWPROT(m_axi_gmem0_AWPROT);
    kernel_2mm_wrapper_gmem0_m_axi_U->AWQOS(m_axi_gmem0_AWQOS);
    kernel_2mm_wrapper_gmem0_m_axi_U->AWREGION(m_axi_gmem0_AWREGION);
    kernel_2mm_wrapper_gmem0_m_axi_U->AWUSER(m_axi_gmem0_AWUSER);
    kernel_2mm_wrapper_gmem0_m_axi_U->WVALID(m_axi_gmem0_WVALID);
    kernel_2mm_wrapper_gmem0_m_axi_U->WREADY(m_axi_gmem0_WREADY);
    kernel_2mm_wrapper_gmem0_m_axi_U->WDATA(m_axi_gmem0_WDATA);
    kernel_2mm_wrapper_gmem0_m_axi_U->WSTRB(m_axi_gmem0_WSTRB);
    kernel_2mm_wrapper_gmem0_m_axi_U->WLAST(m_axi_gmem0_WLAST);
    kernel_2mm_wrapper_gmem0_m_axi_U->WID(m_axi_gmem0_WID);
    kernel_2mm_wrapper_gmem0_m_axi_U->WUSER(m_axi_gmem0_WUSER);
    kernel_2mm_wrapper_gmem0_m_axi_U->ARVALID(m_axi_gmem0_ARVALID);
    kernel_2mm_wrapper_gmem0_m_axi_U->ARREADY(m_axi_gmem0_ARREADY);
    kernel_2mm_wrapper_gmem0_m_axi_U->ARADDR(m_axi_gmem0_ARADDR);
    kernel_2mm_wrapper_gmem0_m_axi_U->ARID(m_axi_gmem0_ARID);
    kernel_2mm_wrapper_gmem0_m_axi_U->ARLEN(m_axi_gmem0_ARLEN);
    kernel_2mm_wrapper_gmem0_m_axi_U->ARSIZE(m_axi_gmem0_ARSIZE);
    kernel_2mm_wrapper_gmem0_m_axi_U->ARBURST(m_axi_gmem0_ARBURST);
    kernel_2mm_wrapper_gmem0_m_axi_U->ARLOCK(m_axi_gmem0_ARLOCK);
    kernel_2mm_wrapper_gmem0_m_axi_U->ARCACHE(m_axi_gmem0_ARCACHE);
    kernel_2mm_wrapper_gmem0_m_axi_U->ARPROT(m_axi_gmem0_ARPROT);
    kernel_2mm_wrapper_gmem0_m_axi_U->ARQOS(m_axi_gmem0_ARQOS);
    kernel_2mm_wrapper_gmem0_m_axi_U->ARREGION(m_axi_gmem0_ARREGION);
    kernel_2mm_wrapper_gmem0_m_axi_U->ARUSER(m_axi_gmem0_ARUSER);
    kernel_2mm_wrapper_gmem0_m_axi_U->RVALID(m_axi_gmem0_RVALID);
    kernel_2mm_wrapper_gmem0_m_axi_U->RREADY(m_axi_gmem0_RREADY);
    kernel_2mm_wrapper_gmem0_m_axi_U->RDATA(m_axi_gmem0_RDATA);
    kernel_2mm_wrapper_gmem0_m_axi_U->RLAST(m_axi_gmem0_RLAST);
    kernel_2mm_wrapper_gmem0_m_axi_U->RID(m_axi_gmem0_RID);
    kernel_2mm_wrapper_gmem0_m_axi_U->RUSER(m_axi_gmem0_RUSER);
    kernel_2mm_wrapper_gmem0_m_axi_U->RRESP(m_axi_gmem0_RRESP);
    kernel_2mm_wrapper_gmem0_m_axi_U->BVALID(m_axi_gmem0_BVALID);
    kernel_2mm_wrapper_gmem0_m_axi_U->BREADY(m_axi_gmem0_BREADY);
    kernel_2mm_wrapper_gmem0_m_axi_U->BRESP(m_axi_gmem0_BRESP);
    kernel_2mm_wrapper_gmem0_m_axi_U->BID(m_axi_gmem0_BID);
    kernel_2mm_wrapper_gmem0_m_axi_U->BUSER(m_axi_gmem0_BUSER);
    kernel_2mm_wrapper_gmem0_m_axi_U->ACLK(ap_clk);
    kernel_2mm_wrapper_gmem0_m_axi_U->ARESET(ap_rst_n_inv);
    kernel_2mm_wrapper_gmem0_m_axi_U->ACLK_EN(ap_var_for_const0);
    kernel_2mm_wrapper_gmem0_m_axi_U->I_ARVALID(readData32_U0_m_axi_A_AXI_ARVALID);
    kernel_2mm_wrapper_gmem0_m_axi_U->I_ARREADY(gmem0_ARREADY);
    kernel_2mm_wrapper_gmem0_m_axi_U->I_ARADDR(readData32_U0_m_axi_A_AXI_ARADDR);
    kernel_2mm_wrapper_gmem0_m_axi_U->I_ARID(readData32_U0_m_axi_A_AXI_ARID);
    kernel_2mm_wrapper_gmem0_m_axi_U->I_ARLEN(readData32_U0_m_axi_A_AXI_ARLEN);
    kernel_2mm_wrapper_gmem0_m_axi_U->I_ARSIZE(readData32_U0_m_axi_A_AXI_ARSIZE);
    kernel_2mm_wrapper_gmem0_m_axi_U->I_ARLOCK(readData32_U0_m_axi_A_AXI_ARLOCK);
    kernel_2mm_wrapper_gmem0_m_axi_U->I_ARCACHE(readData32_U0_m_axi_A_AXI_ARCACHE);
    kernel_2mm_wrapper_gmem0_m_axi_U->I_ARQOS(readData32_U0_m_axi_A_AXI_ARQOS);
    kernel_2mm_wrapper_gmem0_m_axi_U->I_ARPROT(readData32_U0_m_axi_A_AXI_ARPROT);
    kernel_2mm_wrapper_gmem0_m_axi_U->I_ARUSER(readData32_U0_m_axi_A_AXI_ARUSER);
    kernel_2mm_wrapper_gmem0_m_axi_U->I_ARBURST(readData32_U0_m_axi_A_AXI_ARBURST);
    kernel_2mm_wrapper_gmem0_m_axi_U->I_ARREGION(readData32_U0_m_axi_A_AXI_ARREGION);
    kernel_2mm_wrapper_gmem0_m_axi_U->I_RVALID(gmem0_RVALID);
    kernel_2mm_wrapper_gmem0_m_axi_U->I_RREADY(readData32_U0_m_axi_A_AXI_RREADY);
    kernel_2mm_wrapper_gmem0_m_axi_U->I_RDATA(gmem0_RDATA);
    kernel_2mm_wrapper_gmem0_m_axi_U->I_RID(gmem0_RID);
    kernel_2mm_wrapper_gmem0_m_axi_U->I_RUSER(gmem0_RUSER);
    kernel_2mm_wrapper_gmem0_m_axi_U->I_RRESP(gmem0_RRESP);
    kernel_2mm_wrapper_gmem0_m_axi_U->I_RLAST(gmem0_RLAST);
    kernel_2mm_wrapper_gmem0_m_axi_U->I_AWVALID(ap_var_for_const1);
    kernel_2mm_wrapper_gmem0_m_axi_U->I_AWREADY(gmem0_AWREADY);
    kernel_2mm_wrapper_gmem0_m_axi_U->I_AWADDR(ap_var_for_const2);
    kernel_2mm_wrapper_gmem0_m_axi_U->I_AWID(ap_var_for_const3);
    kernel_2mm_wrapper_gmem0_m_axi_U->I_AWLEN(ap_var_for_const2);
    kernel_2mm_wrapper_gmem0_m_axi_U->I_AWSIZE(ap_var_for_const4);
    kernel_2mm_wrapper_gmem0_m_axi_U->I_AWLOCK(ap_var_for_const5);
    kernel_2mm_wrapper_gmem0_m_axi_U->I_AWCACHE(ap_var_for_const6);
    kernel_2mm_wrapper_gmem0_m_axi_U->I_AWQOS(ap_var_for_const6);
    kernel_2mm_wrapper_gmem0_m_axi_U->I_AWPROT(ap_var_for_const4);
    kernel_2mm_wrapper_gmem0_m_axi_U->I_AWUSER(ap_var_for_const3);
    kernel_2mm_wrapper_gmem0_m_axi_U->I_AWBURST(ap_var_for_const5);
    kernel_2mm_wrapper_gmem0_m_axi_U->I_AWREGION(ap_var_for_const6);
    kernel_2mm_wrapper_gmem0_m_axi_U->I_WVALID(ap_var_for_const1);
    kernel_2mm_wrapper_gmem0_m_axi_U->I_WREADY(gmem0_WREADY);
    kernel_2mm_wrapper_gmem0_m_axi_U->I_WDATA(ap_var_for_const2);
    kernel_2mm_wrapper_gmem0_m_axi_U->I_WID(ap_var_for_const3);
    kernel_2mm_wrapper_gmem0_m_axi_U->I_WUSER(ap_var_for_const3);
    kernel_2mm_wrapper_gmem0_m_axi_U->I_WLAST(ap_var_for_const1);
    kernel_2mm_wrapper_gmem0_m_axi_U->I_WSTRB(ap_var_for_const6);
    kernel_2mm_wrapper_gmem0_m_axi_U->I_BVALID(gmem0_BVALID);
    kernel_2mm_wrapper_gmem0_m_axi_U->I_BREADY(ap_var_for_const1);
    kernel_2mm_wrapper_gmem0_m_axi_U->I_BRESP(gmem0_BRESP);
    kernel_2mm_wrapper_gmem0_m_axi_U->I_BID(gmem0_BID);
    kernel_2mm_wrapper_gmem0_m_axi_U->I_BUSER(gmem0_BUSER);
    kernel_2mm_wrapper_gmem1_m_axi_U = new kernel_2mm_wrapper_gmem1_m_axi<0,32,32,5,16,16,16,16,C_M_AXI_GMEM1_ID_WIDTH,C_M_AXI_GMEM1_ADDR_WIDTH,C_M_AXI_GMEM1_DATA_WIDTH,C_M_AXI_GMEM1_AWUSER_WIDTH,C_M_AXI_GMEM1_ARUSER_WIDTH,C_M_AXI_GMEM1_WUSER_WIDTH,C_M_AXI_GMEM1_RUSER_WIDTH,C_M_AXI_GMEM1_BUSER_WIDTH,C_M_AXI_GMEM1_USER_VALUE,C_M_AXI_GMEM1_PROT_VALUE,C_M_AXI_GMEM1_CACHE_VALUE>("kernel_2mm_wrapper_gmem1_m_axi_U");
    kernel_2mm_wrapper_gmem1_m_axi_U->AWVALID(m_axi_gmem1_AWVALID);
    kernel_2mm_wrapper_gmem1_m_axi_U->AWREADY(m_axi_gmem1_AWREADY);
    kernel_2mm_wrapper_gmem1_m_axi_U->AWADDR(m_axi_gmem1_AWADDR);
    kernel_2mm_wrapper_gmem1_m_axi_U->AWID(m_axi_gmem1_AWID);
    kernel_2mm_wrapper_gmem1_m_axi_U->AWLEN(m_axi_gmem1_AWLEN);
    kernel_2mm_wrapper_gmem1_m_axi_U->AWSIZE(m_axi_gmem1_AWSIZE);
    kernel_2mm_wrapper_gmem1_m_axi_U->AWBURST(m_axi_gmem1_AWBURST);
    kernel_2mm_wrapper_gmem1_m_axi_U->AWLOCK(m_axi_gmem1_AWLOCK);
    kernel_2mm_wrapper_gmem1_m_axi_U->AWCACHE(m_axi_gmem1_AWCACHE);
    kernel_2mm_wrapper_gmem1_m_axi_U->AWPROT(m_axi_gmem1_AWPROT);
    kernel_2mm_wrapper_gmem1_m_axi_U->AWQOS(m_axi_gmem1_AWQOS);
    kernel_2mm_wrapper_gmem1_m_axi_U->AWREGION(m_axi_gmem1_AWREGION);
    kernel_2mm_wrapper_gmem1_m_axi_U->AWUSER(m_axi_gmem1_AWUSER);
    kernel_2mm_wrapper_gmem1_m_axi_U->WVALID(m_axi_gmem1_WVALID);
    kernel_2mm_wrapper_gmem1_m_axi_U->WREADY(m_axi_gmem1_WREADY);
    kernel_2mm_wrapper_gmem1_m_axi_U->WDATA(m_axi_gmem1_WDATA);
    kernel_2mm_wrapper_gmem1_m_axi_U->WSTRB(m_axi_gmem1_WSTRB);
    kernel_2mm_wrapper_gmem1_m_axi_U->WLAST(m_axi_gmem1_WLAST);
    kernel_2mm_wrapper_gmem1_m_axi_U->WID(m_axi_gmem1_WID);
    kernel_2mm_wrapper_gmem1_m_axi_U->WUSER(m_axi_gmem1_WUSER);
    kernel_2mm_wrapper_gmem1_m_axi_U->ARVALID(m_axi_gmem1_ARVALID);
    kernel_2mm_wrapper_gmem1_m_axi_U->ARREADY(m_axi_gmem1_ARREADY);
    kernel_2mm_wrapper_gmem1_m_axi_U->ARADDR(m_axi_gmem1_ARADDR);
    kernel_2mm_wrapper_gmem1_m_axi_U->ARID(m_axi_gmem1_ARID);
    kernel_2mm_wrapper_gmem1_m_axi_U->ARLEN(m_axi_gmem1_ARLEN);
    kernel_2mm_wrapper_gmem1_m_axi_U->ARSIZE(m_axi_gmem1_ARSIZE);
    kernel_2mm_wrapper_gmem1_m_axi_U->ARBURST(m_axi_gmem1_ARBURST);
    kernel_2mm_wrapper_gmem1_m_axi_U->ARLOCK(m_axi_gmem1_ARLOCK);
    kernel_2mm_wrapper_gmem1_m_axi_U->ARCACHE(m_axi_gmem1_ARCACHE);
    kernel_2mm_wrapper_gmem1_m_axi_U->ARPROT(m_axi_gmem1_ARPROT);
    kernel_2mm_wrapper_gmem1_m_axi_U->ARQOS(m_axi_gmem1_ARQOS);
    kernel_2mm_wrapper_gmem1_m_axi_U->ARREGION(m_axi_gmem1_ARREGION);
    kernel_2mm_wrapper_gmem1_m_axi_U->ARUSER(m_axi_gmem1_ARUSER);
    kernel_2mm_wrapper_gmem1_m_axi_U->RVALID(m_axi_gmem1_RVALID);
    kernel_2mm_wrapper_gmem1_m_axi_U->RREADY(m_axi_gmem1_RREADY);
    kernel_2mm_wrapper_gmem1_m_axi_U->RDATA(m_axi_gmem1_RDATA);
    kernel_2mm_wrapper_gmem1_m_axi_U->RLAST(m_axi_gmem1_RLAST);
    kernel_2mm_wrapper_gmem1_m_axi_U->RID(m_axi_gmem1_RID);
    kernel_2mm_wrapper_gmem1_m_axi_U->RUSER(m_axi_gmem1_RUSER);
    kernel_2mm_wrapper_gmem1_m_axi_U->RRESP(m_axi_gmem1_RRESP);
    kernel_2mm_wrapper_gmem1_m_axi_U->BVALID(m_axi_gmem1_BVALID);
    kernel_2mm_wrapper_gmem1_m_axi_U->BREADY(m_axi_gmem1_BREADY);
    kernel_2mm_wrapper_gmem1_m_axi_U->BRESP(m_axi_gmem1_BRESP);
    kernel_2mm_wrapper_gmem1_m_axi_U->BID(m_axi_gmem1_BID);
    kernel_2mm_wrapper_gmem1_m_axi_U->BUSER(m_axi_gmem1_BUSER);
    kernel_2mm_wrapper_gmem1_m_axi_U->ACLK(ap_clk);
    kernel_2mm_wrapper_gmem1_m_axi_U->ARESET(ap_rst_n_inv);
    kernel_2mm_wrapper_gmem1_m_axi_U->ACLK_EN(ap_var_for_const0);
    kernel_2mm_wrapper_gmem1_m_axi_U->I_ARVALID(readData32_U0_m_axi_B_AXI_ARVALID);
    kernel_2mm_wrapper_gmem1_m_axi_U->I_ARREADY(gmem1_ARREADY);
    kernel_2mm_wrapper_gmem1_m_axi_U->I_ARADDR(readData32_U0_m_axi_B_AXI_ARADDR);
    kernel_2mm_wrapper_gmem1_m_axi_U->I_ARID(readData32_U0_m_axi_B_AXI_ARID);
    kernel_2mm_wrapper_gmem1_m_axi_U->I_ARLEN(readData32_U0_m_axi_B_AXI_ARLEN);
    kernel_2mm_wrapper_gmem1_m_axi_U->I_ARSIZE(readData32_U0_m_axi_B_AXI_ARSIZE);
    kernel_2mm_wrapper_gmem1_m_axi_U->I_ARLOCK(readData32_U0_m_axi_B_AXI_ARLOCK);
    kernel_2mm_wrapper_gmem1_m_axi_U->I_ARCACHE(readData32_U0_m_axi_B_AXI_ARCACHE);
    kernel_2mm_wrapper_gmem1_m_axi_U->I_ARQOS(readData32_U0_m_axi_B_AXI_ARQOS);
    kernel_2mm_wrapper_gmem1_m_axi_U->I_ARPROT(readData32_U0_m_axi_B_AXI_ARPROT);
    kernel_2mm_wrapper_gmem1_m_axi_U->I_ARUSER(readData32_U0_m_axi_B_AXI_ARUSER);
    kernel_2mm_wrapper_gmem1_m_axi_U->I_ARBURST(readData32_U0_m_axi_B_AXI_ARBURST);
    kernel_2mm_wrapper_gmem1_m_axi_U->I_ARREGION(readData32_U0_m_axi_B_AXI_ARREGION);
    kernel_2mm_wrapper_gmem1_m_axi_U->I_RVALID(gmem1_RVALID);
    kernel_2mm_wrapper_gmem1_m_axi_U->I_RREADY(readData32_U0_m_axi_B_AXI_RREADY);
    kernel_2mm_wrapper_gmem1_m_axi_U->I_RDATA(gmem1_RDATA);
    kernel_2mm_wrapper_gmem1_m_axi_U->I_RID(gmem1_RID);
    kernel_2mm_wrapper_gmem1_m_axi_U->I_RUSER(gmem1_RUSER);
    kernel_2mm_wrapper_gmem1_m_axi_U->I_RRESP(gmem1_RRESP);
    kernel_2mm_wrapper_gmem1_m_axi_U->I_RLAST(gmem1_RLAST);
    kernel_2mm_wrapper_gmem1_m_axi_U->I_AWVALID(ap_var_for_const1);
    kernel_2mm_wrapper_gmem1_m_axi_U->I_AWREADY(gmem1_AWREADY);
    kernel_2mm_wrapper_gmem1_m_axi_U->I_AWADDR(ap_var_for_const2);
    kernel_2mm_wrapper_gmem1_m_axi_U->I_AWID(ap_var_for_const3);
    kernel_2mm_wrapper_gmem1_m_axi_U->I_AWLEN(ap_var_for_const2);
    kernel_2mm_wrapper_gmem1_m_axi_U->I_AWSIZE(ap_var_for_const4);
    kernel_2mm_wrapper_gmem1_m_axi_U->I_AWLOCK(ap_var_for_const5);
    kernel_2mm_wrapper_gmem1_m_axi_U->I_AWCACHE(ap_var_for_const6);
    kernel_2mm_wrapper_gmem1_m_axi_U->I_AWQOS(ap_var_for_const6);
    kernel_2mm_wrapper_gmem1_m_axi_U->I_AWPROT(ap_var_for_const4);
    kernel_2mm_wrapper_gmem1_m_axi_U->I_AWUSER(ap_var_for_const3);
    kernel_2mm_wrapper_gmem1_m_axi_U->I_AWBURST(ap_var_for_const5);
    kernel_2mm_wrapper_gmem1_m_axi_U->I_AWREGION(ap_var_for_const6);
    kernel_2mm_wrapper_gmem1_m_axi_U->I_WVALID(ap_var_for_const1);
    kernel_2mm_wrapper_gmem1_m_axi_U->I_WREADY(gmem1_WREADY);
    kernel_2mm_wrapper_gmem1_m_axi_U->I_WDATA(ap_var_for_const2);
    kernel_2mm_wrapper_gmem1_m_axi_U->I_WID(ap_var_for_const3);
    kernel_2mm_wrapper_gmem1_m_axi_U->I_WUSER(ap_var_for_const3);
    kernel_2mm_wrapper_gmem1_m_axi_U->I_WLAST(ap_var_for_const1);
    kernel_2mm_wrapper_gmem1_m_axi_U->I_WSTRB(ap_var_for_const6);
    kernel_2mm_wrapper_gmem1_m_axi_U->I_BVALID(gmem1_BVALID);
    kernel_2mm_wrapper_gmem1_m_axi_U->I_BREADY(ap_var_for_const1);
    kernel_2mm_wrapper_gmem1_m_axi_U->I_BRESP(gmem1_BRESP);
    kernel_2mm_wrapper_gmem1_m_axi_U->I_BID(gmem1_BID);
    kernel_2mm_wrapper_gmem1_m_axi_U->I_BUSER(gmem1_BUSER);
    kernel_2mm_wrapper_gmem2_m_axi_U = new kernel_2mm_wrapper_gmem2_m_axi<0,32,32,5,16,16,16,16,C_M_AXI_GMEM2_ID_WIDTH,C_M_AXI_GMEM2_ADDR_WIDTH,C_M_AXI_GMEM2_DATA_WIDTH,C_M_AXI_GMEM2_AWUSER_WIDTH,C_M_AXI_GMEM2_ARUSER_WIDTH,C_M_AXI_GMEM2_WUSER_WIDTH,C_M_AXI_GMEM2_RUSER_WIDTH,C_M_AXI_GMEM2_BUSER_WIDTH,C_M_AXI_GMEM2_USER_VALUE,C_M_AXI_GMEM2_PROT_VALUE,C_M_AXI_GMEM2_CACHE_VALUE>("kernel_2mm_wrapper_gmem2_m_axi_U");
    kernel_2mm_wrapper_gmem2_m_axi_U->AWVALID(m_axi_gmem2_AWVALID);
    kernel_2mm_wrapper_gmem2_m_axi_U->AWREADY(m_axi_gmem2_AWREADY);
    kernel_2mm_wrapper_gmem2_m_axi_U->AWADDR(m_axi_gmem2_AWADDR);
    kernel_2mm_wrapper_gmem2_m_axi_U->AWID(m_axi_gmem2_AWID);
    kernel_2mm_wrapper_gmem2_m_axi_U->AWLEN(m_axi_gmem2_AWLEN);
    kernel_2mm_wrapper_gmem2_m_axi_U->AWSIZE(m_axi_gmem2_AWSIZE);
    kernel_2mm_wrapper_gmem2_m_axi_U->AWBURST(m_axi_gmem2_AWBURST);
    kernel_2mm_wrapper_gmem2_m_axi_U->AWLOCK(m_axi_gmem2_AWLOCK);
    kernel_2mm_wrapper_gmem2_m_axi_U->AWCACHE(m_axi_gmem2_AWCACHE);
    kernel_2mm_wrapper_gmem2_m_axi_U->AWPROT(m_axi_gmem2_AWPROT);
    kernel_2mm_wrapper_gmem2_m_axi_U->AWQOS(m_axi_gmem2_AWQOS);
    kernel_2mm_wrapper_gmem2_m_axi_U->AWREGION(m_axi_gmem2_AWREGION);
    kernel_2mm_wrapper_gmem2_m_axi_U->AWUSER(m_axi_gmem2_AWUSER);
    kernel_2mm_wrapper_gmem2_m_axi_U->WVALID(m_axi_gmem2_WVALID);
    kernel_2mm_wrapper_gmem2_m_axi_U->WREADY(m_axi_gmem2_WREADY);
    kernel_2mm_wrapper_gmem2_m_axi_U->WDATA(m_axi_gmem2_WDATA);
    kernel_2mm_wrapper_gmem2_m_axi_U->WSTRB(m_axi_gmem2_WSTRB);
    kernel_2mm_wrapper_gmem2_m_axi_U->WLAST(m_axi_gmem2_WLAST);
    kernel_2mm_wrapper_gmem2_m_axi_U->WID(m_axi_gmem2_WID);
    kernel_2mm_wrapper_gmem2_m_axi_U->WUSER(m_axi_gmem2_WUSER);
    kernel_2mm_wrapper_gmem2_m_axi_U->ARVALID(m_axi_gmem2_ARVALID);
    kernel_2mm_wrapper_gmem2_m_axi_U->ARREADY(m_axi_gmem2_ARREADY);
    kernel_2mm_wrapper_gmem2_m_axi_U->ARADDR(m_axi_gmem2_ARADDR);
    kernel_2mm_wrapper_gmem2_m_axi_U->ARID(m_axi_gmem2_ARID);
    kernel_2mm_wrapper_gmem2_m_axi_U->ARLEN(m_axi_gmem2_ARLEN);
    kernel_2mm_wrapper_gmem2_m_axi_U->ARSIZE(m_axi_gmem2_ARSIZE);
    kernel_2mm_wrapper_gmem2_m_axi_U->ARBURST(m_axi_gmem2_ARBURST);
    kernel_2mm_wrapper_gmem2_m_axi_U->ARLOCK(m_axi_gmem2_ARLOCK);
    kernel_2mm_wrapper_gmem2_m_axi_U->ARCACHE(m_axi_gmem2_ARCACHE);
    kernel_2mm_wrapper_gmem2_m_axi_U->ARPROT(m_axi_gmem2_ARPROT);
    kernel_2mm_wrapper_gmem2_m_axi_U->ARQOS(m_axi_gmem2_ARQOS);
    kernel_2mm_wrapper_gmem2_m_axi_U->ARREGION(m_axi_gmem2_ARREGION);
    kernel_2mm_wrapper_gmem2_m_axi_U->ARUSER(m_axi_gmem2_ARUSER);
    kernel_2mm_wrapper_gmem2_m_axi_U->RVALID(m_axi_gmem2_RVALID);
    kernel_2mm_wrapper_gmem2_m_axi_U->RREADY(m_axi_gmem2_RREADY);
    kernel_2mm_wrapper_gmem2_m_axi_U->RDATA(m_axi_gmem2_RDATA);
    kernel_2mm_wrapper_gmem2_m_axi_U->RLAST(m_axi_gmem2_RLAST);
    kernel_2mm_wrapper_gmem2_m_axi_U->RID(m_axi_gmem2_RID);
    kernel_2mm_wrapper_gmem2_m_axi_U->RUSER(m_axi_gmem2_RUSER);
    kernel_2mm_wrapper_gmem2_m_axi_U->RRESP(m_axi_gmem2_RRESP);
    kernel_2mm_wrapper_gmem2_m_axi_U->BVALID(m_axi_gmem2_BVALID);
    kernel_2mm_wrapper_gmem2_m_axi_U->BREADY(m_axi_gmem2_BREADY);
    kernel_2mm_wrapper_gmem2_m_axi_U->BRESP(m_axi_gmem2_BRESP);
    kernel_2mm_wrapper_gmem2_m_axi_U->BID(m_axi_gmem2_BID);
    kernel_2mm_wrapper_gmem2_m_axi_U->BUSER(m_axi_gmem2_BUSER);
    kernel_2mm_wrapper_gmem2_m_axi_U->ACLK(ap_clk);
    kernel_2mm_wrapper_gmem2_m_axi_U->ARESET(ap_rst_n_inv);
    kernel_2mm_wrapper_gmem2_m_axi_U->ACLK_EN(ap_var_for_const0);
    kernel_2mm_wrapper_gmem2_m_axi_U->I_ARVALID(readData32_U0_m_axi_C_AXI_ARVALID);
    kernel_2mm_wrapper_gmem2_m_axi_U->I_ARREADY(gmem2_ARREADY);
    kernel_2mm_wrapper_gmem2_m_axi_U->I_ARADDR(readData32_U0_m_axi_C_AXI_ARADDR);
    kernel_2mm_wrapper_gmem2_m_axi_U->I_ARID(readData32_U0_m_axi_C_AXI_ARID);
    kernel_2mm_wrapper_gmem2_m_axi_U->I_ARLEN(readData32_U0_m_axi_C_AXI_ARLEN);
    kernel_2mm_wrapper_gmem2_m_axi_U->I_ARSIZE(readData32_U0_m_axi_C_AXI_ARSIZE);
    kernel_2mm_wrapper_gmem2_m_axi_U->I_ARLOCK(readData32_U0_m_axi_C_AXI_ARLOCK);
    kernel_2mm_wrapper_gmem2_m_axi_U->I_ARCACHE(readData32_U0_m_axi_C_AXI_ARCACHE);
    kernel_2mm_wrapper_gmem2_m_axi_U->I_ARQOS(readData32_U0_m_axi_C_AXI_ARQOS);
    kernel_2mm_wrapper_gmem2_m_axi_U->I_ARPROT(readData32_U0_m_axi_C_AXI_ARPROT);
    kernel_2mm_wrapper_gmem2_m_axi_U->I_ARUSER(readData32_U0_m_axi_C_AXI_ARUSER);
    kernel_2mm_wrapper_gmem2_m_axi_U->I_ARBURST(readData32_U0_m_axi_C_AXI_ARBURST);
    kernel_2mm_wrapper_gmem2_m_axi_U->I_ARREGION(readData32_U0_m_axi_C_AXI_ARREGION);
    kernel_2mm_wrapper_gmem2_m_axi_U->I_RVALID(gmem2_RVALID);
    kernel_2mm_wrapper_gmem2_m_axi_U->I_RREADY(readData32_U0_m_axi_C_AXI_RREADY);
    kernel_2mm_wrapper_gmem2_m_axi_U->I_RDATA(gmem2_RDATA);
    kernel_2mm_wrapper_gmem2_m_axi_U->I_RID(gmem2_RID);
    kernel_2mm_wrapper_gmem2_m_axi_U->I_RUSER(gmem2_RUSER);
    kernel_2mm_wrapper_gmem2_m_axi_U->I_RRESP(gmem2_RRESP);
    kernel_2mm_wrapper_gmem2_m_axi_U->I_RLAST(gmem2_RLAST);
    kernel_2mm_wrapper_gmem2_m_axi_U->I_AWVALID(ap_var_for_const1);
    kernel_2mm_wrapper_gmem2_m_axi_U->I_AWREADY(gmem2_AWREADY);
    kernel_2mm_wrapper_gmem2_m_axi_U->I_AWADDR(ap_var_for_const2);
    kernel_2mm_wrapper_gmem2_m_axi_U->I_AWID(ap_var_for_const3);
    kernel_2mm_wrapper_gmem2_m_axi_U->I_AWLEN(ap_var_for_const2);
    kernel_2mm_wrapper_gmem2_m_axi_U->I_AWSIZE(ap_var_for_const4);
    kernel_2mm_wrapper_gmem2_m_axi_U->I_AWLOCK(ap_var_for_const5);
    kernel_2mm_wrapper_gmem2_m_axi_U->I_AWCACHE(ap_var_for_const6);
    kernel_2mm_wrapper_gmem2_m_axi_U->I_AWQOS(ap_var_for_const6);
    kernel_2mm_wrapper_gmem2_m_axi_U->I_AWPROT(ap_var_for_const4);
    kernel_2mm_wrapper_gmem2_m_axi_U->I_AWUSER(ap_var_for_const3);
    kernel_2mm_wrapper_gmem2_m_axi_U->I_AWBURST(ap_var_for_const5);
    kernel_2mm_wrapper_gmem2_m_axi_U->I_AWREGION(ap_var_for_const6);
    kernel_2mm_wrapper_gmem2_m_axi_U->I_WVALID(ap_var_for_const1);
    kernel_2mm_wrapper_gmem2_m_axi_U->I_WREADY(gmem2_WREADY);
    kernel_2mm_wrapper_gmem2_m_axi_U->I_WDATA(ap_var_for_const2);
    kernel_2mm_wrapper_gmem2_m_axi_U->I_WID(ap_var_for_const3);
    kernel_2mm_wrapper_gmem2_m_axi_U->I_WUSER(ap_var_for_const3);
    kernel_2mm_wrapper_gmem2_m_axi_U->I_WLAST(ap_var_for_const1);
    kernel_2mm_wrapper_gmem2_m_axi_U->I_WSTRB(ap_var_for_const6);
    kernel_2mm_wrapper_gmem2_m_axi_U->I_BVALID(gmem2_BVALID);
    kernel_2mm_wrapper_gmem2_m_axi_U->I_BREADY(ap_var_for_const1);
    kernel_2mm_wrapper_gmem2_m_axi_U->I_BRESP(gmem2_BRESP);
    kernel_2mm_wrapper_gmem2_m_axi_U->I_BID(gmem2_BID);
    kernel_2mm_wrapper_gmem2_m_axi_U->I_BUSER(gmem2_BUSER);
    kernel_2mm_wrapper_gmem3_m_axi_U = new kernel_2mm_wrapper_gmem3_m_axi<0,32,32,5,16,16,16,16,C_M_AXI_GMEM3_ID_WIDTH,C_M_AXI_GMEM3_ADDR_WIDTH,C_M_AXI_GMEM3_DATA_WIDTH,C_M_AXI_GMEM3_AWUSER_WIDTH,C_M_AXI_GMEM3_ARUSER_WIDTH,C_M_AXI_GMEM3_WUSER_WIDTH,C_M_AXI_GMEM3_RUSER_WIDTH,C_M_AXI_GMEM3_BUSER_WIDTH,C_M_AXI_GMEM3_USER_VALUE,C_M_AXI_GMEM3_PROT_VALUE,C_M_AXI_GMEM3_CACHE_VALUE>("kernel_2mm_wrapper_gmem3_m_axi_U");
    kernel_2mm_wrapper_gmem3_m_axi_U->AWVALID(m_axi_gmem3_AWVALID);
    kernel_2mm_wrapper_gmem3_m_axi_U->AWREADY(m_axi_gmem3_AWREADY);
    kernel_2mm_wrapper_gmem3_m_axi_U->AWADDR(m_axi_gmem3_AWADDR);
    kernel_2mm_wrapper_gmem3_m_axi_U->AWID(m_axi_gmem3_AWID);
    kernel_2mm_wrapper_gmem3_m_axi_U->AWLEN(m_axi_gmem3_AWLEN);
    kernel_2mm_wrapper_gmem3_m_axi_U->AWSIZE(m_axi_gmem3_AWSIZE);
    kernel_2mm_wrapper_gmem3_m_axi_U->AWBURST(m_axi_gmem3_AWBURST);
    kernel_2mm_wrapper_gmem3_m_axi_U->AWLOCK(m_axi_gmem3_AWLOCK);
    kernel_2mm_wrapper_gmem3_m_axi_U->AWCACHE(m_axi_gmem3_AWCACHE);
    kernel_2mm_wrapper_gmem3_m_axi_U->AWPROT(m_axi_gmem3_AWPROT);
    kernel_2mm_wrapper_gmem3_m_axi_U->AWQOS(m_axi_gmem3_AWQOS);
    kernel_2mm_wrapper_gmem3_m_axi_U->AWREGION(m_axi_gmem3_AWREGION);
    kernel_2mm_wrapper_gmem3_m_axi_U->AWUSER(m_axi_gmem3_AWUSER);
    kernel_2mm_wrapper_gmem3_m_axi_U->WVALID(m_axi_gmem3_WVALID);
    kernel_2mm_wrapper_gmem3_m_axi_U->WREADY(m_axi_gmem3_WREADY);
    kernel_2mm_wrapper_gmem3_m_axi_U->WDATA(m_axi_gmem3_WDATA);
    kernel_2mm_wrapper_gmem3_m_axi_U->WSTRB(m_axi_gmem3_WSTRB);
    kernel_2mm_wrapper_gmem3_m_axi_U->WLAST(m_axi_gmem3_WLAST);
    kernel_2mm_wrapper_gmem3_m_axi_U->WID(m_axi_gmem3_WID);
    kernel_2mm_wrapper_gmem3_m_axi_U->WUSER(m_axi_gmem3_WUSER);
    kernel_2mm_wrapper_gmem3_m_axi_U->ARVALID(m_axi_gmem3_ARVALID);
    kernel_2mm_wrapper_gmem3_m_axi_U->ARREADY(m_axi_gmem3_ARREADY);
    kernel_2mm_wrapper_gmem3_m_axi_U->ARADDR(m_axi_gmem3_ARADDR);
    kernel_2mm_wrapper_gmem3_m_axi_U->ARID(m_axi_gmem3_ARID);
    kernel_2mm_wrapper_gmem3_m_axi_U->ARLEN(m_axi_gmem3_ARLEN);
    kernel_2mm_wrapper_gmem3_m_axi_U->ARSIZE(m_axi_gmem3_ARSIZE);
    kernel_2mm_wrapper_gmem3_m_axi_U->ARBURST(m_axi_gmem3_ARBURST);
    kernel_2mm_wrapper_gmem3_m_axi_U->ARLOCK(m_axi_gmem3_ARLOCK);
    kernel_2mm_wrapper_gmem3_m_axi_U->ARCACHE(m_axi_gmem3_ARCACHE);
    kernel_2mm_wrapper_gmem3_m_axi_U->ARPROT(m_axi_gmem3_ARPROT);
    kernel_2mm_wrapper_gmem3_m_axi_U->ARQOS(m_axi_gmem3_ARQOS);
    kernel_2mm_wrapper_gmem3_m_axi_U->ARREGION(m_axi_gmem3_ARREGION);
    kernel_2mm_wrapper_gmem3_m_axi_U->ARUSER(m_axi_gmem3_ARUSER);
    kernel_2mm_wrapper_gmem3_m_axi_U->RVALID(m_axi_gmem3_RVALID);
    kernel_2mm_wrapper_gmem3_m_axi_U->RREADY(m_axi_gmem3_RREADY);
    kernel_2mm_wrapper_gmem3_m_axi_U->RDATA(m_axi_gmem3_RDATA);
    kernel_2mm_wrapper_gmem3_m_axi_U->RLAST(m_axi_gmem3_RLAST);
    kernel_2mm_wrapper_gmem3_m_axi_U->RID(m_axi_gmem3_RID);
    kernel_2mm_wrapper_gmem3_m_axi_U->RUSER(m_axi_gmem3_RUSER);
    kernel_2mm_wrapper_gmem3_m_axi_U->RRESP(m_axi_gmem3_RRESP);
    kernel_2mm_wrapper_gmem3_m_axi_U->BVALID(m_axi_gmem3_BVALID);
    kernel_2mm_wrapper_gmem3_m_axi_U->BREADY(m_axi_gmem3_BREADY);
    kernel_2mm_wrapper_gmem3_m_axi_U->BRESP(m_axi_gmem3_BRESP);
    kernel_2mm_wrapper_gmem3_m_axi_U->BID(m_axi_gmem3_BID);
    kernel_2mm_wrapper_gmem3_m_axi_U->BUSER(m_axi_gmem3_BUSER);
    kernel_2mm_wrapper_gmem3_m_axi_U->ACLK(ap_clk);
    kernel_2mm_wrapper_gmem3_m_axi_U->ARESET(ap_rst_n_inv);
    kernel_2mm_wrapper_gmem3_m_axi_U->ACLK_EN(ap_var_for_const0);
    kernel_2mm_wrapper_gmem3_m_axi_U->I_ARVALID(readData32_U0_m_axi_D_input_AXI_ARVALID);
    kernel_2mm_wrapper_gmem3_m_axi_U->I_ARREADY(gmem3_ARREADY);
    kernel_2mm_wrapper_gmem3_m_axi_U->I_ARADDR(readData32_U0_m_axi_D_input_AXI_ARADDR);
    kernel_2mm_wrapper_gmem3_m_axi_U->I_ARID(readData32_U0_m_axi_D_input_AXI_ARID);
    kernel_2mm_wrapper_gmem3_m_axi_U->I_ARLEN(readData32_U0_m_axi_D_input_AXI_ARLEN);
    kernel_2mm_wrapper_gmem3_m_axi_U->I_ARSIZE(readData32_U0_m_axi_D_input_AXI_ARSIZE);
    kernel_2mm_wrapper_gmem3_m_axi_U->I_ARLOCK(readData32_U0_m_axi_D_input_AXI_ARLOCK);
    kernel_2mm_wrapper_gmem3_m_axi_U->I_ARCACHE(readData32_U0_m_axi_D_input_AXI_ARCACHE);
    kernel_2mm_wrapper_gmem3_m_axi_U->I_ARQOS(readData32_U0_m_axi_D_input_AXI_ARQOS);
    kernel_2mm_wrapper_gmem3_m_axi_U->I_ARPROT(readData32_U0_m_axi_D_input_AXI_ARPROT);
    kernel_2mm_wrapper_gmem3_m_axi_U->I_ARUSER(readData32_U0_m_axi_D_input_AXI_ARUSER);
    kernel_2mm_wrapper_gmem3_m_axi_U->I_ARBURST(readData32_U0_m_axi_D_input_AXI_ARBURST);
    kernel_2mm_wrapper_gmem3_m_axi_U->I_ARREGION(readData32_U0_m_axi_D_input_AXI_ARREGION);
    kernel_2mm_wrapper_gmem3_m_axi_U->I_RVALID(gmem3_RVALID);
    kernel_2mm_wrapper_gmem3_m_axi_U->I_RREADY(readData32_U0_m_axi_D_input_AXI_RREADY);
    kernel_2mm_wrapper_gmem3_m_axi_U->I_RDATA(gmem3_RDATA);
    kernel_2mm_wrapper_gmem3_m_axi_U->I_RID(gmem3_RID);
    kernel_2mm_wrapper_gmem3_m_axi_U->I_RUSER(gmem3_RUSER);
    kernel_2mm_wrapper_gmem3_m_axi_U->I_RRESP(gmem3_RRESP);
    kernel_2mm_wrapper_gmem3_m_axi_U->I_RLAST(gmem3_RLAST);
    kernel_2mm_wrapper_gmem3_m_axi_U->I_AWVALID(ap_var_for_const1);
    kernel_2mm_wrapper_gmem3_m_axi_U->I_AWREADY(gmem3_AWREADY);
    kernel_2mm_wrapper_gmem3_m_axi_U->I_AWADDR(ap_var_for_const2);
    kernel_2mm_wrapper_gmem3_m_axi_U->I_AWID(ap_var_for_const3);
    kernel_2mm_wrapper_gmem3_m_axi_U->I_AWLEN(ap_var_for_const2);
    kernel_2mm_wrapper_gmem3_m_axi_U->I_AWSIZE(ap_var_for_const4);
    kernel_2mm_wrapper_gmem3_m_axi_U->I_AWLOCK(ap_var_for_const5);
    kernel_2mm_wrapper_gmem3_m_axi_U->I_AWCACHE(ap_var_for_const6);
    kernel_2mm_wrapper_gmem3_m_axi_U->I_AWQOS(ap_var_for_const6);
    kernel_2mm_wrapper_gmem3_m_axi_U->I_AWPROT(ap_var_for_const4);
    kernel_2mm_wrapper_gmem3_m_axi_U->I_AWUSER(ap_var_for_const3);
    kernel_2mm_wrapper_gmem3_m_axi_U->I_AWBURST(ap_var_for_const5);
    kernel_2mm_wrapper_gmem3_m_axi_U->I_AWREGION(ap_var_for_const6);
    kernel_2mm_wrapper_gmem3_m_axi_U->I_WVALID(ap_var_for_const1);
    kernel_2mm_wrapper_gmem3_m_axi_U->I_WREADY(gmem3_WREADY);
    kernel_2mm_wrapper_gmem3_m_axi_U->I_WDATA(ap_var_for_const2);
    kernel_2mm_wrapper_gmem3_m_axi_U->I_WID(ap_var_for_const3);
    kernel_2mm_wrapper_gmem3_m_axi_U->I_WUSER(ap_var_for_const3);
    kernel_2mm_wrapper_gmem3_m_axi_U->I_WLAST(ap_var_for_const1);
    kernel_2mm_wrapper_gmem3_m_axi_U->I_WSTRB(ap_var_for_const6);
    kernel_2mm_wrapper_gmem3_m_axi_U->I_BVALID(gmem3_BVALID);
    kernel_2mm_wrapper_gmem3_m_axi_U->I_BREADY(ap_var_for_const1);
    kernel_2mm_wrapper_gmem3_m_axi_U->I_BRESP(gmem3_BRESP);
    kernel_2mm_wrapper_gmem3_m_axi_U->I_BID(gmem3_BID);
    kernel_2mm_wrapper_gmem3_m_axi_U->I_BUSER(gmem3_BUSER);
    kernel_2mm_wrapper_gmem4_m_axi_U = new kernel_2mm_wrapper_gmem4_m_axi<0,32,32,5,16,16,16,16,C_M_AXI_GMEM4_ID_WIDTH,C_M_AXI_GMEM4_ADDR_WIDTH,C_M_AXI_GMEM4_DATA_WIDTH,C_M_AXI_GMEM4_AWUSER_WIDTH,C_M_AXI_GMEM4_ARUSER_WIDTH,C_M_AXI_GMEM4_WUSER_WIDTH,C_M_AXI_GMEM4_RUSER_WIDTH,C_M_AXI_GMEM4_BUSER_WIDTH,C_M_AXI_GMEM4_USER_VALUE,C_M_AXI_GMEM4_PROT_VALUE,C_M_AXI_GMEM4_CACHE_VALUE>("kernel_2mm_wrapper_gmem4_m_axi_U");
    kernel_2mm_wrapper_gmem4_m_axi_U->AWVALID(m_axi_gmem4_AWVALID);
    kernel_2mm_wrapper_gmem4_m_axi_U->AWREADY(m_axi_gmem4_AWREADY);
    kernel_2mm_wrapper_gmem4_m_axi_U->AWADDR(m_axi_gmem4_AWADDR);
    kernel_2mm_wrapper_gmem4_m_axi_U->AWID(m_axi_gmem4_AWID);
    kernel_2mm_wrapper_gmem4_m_axi_U->AWLEN(m_axi_gmem4_AWLEN);
    kernel_2mm_wrapper_gmem4_m_axi_U->AWSIZE(m_axi_gmem4_AWSIZE);
    kernel_2mm_wrapper_gmem4_m_axi_U->AWBURST(m_axi_gmem4_AWBURST);
    kernel_2mm_wrapper_gmem4_m_axi_U->AWLOCK(m_axi_gmem4_AWLOCK);
    kernel_2mm_wrapper_gmem4_m_axi_U->AWCACHE(m_axi_gmem4_AWCACHE);
    kernel_2mm_wrapper_gmem4_m_axi_U->AWPROT(m_axi_gmem4_AWPROT);
    kernel_2mm_wrapper_gmem4_m_axi_U->AWQOS(m_axi_gmem4_AWQOS);
    kernel_2mm_wrapper_gmem4_m_axi_U->AWREGION(m_axi_gmem4_AWREGION);
    kernel_2mm_wrapper_gmem4_m_axi_U->AWUSER(m_axi_gmem4_AWUSER);
    kernel_2mm_wrapper_gmem4_m_axi_U->WVALID(m_axi_gmem4_WVALID);
    kernel_2mm_wrapper_gmem4_m_axi_U->WREADY(m_axi_gmem4_WREADY);
    kernel_2mm_wrapper_gmem4_m_axi_U->WDATA(m_axi_gmem4_WDATA);
    kernel_2mm_wrapper_gmem4_m_axi_U->WSTRB(m_axi_gmem4_WSTRB);
    kernel_2mm_wrapper_gmem4_m_axi_U->WLAST(m_axi_gmem4_WLAST);
    kernel_2mm_wrapper_gmem4_m_axi_U->WID(m_axi_gmem4_WID);
    kernel_2mm_wrapper_gmem4_m_axi_U->WUSER(m_axi_gmem4_WUSER);
    kernel_2mm_wrapper_gmem4_m_axi_U->ARVALID(m_axi_gmem4_ARVALID);
    kernel_2mm_wrapper_gmem4_m_axi_U->ARREADY(m_axi_gmem4_ARREADY);
    kernel_2mm_wrapper_gmem4_m_axi_U->ARADDR(m_axi_gmem4_ARADDR);
    kernel_2mm_wrapper_gmem4_m_axi_U->ARID(m_axi_gmem4_ARID);
    kernel_2mm_wrapper_gmem4_m_axi_U->ARLEN(m_axi_gmem4_ARLEN);
    kernel_2mm_wrapper_gmem4_m_axi_U->ARSIZE(m_axi_gmem4_ARSIZE);
    kernel_2mm_wrapper_gmem4_m_axi_U->ARBURST(m_axi_gmem4_ARBURST);
    kernel_2mm_wrapper_gmem4_m_axi_U->ARLOCK(m_axi_gmem4_ARLOCK);
    kernel_2mm_wrapper_gmem4_m_axi_U->ARCACHE(m_axi_gmem4_ARCACHE);
    kernel_2mm_wrapper_gmem4_m_axi_U->ARPROT(m_axi_gmem4_ARPROT);
    kernel_2mm_wrapper_gmem4_m_axi_U->ARQOS(m_axi_gmem4_ARQOS);
    kernel_2mm_wrapper_gmem4_m_axi_U->ARREGION(m_axi_gmem4_ARREGION);
    kernel_2mm_wrapper_gmem4_m_axi_U->ARUSER(m_axi_gmem4_ARUSER);
    kernel_2mm_wrapper_gmem4_m_axi_U->RVALID(m_axi_gmem4_RVALID);
    kernel_2mm_wrapper_gmem4_m_axi_U->RREADY(m_axi_gmem4_RREADY);
    kernel_2mm_wrapper_gmem4_m_axi_U->RDATA(m_axi_gmem4_RDATA);
    kernel_2mm_wrapper_gmem4_m_axi_U->RLAST(m_axi_gmem4_RLAST);
    kernel_2mm_wrapper_gmem4_m_axi_U->RID(m_axi_gmem4_RID);
    kernel_2mm_wrapper_gmem4_m_axi_U->RUSER(m_axi_gmem4_RUSER);
    kernel_2mm_wrapper_gmem4_m_axi_U->RRESP(m_axi_gmem4_RRESP);
    kernel_2mm_wrapper_gmem4_m_axi_U->BVALID(m_axi_gmem4_BVALID);
    kernel_2mm_wrapper_gmem4_m_axi_U->BREADY(m_axi_gmem4_BREADY);
    kernel_2mm_wrapper_gmem4_m_axi_U->BRESP(m_axi_gmem4_BRESP);
    kernel_2mm_wrapper_gmem4_m_axi_U->BID(m_axi_gmem4_BID);
    kernel_2mm_wrapper_gmem4_m_axi_U->BUSER(m_axi_gmem4_BUSER);
    kernel_2mm_wrapper_gmem4_m_axi_U->ACLK(ap_clk);
    kernel_2mm_wrapper_gmem4_m_axi_U->ARESET(ap_rst_n_inv);
    kernel_2mm_wrapper_gmem4_m_axi_U->ACLK_EN(ap_var_for_const0);
    kernel_2mm_wrapper_gmem4_m_axi_U->I_ARVALID(ap_var_for_const1);
    kernel_2mm_wrapper_gmem4_m_axi_U->I_ARREADY(gmem4_ARREADY);
    kernel_2mm_wrapper_gmem4_m_axi_U->I_ARADDR(ap_var_for_const2);
    kernel_2mm_wrapper_gmem4_m_axi_U->I_ARID(ap_var_for_const3);
    kernel_2mm_wrapper_gmem4_m_axi_U->I_ARLEN(ap_var_for_const2);
    kernel_2mm_wrapper_gmem4_m_axi_U->I_ARSIZE(ap_var_for_const4);
    kernel_2mm_wrapper_gmem4_m_axi_U->I_ARLOCK(ap_var_for_const5);
    kernel_2mm_wrapper_gmem4_m_axi_U->I_ARCACHE(ap_var_for_const6);
    kernel_2mm_wrapper_gmem4_m_axi_U->I_ARQOS(ap_var_for_const6);
    kernel_2mm_wrapper_gmem4_m_axi_U->I_ARPROT(ap_var_for_const4);
    kernel_2mm_wrapper_gmem4_m_axi_U->I_ARUSER(ap_var_for_const3);
    kernel_2mm_wrapper_gmem4_m_axi_U->I_ARBURST(ap_var_for_const5);
    kernel_2mm_wrapper_gmem4_m_axi_U->I_ARREGION(ap_var_for_const6);
    kernel_2mm_wrapper_gmem4_m_axi_U->I_RVALID(gmem4_RVALID);
    kernel_2mm_wrapper_gmem4_m_axi_U->I_RREADY(ap_var_for_const1);
    kernel_2mm_wrapper_gmem4_m_axi_U->I_RDATA(gmem4_RDATA);
    kernel_2mm_wrapper_gmem4_m_axi_U->I_RID(gmem4_RID);
    kernel_2mm_wrapper_gmem4_m_axi_U->I_RUSER(gmem4_RUSER);
    kernel_2mm_wrapper_gmem4_m_axi_U->I_RRESP(gmem4_RRESP);
    kernel_2mm_wrapper_gmem4_m_axi_U->I_RLAST(gmem4_RLAST);
    kernel_2mm_wrapper_gmem4_m_axi_U->I_AWVALID(writeData_U0_m_axi_D_output_AXI_AWVALID);
    kernel_2mm_wrapper_gmem4_m_axi_U->I_AWREADY(gmem4_AWREADY);
    kernel_2mm_wrapper_gmem4_m_axi_U->I_AWADDR(writeData_U0_m_axi_D_output_AXI_AWADDR);
    kernel_2mm_wrapper_gmem4_m_axi_U->I_AWID(writeData_U0_m_axi_D_output_AXI_AWID);
    kernel_2mm_wrapper_gmem4_m_axi_U->I_AWLEN(writeData_U0_m_axi_D_output_AXI_AWLEN);
    kernel_2mm_wrapper_gmem4_m_axi_U->I_AWSIZE(writeData_U0_m_axi_D_output_AXI_AWSIZE);
    kernel_2mm_wrapper_gmem4_m_axi_U->I_AWLOCK(writeData_U0_m_axi_D_output_AXI_AWLOCK);
    kernel_2mm_wrapper_gmem4_m_axi_U->I_AWCACHE(writeData_U0_m_axi_D_output_AXI_AWCACHE);
    kernel_2mm_wrapper_gmem4_m_axi_U->I_AWQOS(writeData_U0_m_axi_D_output_AXI_AWQOS);
    kernel_2mm_wrapper_gmem4_m_axi_U->I_AWPROT(writeData_U0_m_axi_D_output_AXI_AWPROT);
    kernel_2mm_wrapper_gmem4_m_axi_U->I_AWUSER(writeData_U0_m_axi_D_output_AXI_AWUSER);
    kernel_2mm_wrapper_gmem4_m_axi_U->I_AWBURST(writeData_U0_m_axi_D_output_AXI_AWBURST);
    kernel_2mm_wrapper_gmem4_m_axi_U->I_AWREGION(writeData_U0_m_axi_D_output_AXI_AWREGION);
    kernel_2mm_wrapper_gmem4_m_axi_U->I_WVALID(writeData_U0_m_axi_D_output_AXI_WVALID);
    kernel_2mm_wrapper_gmem4_m_axi_U->I_WREADY(gmem4_WREADY);
    kernel_2mm_wrapper_gmem4_m_axi_U->I_WDATA(writeData_U0_m_axi_D_output_AXI_WDATA);
    kernel_2mm_wrapper_gmem4_m_axi_U->I_WID(writeData_U0_m_axi_D_output_AXI_WID);
    kernel_2mm_wrapper_gmem4_m_axi_U->I_WUSER(writeData_U0_m_axi_D_output_AXI_WUSER);
    kernel_2mm_wrapper_gmem4_m_axi_U->I_WLAST(writeData_U0_m_axi_D_output_AXI_WLAST);
    kernel_2mm_wrapper_gmem4_m_axi_U->I_WSTRB(writeData_U0_m_axi_D_output_AXI_WSTRB);
    kernel_2mm_wrapper_gmem4_m_axi_U->I_BVALID(gmem4_BVALID);
    kernel_2mm_wrapper_gmem4_m_axi_U->I_BREADY(writeData_U0_m_axi_D_output_AXI_BREADY);
    kernel_2mm_wrapper_gmem4_m_axi_U->I_BRESP(gmem4_BRESP);
    kernel_2mm_wrapper_gmem4_m_axi_U->I_BID(gmem4_BID);
    kernel_2mm_wrapper_gmem4_m_axi_U->I_BUSER(gmem4_BUSER);
    A_0_U = new kernel_2mm_wrappemb6("A_0_U");
    A_0_U->clk(ap_clk);
    A_0_U->reset(ap_rst_n_inv);
    A_0_U->i_address0(readData32_U0_A_0_address0);
    A_0_U->i_ce0(readData32_U0_A_0_ce0);
    A_0_U->i_we0(readData32_U0_A_0_we0);
    A_0_U->i_d0(readData32_U0_A_0_d0);
    A_0_U->i_q0(A_0_i_q0);
    A_0_U->t_address0(kernel_2mm_U0_A_0_address0);
    A_0_U->t_ce0(kernel_2mm_U0_A_0_ce0);
    A_0_U->t_we0(ap_var_for_const1);
    A_0_U->t_d0(ap_var_for_const2);
    A_0_U->t_q0(A_0_t_q0);
    A_0_U->i_ce(ap_var_for_const0);
    A_0_U->t_ce(ap_var_for_const0);
    A_0_U->i_full_n(A_0_i_full_n);
    A_0_U->i_write(ap_channel_done_A_0);
    A_0_U->t_empty_n(A_0_t_empty_n);
    A_0_U->t_read(kernel_2mm_U0_ap_ready);
    A_1_U = new kernel_2mm_wrappemb6("A_1_U");
    A_1_U->clk(ap_clk);
    A_1_U->reset(ap_rst_n_inv);
    A_1_U->i_address0(readData32_U0_A_1_address0);
    A_1_U->i_ce0(readData32_U0_A_1_ce0);
    A_1_U->i_we0(readData32_U0_A_1_we0);
    A_1_U->i_d0(readData32_U0_A_1_d0);
    A_1_U->i_q0(A_1_i_q0);
    A_1_U->t_address0(kernel_2mm_U0_A_1_address0);
    A_1_U->t_ce0(kernel_2mm_U0_A_1_ce0);
    A_1_U->t_we0(ap_var_for_const1);
    A_1_U->t_d0(ap_var_for_const2);
    A_1_U->t_q0(A_1_t_q0);
    A_1_U->i_ce(ap_var_for_const0);
    A_1_U->t_ce(ap_var_for_const0);
    A_1_U->i_full_n(A_1_i_full_n);
    A_1_U->i_write(ap_channel_done_A_1);
    A_1_U->t_empty_n(A_1_t_empty_n);
    A_1_U->t_read(kernel_2mm_U0_ap_ready);
    B_0_U = new kernel_2mm_wrappeocq("B_0_U");
    B_0_U->clk(ap_clk);
    B_0_U->reset(ap_rst_n_inv);
    B_0_U->i_address0(readData32_U0_B_0_address0);
    B_0_U->i_ce0(readData32_U0_B_0_ce0);
    B_0_U->i_we0(readData32_U0_B_0_we0);
    B_0_U->i_d0(readData32_U0_B_0_d0);
    B_0_U->i_q0(B_0_i_q0);
    B_0_U->t_address0(kernel_2mm_U0_B_0_address0);
    B_0_U->t_ce0(kernel_2mm_U0_B_0_ce0);
    B_0_U->t_we0(ap_var_for_const1);
    B_0_U->t_d0(ap_var_for_const2);
    B_0_U->t_q0(B_0_t_q0);
    B_0_U->i_ce(ap_var_for_const0);
    B_0_U->t_ce(ap_var_for_const0);
    B_0_U->i_full_n(B_0_i_full_n);
    B_0_U->i_write(ap_channel_done_B_0);
    B_0_U->t_empty_n(B_0_t_empty_n);
    B_0_U->t_read(kernel_2mm_U0_ap_ready);
    B_1_U = new kernel_2mm_wrappeocq("B_1_U");
    B_1_U->clk(ap_clk);
    B_1_U->reset(ap_rst_n_inv);
    B_1_U->i_address0(readData32_U0_B_1_address0);
    B_1_U->i_ce0(readData32_U0_B_1_ce0);
    B_1_U->i_we0(readData32_U0_B_1_we0);
    B_1_U->i_d0(readData32_U0_B_1_d0);
    B_1_U->i_q0(B_1_i_q0);
    B_1_U->t_address0(kernel_2mm_U0_B_1_address0);
    B_1_U->t_ce0(kernel_2mm_U0_B_1_ce0);
    B_1_U->t_we0(ap_var_for_const1);
    B_1_U->t_d0(ap_var_for_const2);
    B_1_U->t_q0(B_1_t_q0);
    B_1_U->i_ce(ap_var_for_const0);
    B_1_U->t_ce(ap_var_for_const0);
    B_1_U->i_full_n(B_1_i_full_n);
    B_1_U->i_write(ap_channel_done_B_1);
    B_1_U->t_empty_n(B_1_t_empty_n);
    B_1_U->t_read(kernel_2mm_U0_ap_ready);
    C_0_U = new kernel_2mm_wrappeqcK("C_0_U");
    C_0_U->clk(ap_clk);
    C_0_U->reset(ap_rst_n_inv);
    C_0_U->i_address0(readData32_U0_C_0_address0);
    C_0_U->i_ce0(readData32_U0_C_0_ce0);
    C_0_U->i_we0(readData32_U0_C_0_we0);
    C_0_U->i_d0(readData32_U0_C_0_d0);
    C_0_U->i_q0(C_0_i_q0);
    C_0_U->t_address0(kernel_2mm_U0_C_0_address0);
    C_0_U->t_ce0(kernel_2mm_U0_C_0_ce0);
    C_0_U->t_we0(ap_var_for_const1);
    C_0_U->t_d0(ap_var_for_const2);
    C_0_U->t_q0(C_0_t_q0);
    C_0_U->i_ce(ap_var_for_const0);
    C_0_U->t_ce(ap_var_for_const0);
    C_0_U->i_full_n(C_0_i_full_n);
    C_0_U->i_write(ap_channel_done_C_0);
    C_0_U->t_empty_n(C_0_t_empty_n);
    C_0_U->t_read(kernel_2mm_U0_ap_ready);
    C_1_U = new kernel_2mm_wrappeqcK("C_1_U");
    C_1_U->clk(ap_clk);
    C_1_U->reset(ap_rst_n_inv);
    C_1_U->i_address0(readData32_U0_C_1_address0);
    C_1_U->i_ce0(readData32_U0_C_1_ce0);
    C_1_U->i_we0(readData32_U0_C_1_we0);
    C_1_U->i_d0(readData32_U0_C_1_d0);
    C_1_U->i_q0(C_1_i_q0);
    C_1_U->t_address0(kernel_2mm_U0_C_1_address0);
    C_1_U->t_ce0(kernel_2mm_U0_C_1_ce0);
    C_1_U->t_we0(ap_var_for_const1);
    C_1_U->t_d0(ap_var_for_const2);
    C_1_U->t_q0(C_1_t_q0);
    C_1_U->i_ce(ap_var_for_const0);
    C_1_U->t_ce(ap_var_for_const0);
    C_1_U->i_full_n(C_1_i_full_n);
    C_1_U->i_write(ap_channel_done_C_1);
    C_1_U->t_empty_n(C_1_t_empty_n);
    C_1_U->t_read(kernel_2mm_U0_ap_ready);
    C_2_U = new kernel_2mm_wrappesc4("C_2_U");
    C_2_U->clk(ap_clk);
    C_2_U->reset(ap_rst_n_inv);
    C_2_U->i_address0(readData32_U0_C_2_address0);
    C_2_U->i_ce0(readData32_U0_C_2_ce0);
    C_2_U->i_we0(readData32_U0_C_2_we0);
    C_2_U->i_d0(readData32_U0_C_2_d0);
    C_2_U->i_q0(C_2_i_q0);
    C_2_U->t_address0(kernel_2mm_U0_C_2_address0);
    C_2_U->t_ce0(kernel_2mm_U0_C_2_ce0);
    C_2_U->t_we0(ap_var_for_const1);
    C_2_U->t_d0(ap_var_for_const2);
    C_2_U->t_q0(C_2_t_q0);
    C_2_U->i_ce(ap_var_for_const0);
    C_2_U->t_ce(ap_var_for_const0);
    C_2_U->i_full_n(C_2_i_full_n);
    C_2_U->i_write(ap_channel_done_C_2);
    C_2_U->t_empty_n(C_2_t_empty_n);
    C_2_U->t_read(kernel_2mm_U0_ap_ready);
    C_3_U = new kernel_2mm_wrappesc4("C_3_U");
    C_3_U->clk(ap_clk);
    C_3_U->reset(ap_rst_n_inv);
    C_3_U->i_address0(readData32_U0_C_3_address0);
    C_3_U->i_ce0(readData32_U0_C_3_ce0);
    C_3_U->i_we0(readData32_U0_C_3_we0);
    C_3_U->i_d0(readData32_U0_C_3_d0);
    C_3_U->i_q0(C_3_i_q0);
    C_3_U->t_address0(kernel_2mm_U0_C_3_address0);
    C_3_U->t_ce0(kernel_2mm_U0_C_3_ce0);
    C_3_U->t_we0(ap_var_for_const1);
    C_3_U->t_d0(ap_var_for_const2);
    C_3_U->t_q0(C_3_t_q0);
    C_3_U->i_ce(ap_var_for_const0);
    C_3_U->t_ce(ap_var_for_const0);
    C_3_U->i_full_n(C_3_i_full_n);
    C_3_U->i_write(ap_channel_done_C_3);
    C_3_U->t_empty_n(C_3_t_empty_n);
    C_3_U->t_read(kernel_2mm_U0_ap_ready);
    C_4_U = new kernel_2mm_wrappesc4("C_4_U");
    C_4_U->clk(ap_clk);
    C_4_U->reset(ap_rst_n_inv);
    C_4_U->i_address0(readData32_U0_C_4_address0);
    C_4_U->i_ce0(readData32_U0_C_4_ce0);
    C_4_U->i_we0(readData32_U0_C_4_we0);
    C_4_U->i_d0(readData32_U0_C_4_d0);
    C_4_U->i_q0(C_4_i_q0);
    C_4_U->t_address0(kernel_2mm_U0_C_4_address0);
    C_4_U->t_ce0(kernel_2mm_U0_C_4_ce0);
    C_4_U->t_we0(ap_var_for_const1);
    C_4_U->t_d0(ap_var_for_const2);
    C_4_U->t_q0(C_4_t_q0);
    C_4_U->i_ce(ap_var_for_const0);
    C_4_U->t_ce(ap_var_for_const0);
    C_4_U->i_full_n(C_4_i_full_n);
    C_4_U->i_write(ap_channel_done_C_4);
    C_4_U->t_empty_n(C_4_t_empty_n);
    C_4_U->t_read(kernel_2mm_U0_ap_ready);
    C_5_U = new kernel_2mm_wrappesc4("C_5_U");
    C_5_U->clk(ap_clk);
    C_5_U->reset(ap_rst_n_inv);
    C_5_U->i_address0(readData32_U0_C_5_address0);
    C_5_U->i_ce0(readData32_U0_C_5_ce0);
    C_5_U->i_we0(readData32_U0_C_5_we0);
    C_5_U->i_d0(readData32_U0_C_5_d0);
    C_5_U->i_q0(C_5_i_q0);
    C_5_U->t_address0(kernel_2mm_U0_C_5_address0);
    C_5_U->t_ce0(kernel_2mm_U0_C_5_ce0);
    C_5_U->t_we0(ap_var_for_const1);
    C_5_U->t_d0(ap_var_for_const2);
    C_5_U->t_q0(C_5_t_q0);
    C_5_U->i_ce(ap_var_for_const0);
    C_5_U->t_ce(ap_var_for_const0);
    C_5_U->i_full_n(C_5_i_full_n);
    C_5_U->i_write(ap_channel_done_C_5);
    C_5_U->t_empty_n(C_5_t_empty_n);
    C_5_U->t_read(kernel_2mm_U0_ap_ready);
    C_6_U = new kernel_2mm_wrappesc4("C_6_U");
    C_6_U->clk(ap_clk);
    C_6_U->reset(ap_rst_n_inv);
    C_6_U->i_address0(readData32_U0_C_6_address0);
    C_6_U->i_ce0(readData32_U0_C_6_ce0);
    C_6_U->i_we0(readData32_U0_C_6_we0);
    C_6_U->i_d0(readData32_U0_C_6_d0);
    C_6_U->i_q0(C_6_i_q0);
    C_6_U->t_address0(kernel_2mm_U0_C_6_address0);
    C_6_U->t_ce0(kernel_2mm_U0_C_6_ce0);
    C_6_U->t_we0(ap_var_for_const1);
    C_6_U->t_d0(ap_var_for_const2);
    C_6_U->t_q0(C_6_t_q0);
    C_6_U->i_ce(ap_var_for_const0);
    C_6_U->t_ce(ap_var_for_const0);
    C_6_U->i_full_n(C_6_i_full_n);
    C_6_U->i_write(ap_channel_done_C_6);
    C_6_U->t_empty_n(C_6_t_empty_n);
    C_6_U->t_read(kernel_2mm_U0_ap_ready);
    C_7_U = new kernel_2mm_wrappesc4("C_7_U");
    C_7_U->clk(ap_clk);
    C_7_U->reset(ap_rst_n_inv);
    C_7_U->i_address0(readData32_U0_C_7_address0);
    C_7_U->i_ce0(readData32_U0_C_7_ce0);
    C_7_U->i_we0(readData32_U0_C_7_we0);
    C_7_U->i_d0(readData32_U0_C_7_d0);
    C_7_U->i_q0(C_7_i_q0);
    C_7_U->t_address0(kernel_2mm_U0_C_7_address0);
    C_7_U->t_ce0(kernel_2mm_U0_C_7_ce0);
    C_7_U->t_we0(ap_var_for_const1);
    C_7_U->t_d0(ap_var_for_const2);
    C_7_U->t_q0(C_7_t_q0);
    C_7_U->i_ce(ap_var_for_const0);
    C_7_U->t_ce(ap_var_for_const0);
    C_7_U->i_full_n(C_7_i_full_n);
    C_7_U->i_write(ap_channel_done_C_7);
    C_7_U->t_empty_n(C_7_t_empty_n);
    C_7_U->t_read(kernel_2mm_U0_ap_ready);
    D_U = new kernel_2mm_wrappeyd2("D_U");
    D_U->clk(ap_clk);
    D_U->reset(ap_rst_n_inv);
    D_U->i_address0(readData32_U0_D_address0);
    D_U->i_ce0(readData32_U0_D_ce0);
    D_U->i_we0(readData32_U0_D_we0);
    D_U->i_d0(readData32_U0_D_d0);
    D_U->i_q0(D_i_q0);
    D_U->t_address0(kernel_2mm_U0_D_address0);
    D_U->t_ce0(kernel_2mm_U0_D_ce0);
    D_U->t_we0(ap_var_for_const1);
    D_U->t_d0(ap_var_for_const2);
    D_U->t_q0(D_t_q0);
    D_U->i_ce(ap_var_for_const0);
    D_U->t_ce(ap_var_for_const0);
    D_U->i_full_n(D_i_full_n);
    D_U->i_write(ap_channel_done_D);
    D_U->t_empty_n(D_t_empty_n);
    D_U->t_read(kernel_2mm_U0_ap_ready);
    D_output_U = new kernel_2mm_wrappeyd2("D_output_U");
    D_output_U->clk(ap_clk);
    D_output_U->reset(ap_rst_n_inv);
    D_output_U->i_address0(kernel_2mm_U0_D_output_address0);
    D_output_U->i_ce0(kernel_2mm_U0_D_output_ce0);
    D_output_U->i_we0(kernel_2mm_U0_D_output_we0);
    D_output_U->i_d0(kernel_2mm_U0_D_output_d0);
    D_output_U->i_q0(D_output_i_q0);
    D_output_U->t_address0(writeData_U0_D_output_address0);
    D_output_U->t_ce0(writeData_U0_D_output_ce0);
    D_output_U->t_we0(ap_var_for_const1);
    D_output_U->t_d0(ap_var_for_const2);
    D_output_U->t_q0(D_output_t_q0);
    D_output_U->i_ce(ap_var_for_const0);
    D_output_U->t_ce(ap_var_for_const0);
    D_output_U->i_full_n(D_output_i_full_n);
    D_output_U->i_write(kernel_2mm_U0_ap_done);
    D_output_U->t_empty_n(D_output_t_empty_n);
    D_output_U->t_read(writeData_U0_ap_ready);
    readData32_U0 = new readData32("readData32_U0");
    readData32_U0->ap_clk(ap_clk);
    readData32_U0->ap_rst(ap_rst_n_inv);
    readData32_U0->ap_start(readData32_U0_ap_start);
    readData32_U0->ap_done(readData32_U0_ap_done);
    readData32_U0->ap_continue(readData32_U0_ap_continue);
    readData32_U0->ap_idle(readData32_U0_ap_idle);
    readData32_U0->ap_ready(readData32_U0_ap_ready);
    readData32_U0->m_axi_A_AXI_AWVALID(readData32_U0_m_axi_A_AXI_AWVALID);
    readData32_U0->m_axi_A_AXI_AWREADY(ap_var_for_const1);
    readData32_U0->m_axi_A_AXI_AWADDR(readData32_U0_m_axi_A_AXI_AWADDR);
    readData32_U0->m_axi_A_AXI_AWID(readData32_U0_m_axi_A_AXI_AWID);
    readData32_U0->m_axi_A_AXI_AWLEN(readData32_U0_m_axi_A_AXI_AWLEN);
    readData32_U0->m_axi_A_AXI_AWSIZE(readData32_U0_m_axi_A_AXI_AWSIZE);
    readData32_U0->m_axi_A_AXI_AWBURST(readData32_U0_m_axi_A_AXI_AWBURST);
    readData32_U0->m_axi_A_AXI_AWLOCK(readData32_U0_m_axi_A_AXI_AWLOCK);
    readData32_U0->m_axi_A_AXI_AWCACHE(readData32_U0_m_axi_A_AXI_AWCACHE);
    readData32_U0->m_axi_A_AXI_AWPROT(readData32_U0_m_axi_A_AXI_AWPROT);
    readData32_U0->m_axi_A_AXI_AWQOS(readData32_U0_m_axi_A_AXI_AWQOS);
    readData32_U0->m_axi_A_AXI_AWREGION(readData32_U0_m_axi_A_AXI_AWREGION);
    readData32_U0->m_axi_A_AXI_AWUSER(readData32_U0_m_axi_A_AXI_AWUSER);
    readData32_U0->m_axi_A_AXI_WVALID(readData32_U0_m_axi_A_AXI_WVALID);
    readData32_U0->m_axi_A_AXI_WREADY(ap_var_for_const1);
    readData32_U0->m_axi_A_AXI_WDATA(readData32_U0_m_axi_A_AXI_WDATA);
    readData32_U0->m_axi_A_AXI_WSTRB(readData32_U0_m_axi_A_AXI_WSTRB);
    readData32_U0->m_axi_A_AXI_WLAST(readData32_U0_m_axi_A_AXI_WLAST);
    readData32_U0->m_axi_A_AXI_WID(readData32_U0_m_axi_A_AXI_WID);
    readData32_U0->m_axi_A_AXI_WUSER(readData32_U0_m_axi_A_AXI_WUSER);
    readData32_U0->m_axi_A_AXI_ARVALID(readData32_U0_m_axi_A_AXI_ARVALID);
    readData32_U0->m_axi_A_AXI_ARREADY(gmem0_ARREADY);
    readData32_U0->m_axi_A_AXI_ARADDR(readData32_U0_m_axi_A_AXI_ARADDR);
    readData32_U0->m_axi_A_AXI_ARID(readData32_U0_m_axi_A_AXI_ARID);
    readData32_U0->m_axi_A_AXI_ARLEN(readData32_U0_m_axi_A_AXI_ARLEN);
    readData32_U0->m_axi_A_AXI_ARSIZE(readData32_U0_m_axi_A_AXI_ARSIZE);
    readData32_U0->m_axi_A_AXI_ARBURST(readData32_U0_m_axi_A_AXI_ARBURST);
    readData32_U0->m_axi_A_AXI_ARLOCK(readData32_U0_m_axi_A_AXI_ARLOCK);
    readData32_U0->m_axi_A_AXI_ARCACHE(readData32_U0_m_axi_A_AXI_ARCACHE);
    readData32_U0->m_axi_A_AXI_ARPROT(readData32_U0_m_axi_A_AXI_ARPROT);
    readData32_U0->m_axi_A_AXI_ARQOS(readData32_U0_m_axi_A_AXI_ARQOS);
    readData32_U0->m_axi_A_AXI_ARREGION(readData32_U0_m_axi_A_AXI_ARREGION);
    readData32_U0->m_axi_A_AXI_ARUSER(readData32_U0_m_axi_A_AXI_ARUSER);
    readData32_U0->m_axi_A_AXI_RVALID(gmem0_RVALID);
    readData32_U0->m_axi_A_AXI_RREADY(readData32_U0_m_axi_A_AXI_RREADY);
    readData32_U0->m_axi_A_AXI_RDATA(gmem0_RDATA);
    readData32_U0->m_axi_A_AXI_RLAST(gmem0_RLAST);
    readData32_U0->m_axi_A_AXI_RID(gmem0_RID);
    readData32_U0->m_axi_A_AXI_RUSER(gmem0_RUSER);
    readData32_U0->m_axi_A_AXI_RRESP(gmem0_RRESP);
    readData32_U0->m_axi_A_AXI_BVALID(ap_var_for_const1);
    readData32_U0->m_axi_A_AXI_BREADY(readData32_U0_m_axi_A_AXI_BREADY);
    readData32_U0->m_axi_A_AXI_BRESP(ap_var_for_const5);
    readData32_U0->m_axi_A_AXI_BID(ap_var_for_const3);
    readData32_U0->m_axi_A_AXI_BUSER(ap_var_for_const3);
    readData32_U0->A_AXI_offset(A_AXI);
    readData32_U0->m_axi_B_AXI_AWVALID(readData32_U0_m_axi_B_AXI_AWVALID);
    readData32_U0->m_axi_B_AXI_AWREADY(ap_var_for_const1);
    readData32_U0->m_axi_B_AXI_AWADDR(readData32_U0_m_axi_B_AXI_AWADDR);
    readData32_U0->m_axi_B_AXI_AWID(readData32_U0_m_axi_B_AXI_AWID);
    readData32_U0->m_axi_B_AXI_AWLEN(readData32_U0_m_axi_B_AXI_AWLEN);
    readData32_U0->m_axi_B_AXI_AWSIZE(readData32_U0_m_axi_B_AXI_AWSIZE);
    readData32_U0->m_axi_B_AXI_AWBURST(readData32_U0_m_axi_B_AXI_AWBURST);
    readData32_U0->m_axi_B_AXI_AWLOCK(readData32_U0_m_axi_B_AXI_AWLOCK);
    readData32_U0->m_axi_B_AXI_AWCACHE(readData32_U0_m_axi_B_AXI_AWCACHE);
    readData32_U0->m_axi_B_AXI_AWPROT(readData32_U0_m_axi_B_AXI_AWPROT);
    readData32_U0->m_axi_B_AXI_AWQOS(readData32_U0_m_axi_B_AXI_AWQOS);
    readData32_U0->m_axi_B_AXI_AWREGION(readData32_U0_m_axi_B_AXI_AWREGION);
    readData32_U0->m_axi_B_AXI_AWUSER(readData32_U0_m_axi_B_AXI_AWUSER);
    readData32_U0->m_axi_B_AXI_WVALID(readData32_U0_m_axi_B_AXI_WVALID);
    readData32_U0->m_axi_B_AXI_WREADY(ap_var_for_const1);
    readData32_U0->m_axi_B_AXI_WDATA(readData32_U0_m_axi_B_AXI_WDATA);
    readData32_U0->m_axi_B_AXI_WSTRB(readData32_U0_m_axi_B_AXI_WSTRB);
    readData32_U0->m_axi_B_AXI_WLAST(readData32_U0_m_axi_B_AXI_WLAST);
    readData32_U0->m_axi_B_AXI_WID(readData32_U0_m_axi_B_AXI_WID);
    readData32_U0->m_axi_B_AXI_WUSER(readData32_U0_m_axi_B_AXI_WUSER);
    readData32_U0->m_axi_B_AXI_ARVALID(readData32_U0_m_axi_B_AXI_ARVALID);
    readData32_U0->m_axi_B_AXI_ARREADY(gmem1_ARREADY);
    readData32_U0->m_axi_B_AXI_ARADDR(readData32_U0_m_axi_B_AXI_ARADDR);
    readData32_U0->m_axi_B_AXI_ARID(readData32_U0_m_axi_B_AXI_ARID);
    readData32_U0->m_axi_B_AXI_ARLEN(readData32_U0_m_axi_B_AXI_ARLEN);
    readData32_U0->m_axi_B_AXI_ARSIZE(readData32_U0_m_axi_B_AXI_ARSIZE);
    readData32_U0->m_axi_B_AXI_ARBURST(readData32_U0_m_axi_B_AXI_ARBURST);
    readData32_U0->m_axi_B_AXI_ARLOCK(readData32_U0_m_axi_B_AXI_ARLOCK);
    readData32_U0->m_axi_B_AXI_ARCACHE(readData32_U0_m_axi_B_AXI_ARCACHE);
    readData32_U0->m_axi_B_AXI_ARPROT(readData32_U0_m_axi_B_AXI_ARPROT);
    readData32_U0->m_axi_B_AXI_ARQOS(readData32_U0_m_axi_B_AXI_ARQOS);
    readData32_U0->m_axi_B_AXI_ARREGION(readData32_U0_m_axi_B_AXI_ARREGION);
    readData32_U0->m_axi_B_AXI_ARUSER(readData32_U0_m_axi_B_AXI_ARUSER);
    readData32_U0->m_axi_B_AXI_RVALID(gmem1_RVALID);
    readData32_U0->m_axi_B_AXI_RREADY(readData32_U0_m_axi_B_AXI_RREADY);
    readData32_U0->m_axi_B_AXI_RDATA(gmem1_RDATA);
    readData32_U0->m_axi_B_AXI_RLAST(gmem1_RLAST);
    readData32_U0->m_axi_B_AXI_RID(gmem1_RID);
    readData32_U0->m_axi_B_AXI_RUSER(gmem1_RUSER);
    readData32_U0->m_axi_B_AXI_RRESP(gmem1_RRESP);
    readData32_U0->m_axi_B_AXI_BVALID(ap_var_for_const1);
    readData32_U0->m_axi_B_AXI_BREADY(readData32_U0_m_axi_B_AXI_BREADY);
    readData32_U0->m_axi_B_AXI_BRESP(ap_var_for_const5);
    readData32_U0->m_axi_B_AXI_BID(ap_var_for_const3);
    readData32_U0->m_axi_B_AXI_BUSER(ap_var_for_const3);
    readData32_U0->B_AXI_offset(B_AXI);
    readData32_U0->m_axi_C_AXI_AWVALID(readData32_U0_m_axi_C_AXI_AWVALID);
    readData32_U0->m_axi_C_AXI_AWREADY(ap_var_for_const1);
    readData32_U0->m_axi_C_AXI_AWADDR(readData32_U0_m_axi_C_AXI_AWADDR);
    readData32_U0->m_axi_C_AXI_AWID(readData32_U0_m_axi_C_AXI_AWID);
    readData32_U0->m_axi_C_AXI_AWLEN(readData32_U0_m_axi_C_AXI_AWLEN);
    readData32_U0->m_axi_C_AXI_AWSIZE(readData32_U0_m_axi_C_AXI_AWSIZE);
    readData32_U0->m_axi_C_AXI_AWBURST(readData32_U0_m_axi_C_AXI_AWBURST);
    readData32_U0->m_axi_C_AXI_AWLOCK(readData32_U0_m_axi_C_AXI_AWLOCK);
    readData32_U0->m_axi_C_AXI_AWCACHE(readData32_U0_m_axi_C_AXI_AWCACHE);
    readData32_U0->m_axi_C_AXI_AWPROT(readData32_U0_m_axi_C_AXI_AWPROT);
    readData32_U0->m_axi_C_AXI_AWQOS(readData32_U0_m_axi_C_AXI_AWQOS);
    readData32_U0->m_axi_C_AXI_AWREGION(readData32_U0_m_axi_C_AXI_AWREGION);
    readData32_U0->m_axi_C_AXI_AWUSER(readData32_U0_m_axi_C_AXI_AWUSER);
    readData32_U0->m_axi_C_AXI_WVALID(readData32_U0_m_axi_C_AXI_WVALID);
    readData32_U0->m_axi_C_AXI_WREADY(ap_var_for_const1);
    readData32_U0->m_axi_C_AXI_WDATA(readData32_U0_m_axi_C_AXI_WDATA);
    readData32_U0->m_axi_C_AXI_WSTRB(readData32_U0_m_axi_C_AXI_WSTRB);
    readData32_U0->m_axi_C_AXI_WLAST(readData32_U0_m_axi_C_AXI_WLAST);
    readData32_U0->m_axi_C_AXI_WID(readData32_U0_m_axi_C_AXI_WID);
    readData32_U0->m_axi_C_AXI_WUSER(readData32_U0_m_axi_C_AXI_WUSER);
    readData32_U0->m_axi_C_AXI_ARVALID(readData32_U0_m_axi_C_AXI_ARVALID);
    readData32_U0->m_axi_C_AXI_ARREADY(gmem2_ARREADY);
    readData32_U0->m_axi_C_AXI_ARADDR(readData32_U0_m_axi_C_AXI_ARADDR);
    readData32_U0->m_axi_C_AXI_ARID(readData32_U0_m_axi_C_AXI_ARID);
    readData32_U0->m_axi_C_AXI_ARLEN(readData32_U0_m_axi_C_AXI_ARLEN);
    readData32_U0->m_axi_C_AXI_ARSIZE(readData32_U0_m_axi_C_AXI_ARSIZE);
    readData32_U0->m_axi_C_AXI_ARBURST(readData32_U0_m_axi_C_AXI_ARBURST);
    readData32_U0->m_axi_C_AXI_ARLOCK(readData32_U0_m_axi_C_AXI_ARLOCK);
    readData32_U0->m_axi_C_AXI_ARCACHE(readData32_U0_m_axi_C_AXI_ARCACHE);
    readData32_U0->m_axi_C_AXI_ARPROT(readData32_U0_m_axi_C_AXI_ARPROT);
    readData32_U0->m_axi_C_AXI_ARQOS(readData32_U0_m_axi_C_AXI_ARQOS);
    readData32_U0->m_axi_C_AXI_ARREGION(readData32_U0_m_axi_C_AXI_ARREGION);
    readData32_U0->m_axi_C_AXI_ARUSER(readData32_U0_m_axi_C_AXI_ARUSER);
    readData32_U0->m_axi_C_AXI_RVALID(gmem2_RVALID);
    readData32_U0->m_axi_C_AXI_RREADY(readData32_U0_m_axi_C_AXI_RREADY);
    readData32_U0->m_axi_C_AXI_RDATA(gmem2_RDATA);
    readData32_U0->m_axi_C_AXI_RLAST(gmem2_RLAST);
    readData32_U0->m_axi_C_AXI_RID(gmem2_RID);
    readData32_U0->m_axi_C_AXI_RUSER(gmem2_RUSER);
    readData32_U0->m_axi_C_AXI_RRESP(gmem2_RRESP);
    readData32_U0->m_axi_C_AXI_BVALID(ap_var_for_const1);
    readData32_U0->m_axi_C_AXI_BREADY(readData32_U0_m_axi_C_AXI_BREADY);
    readData32_U0->m_axi_C_AXI_BRESP(ap_var_for_const5);
    readData32_U0->m_axi_C_AXI_BID(ap_var_for_const3);
    readData32_U0->m_axi_C_AXI_BUSER(ap_var_for_const3);
    readData32_U0->C_AXI_offset(C_AXI);
    readData32_U0->m_axi_D_input_AXI_AWVALID(readData32_U0_m_axi_D_input_AXI_AWVALID);
    readData32_U0->m_axi_D_input_AXI_AWREADY(ap_var_for_const1);
    readData32_U0->m_axi_D_input_AXI_AWADDR(readData32_U0_m_axi_D_input_AXI_AWADDR);
    readData32_U0->m_axi_D_input_AXI_AWID(readData32_U0_m_axi_D_input_AXI_AWID);
    readData32_U0->m_axi_D_input_AXI_AWLEN(readData32_U0_m_axi_D_input_AXI_AWLEN);
    readData32_U0->m_axi_D_input_AXI_AWSIZE(readData32_U0_m_axi_D_input_AXI_AWSIZE);
    readData32_U0->m_axi_D_input_AXI_AWBURST(readData32_U0_m_axi_D_input_AXI_AWBURST);
    readData32_U0->m_axi_D_input_AXI_AWLOCK(readData32_U0_m_axi_D_input_AXI_AWLOCK);
    readData32_U0->m_axi_D_input_AXI_AWCACHE(readData32_U0_m_axi_D_input_AXI_AWCACHE);
    readData32_U0->m_axi_D_input_AXI_AWPROT(readData32_U0_m_axi_D_input_AXI_AWPROT);
    readData32_U0->m_axi_D_input_AXI_AWQOS(readData32_U0_m_axi_D_input_AXI_AWQOS);
    readData32_U0->m_axi_D_input_AXI_AWREGION(readData32_U0_m_axi_D_input_AXI_AWREGION);
    readData32_U0->m_axi_D_input_AXI_AWUSER(readData32_U0_m_axi_D_input_AXI_AWUSER);
    readData32_U0->m_axi_D_input_AXI_WVALID(readData32_U0_m_axi_D_input_AXI_WVALID);
    readData32_U0->m_axi_D_input_AXI_WREADY(ap_var_for_const1);
    readData32_U0->m_axi_D_input_AXI_WDATA(readData32_U0_m_axi_D_input_AXI_WDATA);
    readData32_U0->m_axi_D_input_AXI_WSTRB(readData32_U0_m_axi_D_input_AXI_WSTRB);
    readData32_U0->m_axi_D_input_AXI_WLAST(readData32_U0_m_axi_D_input_AXI_WLAST);
    readData32_U0->m_axi_D_input_AXI_WID(readData32_U0_m_axi_D_input_AXI_WID);
    readData32_U0->m_axi_D_input_AXI_WUSER(readData32_U0_m_axi_D_input_AXI_WUSER);
    readData32_U0->m_axi_D_input_AXI_ARVALID(readData32_U0_m_axi_D_input_AXI_ARVALID);
    readData32_U0->m_axi_D_input_AXI_ARREADY(gmem3_ARREADY);
    readData32_U0->m_axi_D_input_AXI_ARADDR(readData32_U0_m_axi_D_input_AXI_ARADDR);
    readData32_U0->m_axi_D_input_AXI_ARID(readData32_U0_m_axi_D_input_AXI_ARID);
    readData32_U0->m_axi_D_input_AXI_ARLEN(readData32_U0_m_axi_D_input_AXI_ARLEN);
    readData32_U0->m_axi_D_input_AXI_ARSIZE(readData32_U0_m_axi_D_input_AXI_ARSIZE);
    readData32_U0->m_axi_D_input_AXI_ARBURST(readData32_U0_m_axi_D_input_AXI_ARBURST);
    readData32_U0->m_axi_D_input_AXI_ARLOCK(readData32_U0_m_axi_D_input_AXI_ARLOCK);
    readData32_U0->m_axi_D_input_AXI_ARCACHE(readData32_U0_m_axi_D_input_AXI_ARCACHE);
    readData32_U0->m_axi_D_input_AXI_ARPROT(readData32_U0_m_axi_D_input_AXI_ARPROT);
    readData32_U0->m_axi_D_input_AXI_ARQOS(readData32_U0_m_axi_D_input_AXI_ARQOS);
    readData32_U0->m_axi_D_input_AXI_ARREGION(readData32_U0_m_axi_D_input_AXI_ARREGION);
    readData32_U0->m_axi_D_input_AXI_ARUSER(readData32_U0_m_axi_D_input_AXI_ARUSER);
    readData32_U0->m_axi_D_input_AXI_RVALID(gmem3_RVALID);
    readData32_U0->m_axi_D_input_AXI_RREADY(readData32_U0_m_axi_D_input_AXI_RREADY);
    readData32_U0->m_axi_D_input_AXI_RDATA(gmem3_RDATA);
    readData32_U0->m_axi_D_input_AXI_RLAST(gmem3_RLAST);
    readData32_U0->m_axi_D_input_AXI_RID(gmem3_RID);
    readData32_U0->m_axi_D_input_AXI_RUSER(gmem3_RUSER);
    readData32_U0->m_axi_D_input_AXI_RRESP(gmem3_RRESP);
    readData32_U0->m_axi_D_input_AXI_BVALID(ap_var_for_const1);
    readData32_U0->m_axi_D_input_AXI_BREADY(readData32_U0_m_axi_D_input_AXI_BREADY);
    readData32_U0->m_axi_D_input_AXI_BRESP(ap_var_for_const5);
    readData32_U0->m_axi_D_input_AXI_BID(ap_var_for_const3);
    readData32_U0->m_axi_D_input_AXI_BUSER(ap_var_for_const3);
    readData32_U0->D_input_AXI_offset(D_input_AXI);
    readData32_U0->A_0_address0(readData32_U0_A_0_address0);
    readData32_U0->A_0_ce0(readData32_U0_A_0_ce0);
    readData32_U0->A_0_we0(readData32_U0_A_0_we0);
    readData32_U0->A_0_d0(readData32_U0_A_0_d0);
    readData32_U0->A_1_address0(readData32_U0_A_1_address0);
    readData32_U0->A_1_ce0(readData32_U0_A_1_ce0);
    readData32_U0->A_1_we0(readData32_U0_A_1_we0);
    readData32_U0->A_1_d0(readData32_U0_A_1_d0);
    readData32_U0->B_0_address0(readData32_U0_B_0_address0);
    readData32_U0->B_0_ce0(readData32_U0_B_0_ce0);
    readData32_U0->B_0_we0(readData32_U0_B_0_we0);
    readData32_U0->B_0_d0(readData32_U0_B_0_d0);
    readData32_U0->B_1_address0(readData32_U0_B_1_address0);
    readData32_U0->B_1_ce0(readData32_U0_B_1_ce0);
    readData32_U0->B_1_we0(readData32_U0_B_1_we0);
    readData32_U0->B_1_d0(readData32_U0_B_1_d0);
    readData32_U0->C_0_address0(readData32_U0_C_0_address0);
    readData32_U0->C_0_ce0(readData32_U0_C_0_ce0);
    readData32_U0->C_0_we0(readData32_U0_C_0_we0);
    readData32_U0->C_0_d0(readData32_U0_C_0_d0);
    readData32_U0->C_1_address0(readData32_U0_C_1_address0);
    readData32_U0->C_1_ce0(readData32_U0_C_1_ce0);
    readData32_U0->C_1_we0(readData32_U0_C_1_we0);
    readData32_U0->C_1_d0(readData32_U0_C_1_d0);
    readData32_U0->C_2_address0(readData32_U0_C_2_address0);
    readData32_U0->C_2_ce0(readData32_U0_C_2_ce0);
    readData32_U0->C_2_we0(readData32_U0_C_2_we0);
    readData32_U0->C_2_d0(readData32_U0_C_2_d0);
    readData32_U0->C_3_address0(readData32_U0_C_3_address0);
    readData32_U0->C_3_ce0(readData32_U0_C_3_ce0);
    readData32_U0->C_3_we0(readData32_U0_C_3_we0);
    readData32_U0->C_3_d0(readData32_U0_C_3_d0);
    readData32_U0->C_4_address0(readData32_U0_C_4_address0);
    readData32_U0->C_4_ce0(readData32_U0_C_4_ce0);
    readData32_U0->C_4_we0(readData32_U0_C_4_we0);
    readData32_U0->C_4_d0(readData32_U0_C_4_d0);
    readData32_U0->C_5_address0(readData32_U0_C_5_address0);
    readData32_U0->C_5_ce0(readData32_U0_C_5_ce0);
    readData32_U0->C_5_we0(readData32_U0_C_5_we0);
    readData32_U0->C_5_d0(readData32_U0_C_5_d0);
    readData32_U0->C_6_address0(readData32_U0_C_6_address0);
    readData32_U0->C_6_ce0(readData32_U0_C_6_ce0);
    readData32_U0->C_6_we0(readData32_U0_C_6_we0);
    readData32_U0->C_6_d0(readData32_U0_C_6_d0);
    readData32_U0->C_7_address0(readData32_U0_C_7_address0);
    readData32_U0->C_7_ce0(readData32_U0_C_7_ce0);
    readData32_U0->C_7_we0(readData32_U0_C_7_we0);
    readData32_U0->C_7_d0(readData32_U0_C_7_d0);
    readData32_U0->D_address0(readData32_U0_D_address0);
    readData32_U0->D_ce0(readData32_U0_D_ce0);
    readData32_U0->D_we0(readData32_U0_D_we0);
    readData32_U0->D_d0(readData32_U0_D_d0);
    readData32_U0->D_output_AXI(D_output_AXI);
    readData32_U0->D_output_AXI_out_din(readData32_U0_D_output_AXI_out_din);
    readData32_U0->D_output_AXI_out_full_n(D_output_AXI_c_full_n);
    readData32_U0->D_output_AXI_out_write(readData32_U0_D_output_AXI_out_write);
    kernel_2mm_U0 = new kernel_2mm("kernel_2mm_U0");
    kernel_2mm_U0->ap_clk(ap_clk);
    kernel_2mm_U0->ap_rst(ap_rst_n_inv);
    kernel_2mm_U0->A_0_address0(kernel_2mm_U0_A_0_address0);
    kernel_2mm_U0->A_0_ce0(kernel_2mm_U0_A_0_ce0);
    kernel_2mm_U0->A_0_d0(kernel_2mm_U0_A_0_d0);
    kernel_2mm_U0->A_0_q0(A_0_t_q0);
    kernel_2mm_U0->A_0_we0(kernel_2mm_U0_A_0_we0);
    kernel_2mm_U0->A_0_address1(kernel_2mm_U0_A_0_address1);
    kernel_2mm_U0->A_0_ce1(kernel_2mm_U0_A_0_ce1);
    kernel_2mm_U0->A_0_d1(kernel_2mm_U0_A_0_d1);
    kernel_2mm_U0->A_0_q1(ap_var_for_const2);
    kernel_2mm_U0->A_0_we1(kernel_2mm_U0_A_0_we1);
    kernel_2mm_U0->A_1_address0(kernel_2mm_U0_A_1_address0);
    kernel_2mm_U0->A_1_ce0(kernel_2mm_U0_A_1_ce0);
    kernel_2mm_U0->A_1_d0(kernel_2mm_U0_A_1_d0);
    kernel_2mm_U0->A_1_q0(A_1_t_q0);
    kernel_2mm_U0->A_1_we0(kernel_2mm_U0_A_1_we0);
    kernel_2mm_U0->A_1_address1(kernel_2mm_U0_A_1_address1);
    kernel_2mm_U0->A_1_ce1(kernel_2mm_U0_A_1_ce1);
    kernel_2mm_U0->A_1_d1(kernel_2mm_U0_A_1_d1);
    kernel_2mm_U0->A_1_q1(ap_var_for_const2);
    kernel_2mm_U0->A_1_we1(kernel_2mm_U0_A_1_we1);
    kernel_2mm_U0->B_0_address0(kernel_2mm_U0_B_0_address0);
    kernel_2mm_U0->B_0_ce0(kernel_2mm_U0_B_0_ce0);
    kernel_2mm_U0->B_0_d0(kernel_2mm_U0_B_0_d0);
    kernel_2mm_U0->B_0_q0(B_0_t_q0);
    kernel_2mm_U0->B_0_we0(kernel_2mm_U0_B_0_we0);
    kernel_2mm_U0->B_0_address1(kernel_2mm_U0_B_0_address1);
    kernel_2mm_U0->B_0_ce1(kernel_2mm_U0_B_0_ce1);
    kernel_2mm_U0->B_0_d1(kernel_2mm_U0_B_0_d1);
    kernel_2mm_U0->B_0_q1(ap_var_for_const2);
    kernel_2mm_U0->B_0_we1(kernel_2mm_U0_B_0_we1);
    kernel_2mm_U0->B_1_address0(kernel_2mm_U0_B_1_address0);
    kernel_2mm_U0->B_1_ce0(kernel_2mm_U0_B_1_ce0);
    kernel_2mm_U0->B_1_d0(kernel_2mm_U0_B_1_d0);
    kernel_2mm_U0->B_1_q0(B_1_t_q0);
    kernel_2mm_U0->B_1_we0(kernel_2mm_U0_B_1_we0);
    kernel_2mm_U0->B_1_address1(kernel_2mm_U0_B_1_address1);
    kernel_2mm_U0->B_1_ce1(kernel_2mm_U0_B_1_ce1);
    kernel_2mm_U0->B_1_d1(kernel_2mm_U0_B_1_d1);
    kernel_2mm_U0->B_1_q1(ap_var_for_const2);
    kernel_2mm_U0->B_1_we1(kernel_2mm_U0_B_1_we1);
    kernel_2mm_U0->C_0_address0(kernel_2mm_U0_C_0_address0);
    kernel_2mm_U0->C_0_ce0(kernel_2mm_U0_C_0_ce0);
    kernel_2mm_U0->C_0_d0(kernel_2mm_U0_C_0_d0);
    kernel_2mm_U0->C_0_q0(C_0_t_q0);
    kernel_2mm_U0->C_0_we0(kernel_2mm_U0_C_0_we0);
    kernel_2mm_U0->C_0_address1(kernel_2mm_U0_C_0_address1);
    kernel_2mm_U0->C_0_ce1(kernel_2mm_U0_C_0_ce1);
    kernel_2mm_U0->C_0_d1(kernel_2mm_U0_C_0_d1);
    kernel_2mm_U0->C_0_q1(ap_var_for_const2);
    kernel_2mm_U0->C_0_we1(kernel_2mm_U0_C_0_we1);
    kernel_2mm_U0->C_1_address0(kernel_2mm_U0_C_1_address0);
    kernel_2mm_U0->C_1_ce0(kernel_2mm_U0_C_1_ce0);
    kernel_2mm_U0->C_1_d0(kernel_2mm_U0_C_1_d0);
    kernel_2mm_U0->C_1_q0(C_1_t_q0);
    kernel_2mm_U0->C_1_we0(kernel_2mm_U0_C_1_we0);
    kernel_2mm_U0->C_1_address1(kernel_2mm_U0_C_1_address1);
    kernel_2mm_U0->C_1_ce1(kernel_2mm_U0_C_1_ce1);
    kernel_2mm_U0->C_1_d1(kernel_2mm_U0_C_1_d1);
    kernel_2mm_U0->C_1_q1(ap_var_for_const2);
    kernel_2mm_U0->C_1_we1(kernel_2mm_U0_C_1_we1);
    kernel_2mm_U0->C_2_address0(kernel_2mm_U0_C_2_address0);
    kernel_2mm_U0->C_2_ce0(kernel_2mm_U0_C_2_ce0);
    kernel_2mm_U0->C_2_d0(kernel_2mm_U0_C_2_d0);
    kernel_2mm_U0->C_2_q0(C_2_t_q0);
    kernel_2mm_U0->C_2_we0(kernel_2mm_U0_C_2_we0);
    kernel_2mm_U0->C_2_address1(kernel_2mm_U0_C_2_address1);
    kernel_2mm_U0->C_2_ce1(kernel_2mm_U0_C_2_ce1);
    kernel_2mm_U0->C_2_d1(kernel_2mm_U0_C_2_d1);
    kernel_2mm_U0->C_2_q1(ap_var_for_const2);
    kernel_2mm_U0->C_2_we1(kernel_2mm_U0_C_2_we1);
    kernel_2mm_U0->C_3_address0(kernel_2mm_U0_C_3_address0);
    kernel_2mm_U0->C_3_ce0(kernel_2mm_U0_C_3_ce0);
    kernel_2mm_U0->C_3_d0(kernel_2mm_U0_C_3_d0);
    kernel_2mm_U0->C_3_q0(C_3_t_q0);
    kernel_2mm_U0->C_3_we0(kernel_2mm_U0_C_3_we0);
    kernel_2mm_U0->C_3_address1(kernel_2mm_U0_C_3_address1);
    kernel_2mm_U0->C_3_ce1(kernel_2mm_U0_C_3_ce1);
    kernel_2mm_U0->C_3_d1(kernel_2mm_U0_C_3_d1);
    kernel_2mm_U0->C_3_q1(ap_var_for_const2);
    kernel_2mm_U0->C_3_we1(kernel_2mm_U0_C_3_we1);
    kernel_2mm_U0->C_4_address0(kernel_2mm_U0_C_4_address0);
    kernel_2mm_U0->C_4_ce0(kernel_2mm_U0_C_4_ce0);
    kernel_2mm_U0->C_4_d0(kernel_2mm_U0_C_4_d0);
    kernel_2mm_U0->C_4_q0(C_4_t_q0);
    kernel_2mm_U0->C_4_we0(kernel_2mm_U0_C_4_we0);
    kernel_2mm_U0->C_4_address1(kernel_2mm_U0_C_4_address1);
    kernel_2mm_U0->C_4_ce1(kernel_2mm_U0_C_4_ce1);
    kernel_2mm_U0->C_4_d1(kernel_2mm_U0_C_4_d1);
    kernel_2mm_U0->C_4_q1(ap_var_for_const2);
    kernel_2mm_U0->C_4_we1(kernel_2mm_U0_C_4_we1);
    kernel_2mm_U0->C_5_address0(kernel_2mm_U0_C_5_address0);
    kernel_2mm_U0->C_5_ce0(kernel_2mm_U0_C_5_ce0);
    kernel_2mm_U0->C_5_d0(kernel_2mm_U0_C_5_d0);
    kernel_2mm_U0->C_5_q0(C_5_t_q0);
    kernel_2mm_U0->C_5_we0(kernel_2mm_U0_C_5_we0);
    kernel_2mm_U0->C_5_address1(kernel_2mm_U0_C_5_address1);
    kernel_2mm_U0->C_5_ce1(kernel_2mm_U0_C_5_ce1);
    kernel_2mm_U0->C_5_d1(kernel_2mm_U0_C_5_d1);
    kernel_2mm_U0->C_5_q1(ap_var_for_const2);
    kernel_2mm_U0->C_5_we1(kernel_2mm_U0_C_5_we1);
    kernel_2mm_U0->C_6_address0(kernel_2mm_U0_C_6_address0);
    kernel_2mm_U0->C_6_ce0(kernel_2mm_U0_C_6_ce0);
    kernel_2mm_U0->C_6_d0(kernel_2mm_U0_C_6_d0);
    kernel_2mm_U0->C_6_q0(C_6_t_q0);
    kernel_2mm_U0->C_6_we0(kernel_2mm_U0_C_6_we0);
    kernel_2mm_U0->C_6_address1(kernel_2mm_U0_C_6_address1);
    kernel_2mm_U0->C_6_ce1(kernel_2mm_U0_C_6_ce1);
    kernel_2mm_U0->C_6_d1(kernel_2mm_U0_C_6_d1);
    kernel_2mm_U0->C_6_q1(ap_var_for_const2);
    kernel_2mm_U0->C_6_we1(kernel_2mm_U0_C_6_we1);
    kernel_2mm_U0->C_7_address0(kernel_2mm_U0_C_7_address0);
    kernel_2mm_U0->C_7_ce0(kernel_2mm_U0_C_7_ce0);
    kernel_2mm_U0->C_7_d0(kernel_2mm_U0_C_7_d0);
    kernel_2mm_U0->C_7_q0(C_7_t_q0);
    kernel_2mm_U0->C_7_we0(kernel_2mm_U0_C_7_we0);
    kernel_2mm_U0->C_7_address1(kernel_2mm_U0_C_7_address1);
    kernel_2mm_U0->C_7_ce1(kernel_2mm_U0_C_7_ce1);
    kernel_2mm_U0->C_7_d1(kernel_2mm_U0_C_7_d1);
    kernel_2mm_U0->C_7_q1(ap_var_for_const2);
    kernel_2mm_U0->C_7_we1(kernel_2mm_U0_C_7_we1);
    kernel_2mm_U0->D_address0(kernel_2mm_U0_D_address0);
    kernel_2mm_U0->D_ce0(kernel_2mm_U0_D_ce0);
    kernel_2mm_U0->D_d0(kernel_2mm_U0_D_d0);
    kernel_2mm_U0->D_q0(D_t_q0);
    kernel_2mm_U0->D_we0(kernel_2mm_U0_D_we0);
    kernel_2mm_U0->D_address1(kernel_2mm_U0_D_address1);
    kernel_2mm_U0->D_ce1(kernel_2mm_U0_D_ce1);
    kernel_2mm_U0->D_d1(kernel_2mm_U0_D_d1);
    kernel_2mm_U0->D_q1(ap_var_for_const2);
    kernel_2mm_U0->D_we1(kernel_2mm_U0_D_we1);
    kernel_2mm_U0->D_output_address0(kernel_2mm_U0_D_output_address0);
    kernel_2mm_U0->D_output_ce0(kernel_2mm_U0_D_output_ce0);
    kernel_2mm_U0->D_output_d0(kernel_2mm_U0_D_output_d0);
    kernel_2mm_U0->D_output_q0(ap_var_for_const2);
    kernel_2mm_U0->D_output_we0(kernel_2mm_U0_D_output_we0);
    kernel_2mm_U0->D_output_address1(kernel_2mm_U0_D_output_address1);
    kernel_2mm_U0->D_output_ce1(kernel_2mm_U0_D_output_ce1);
    kernel_2mm_U0->D_output_d1(kernel_2mm_U0_D_output_d1);
    kernel_2mm_U0->D_output_q1(ap_var_for_const2);
    kernel_2mm_U0->D_output_we1(kernel_2mm_U0_D_output_we1);
    kernel_2mm_U0->A_0_empty_n(ap_var_for_const1);
    kernel_2mm_U0->A_0_read(kernel_2mm_U0_A_0_read);
    kernel_2mm_U0->A_1_empty_n(ap_var_for_const1);
    kernel_2mm_U0->A_1_read(kernel_2mm_U0_A_1_read);
    kernel_2mm_U0->B_0_empty_n(ap_var_for_const1);
    kernel_2mm_U0->B_0_read(kernel_2mm_U0_B_0_read);
    kernel_2mm_U0->B_1_empty_n(ap_var_for_const1);
    kernel_2mm_U0->B_1_read(kernel_2mm_U0_B_1_read);
    kernel_2mm_U0->C_0_empty_n(ap_var_for_const1);
    kernel_2mm_U0->C_0_read(kernel_2mm_U0_C_0_read);
    kernel_2mm_U0->C_1_empty_n(ap_var_for_const1);
    kernel_2mm_U0->C_1_read(kernel_2mm_U0_C_1_read);
    kernel_2mm_U0->C_2_empty_n(ap_var_for_const1);
    kernel_2mm_U0->C_2_read(kernel_2mm_U0_C_2_read);
    kernel_2mm_U0->C_3_empty_n(ap_var_for_const1);
    kernel_2mm_U0->C_3_read(kernel_2mm_U0_C_3_read);
    kernel_2mm_U0->C_4_empty_n(ap_var_for_const1);
    kernel_2mm_U0->C_4_read(kernel_2mm_U0_C_4_read);
    kernel_2mm_U0->C_5_empty_n(ap_var_for_const1);
    kernel_2mm_U0->C_5_read(kernel_2mm_U0_C_5_read);
    kernel_2mm_U0->C_6_empty_n(ap_var_for_const1);
    kernel_2mm_U0->C_6_read(kernel_2mm_U0_C_6_read);
    kernel_2mm_U0->C_7_empty_n(ap_var_for_const1);
    kernel_2mm_U0->C_7_read(kernel_2mm_U0_C_7_read);
    kernel_2mm_U0->D_empty_n(ap_var_for_const1);
    kernel_2mm_U0->D_read(kernel_2mm_U0_D_read);
    kernel_2mm_U0->D_output_full_n(D_output_i_full_n);
    kernel_2mm_U0->D_output_write(kernel_2mm_U0_D_output_write);
    kernel_2mm_U0->ap_done(kernel_2mm_U0_ap_done);
    kernel_2mm_U0->ap_start(kernel_2mm_U0_ap_start);
    kernel_2mm_U0->ap_ready(kernel_2mm_U0_ap_ready);
    kernel_2mm_U0->ap_idle(kernel_2mm_U0_ap_idle);
    kernel_2mm_U0->ap_continue(kernel_2mm_U0_ap_continue);
    writeData_U0 = new writeData("writeData_U0");
    writeData_U0->ap_clk(ap_clk);
    writeData_U0->ap_rst(ap_rst_n_inv);
    writeData_U0->ap_start(writeData_U0_ap_start);
    writeData_U0->ap_done(writeData_U0_ap_done);
    writeData_U0->ap_continue(writeData_U0_ap_continue);
    writeData_U0->ap_idle(writeData_U0_ap_idle);
    writeData_U0->ap_ready(writeData_U0_ap_ready);
    writeData_U0->m_axi_D_output_AXI_AWVALID(writeData_U0_m_axi_D_output_AXI_AWVALID);
    writeData_U0->m_axi_D_output_AXI_AWREADY(gmem4_AWREADY);
    writeData_U0->m_axi_D_output_AXI_AWADDR(writeData_U0_m_axi_D_output_AXI_AWADDR);
    writeData_U0->m_axi_D_output_AXI_AWID(writeData_U0_m_axi_D_output_AXI_AWID);
    writeData_U0->m_axi_D_output_AXI_AWLEN(writeData_U0_m_axi_D_output_AXI_AWLEN);
    writeData_U0->m_axi_D_output_AXI_AWSIZE(writeData_U0_m_axi_D_output_AXI_AWSIZE);
    writeData_U0->m_axi_D_output_AXI_AWBURST(writeData_U0_m_axi_D_output_AXI_AWBURST);
    writeData_U0->m_axi_D_output_AXI_AWLOCK(writeData_U0_m_axi_D_output_AXI_AWLOCK);
    writeData_U0->m_axi_D_output_AXI_AWCACHE(writeData_U0_m_axi_D_output_AXI_AWCACHE);
    writeData_U0->m_axi_D_output_AXI_AWPROT(writeData_U0_m_axi_D_output_AXI_AWPROT);
    writeData_U0->m_axi_D_output_AXI_AWQOS(writeData_U0_m_axi_D_output_AXI_AWQOS);
    writeData_U0->m_axi_D_output_AXI_AWREGION(writeData_U0_m_axi_D_output_AXI_AWREGION);
    writeData_U0->m_axi_D_output_AXI_AWUSER(writeData_U0_m_axi_D_output_AXI_AWUSER);
    writeData_U0->m_axi_D_output_AXI_WVALID(writeData_U0_m_axi_D_output_AXI_WVALID);
    writeData_U0->m_axi_D_output_AXI_WREADY(gmem4_WREADY);
    writeData_U0->m_axi_D_output_AXI_WDATA(writeData_U0_m_axi_D_output_AXI_WDATA);
    writeData_U0->m_axi_D_output_AXI_WSTRB(writeData_U0_m_axi_D_output_AXI_WSTRB);
    writeData_U0->m_axi_D_output_AXI_WLAST(writeData_U0_m_axi_D_output_AXI_WLAST);
    writeData_U0->m_axi_D_output_AXI_WID(writeData_U0_m_axi_D_output_AXI_WID);
    writeData_U0->m_axi_D_output_AXI_WUSER(writeData_U0_m_axi_D_output_AXI_WUSER);
    writeData_U0->m_axi_D_output_AXI_ARVALID(writeData_U0_m_axi_D_output_AXI_ARVALID);
    writeData_U0->m_axi_D_output_AXI_ARREADY(ap_var_for_const1);
    writeData_U0->m_axi_D_output_AXI_ARADDR(writeData_U0_m_axi_D_output_AXI_ARADDR);
    writeData_U0->m_axi_D_output_AXI_ARID(writeData_U0_m_axi_D_output_AXI_ARID);
    writeData_U0->m_axi_D_output_AXI_ARLEN(writeData_U0_m_axi_D_output_AXI_ARLEN);
    writeData_U0->m_axi_D_output_AXI_ARSIZE(writeData_U0_m_axi_D_output_AXI_ARSIZE);
    writeData_U0->m_axi_D_output_AXI_ARBURST(writeData_U0_m_axi_D_output_AXI_ARBURST);
    writeData_U0->m_axi_D_output_AXI_ARLOCK(writeData_U0_m_axi_D_output_AXI_ARLOCK);
    writeData_U0->m_axi_D_output_AXI_ARCACHE(writeData_U0_m_axi_D_output_AXI_ARCACHE);
    writeData_U0->m_axi_D_output_AXI_ARPROT(writeData_U0_m_axi_D_output_AXI_ARPROT);
    writeData_U0->m_axi_D_output_AXI_ARQOS(writeData_U0_m_axi_D_output_AXI_ARQOS);
    writeData_U0->m_axi_D_output_AXI_ARREGION(writeData_U0_m_axi_D_output_AXI_ARREGION);
    writeData_U0->m_axi_D_output_AXI_ARUSER(writeData_U0_m_axi_D_output_AXI_ARUSER);
    writeData_U0->m_axi_D_output_AXI_RVALID(ap_var_for_const1);
    writeData_U0->m_axi_D_output_AXI_RREADY(writeData_U0_m_axi_D_output_AXI_RREADY);
    writeData_U0->m_axi_D_output_AXI_RDATA(ap_var_for_const2);
    writeData_U0->m_axi_D_output_AXI_RLAST(ap_var_for_const1);
    writeData_U0->m_axi_D_output_AXI_RID(ap_var_for_const3);
    writeData_U0->m_axi_D_output_AXI_RUSER(ap_var_for_const3);
    writeData_U0->m_axi_D_output_AXI_RRESP(ap_var_for_const5);
    writeData_U0->m_axi_D_output_AXI_BVALID(gmem4_BVALID);
    writeData_U0->m_axi_D_output_AXI_BREADY(writeData_U0_m_axi_D_output_AXI_BREADY);
    writeData_U0->m_axi_D_output_AXI_BRESP(gmem4_BRESP);
    writeData_U0->m_axi_D_output_AXI_BID(gmem4_BID);
    writeData_U0->m_axi_D_output_AXI_BUSER(gmem4_BUSER);
    writeData_U0->D_output_AXI_offset_dout(D_output_AXI_c_dout);
    writeData_U0->D_output_AXI_offset_empty_n(D_output_AXI_c_empty_n);
    writeData_U0->D_output_AXI_offset_read(writeData_U0_D_output_AXI_offset_read);
    writeData_U0->D_output_address0(writeData_U0_D_output_address0);
    writeData_U0->D_output_ce0(writeData_U0_D_output_ce0);
    writeData_U0->D_output_q0(D_output_t_q0);
    D_output_AXI_c_U = new fifo_w32_d3_A("D_output_AXI_c_U");
    D_output_AXI_c_U->clk(ap_clk);
    D_output_AXI_c_U->reset(ap_rst_n_inv);
    D_output_AXI_c_U->if_read_ce(ap_var_for_const0);
    D_output_AXI_c_U->if_write_ce(ap_var_for_const0);
    D_output_AXI_c_U->if_din(readData32_U0_D_output_AXI_out_din);
    D_output_AXI_c_U->if_full_n(D_output_AXI_c_full_n);
    D_output_AXI_c_U->if_write(readData32_U0_D_output_AXI_out_write);
    D_output_AXI_c_U->if_dout(D_output_AXI_c_dout);
    D_output_AXI_c_U->if_empty_n(D_output_AXI_c_empty_n);
    D_output_AXI_c_U->if_read(writeData_U0_D_output_AXI_offset_read);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_channel_done_A_0);
    sensitive << ( readData32_U0_ap_done );
    sensitive << ( ap_sync_reg_channel_write_A_0 );

    SC_METHOD(thread_ap_channel_done_A_1);
    sensitive << ( readData32_U0_ap_done );
    sensitive << ( ap_sync_reg_channel_write_A_1 );

    SC_METHOD(thread_ap_channel_done_B_0);
    sensitive << ( readData32_U0_ap_done );
    sensitive << ( ap_sync_reg_channel_write_B_0 );

    SC_METHOD(thread_ap_channel_done_B_1);
    sensitive << ( readData32_U0_ap_done );
    sensitive << ( ap_sync_reg_channel_write_B_1 );

    SC_METHOD(thread_ap_channel_done_C_0);
    sensitive << ( readData32_U0_ap_done );
    sensitive << ( ap_sync_reg_channel_write_C_0 );

    SC_METHOD(thread_ap_channel_done_C_1);
    sensitive << ( readData32_U0_ap_done );
    sensitive << ( ap_sync_reg_channel_write_C_1 );

    SC_METHOD(thread_ap_channel_done_C_2);
    sensitive << ( readData32_U0_ap_done );
    sensitive << ( ap_sync_reg_channel_write_C_2 );

    SC_METHOD(thread_ap_channel_done_C_3);
    sensitive << ( readData32_U0_ap_done );
    sensitive << ( ap_sync_reg_channel_write_C_3 );

    SC_METHOD(thread_ap_channel_done_C_4);
    sensitive << ( readData32_U0_ap_done );
    sensitive << ( ap_sync_reg_channel_write_C_4 );

    SC_METHOD(thread_ap_channel_done_C_5);
    sensitive << ( readData32_U0_ap_done );
    sensitive << ( ap_sync_reg_channel_write_C_5 );

    SC_METHOD(thread_ap_channel_done_C_6);
    sensitive << ( readData32_U0_ap_done );
    sensitive << ( ap_sync_reg_channel_write_C_6 );

    SC_METHOD(thread_ap_channel_done_C_7);
    sensitive << ( readData32_U0_ap_done );
    sensitive << ( ap_sync_reg_channel_write_C_7 );

    SC_METHOD(thread_ap_channel_done_D);
    sensitive << ( readData32_U0_ap_done );
    sensitive << ( ap_sync_reg_channel_write_D );

    SC_METHOD(thread_ap_channel_done_D_output);
    sensitive << ( kernel_2mm_U0_ap_done );

    SC_METHOD(thread_ap_done);
    sensitive << ( writeData_U0_ap_done );

    SC_METHOD(thread_ap_idle);
    sensitive << ( readData32_U0_ap_idle );
    sensitive << ( kernel_2mm_U0_ap_idle );
    sensitive << ( writeData_U0_ap_idle );
    sensitive << ( A_0_t_empty_n );
    sensitive << ( A_1_t_empty_n );
    sensitive << ( B_0_t_empty_n );
    sensitive << ( B_1_t_empty_n );
    sensitive << ( C_0_t_empty_n );
    sensitive << ( C_1_t_empty_n );
    sensitive << ( C_2_t_empty_n );
    sensitive << ( C_3_t_empty_n );
    sensitive << ( C_4_t_empty_n );
    sensitive << ( C_5_t_empty_n );
    sensitive << ( C_6_t_empty_n );
    sensitive << ( C_7_t_empty_n );
    sensitive << ( D_t_empty_n );
    sensitive << ( D_output_t_empty_n );

    SC_METHOD(thread_ap_ready);
    sensitive << ( readData32_U0_ap_ready );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sync_channel_write_A_0);
    sensitive << ( ap_channel_done_A_0 );
    sensitive << ( readData32_U0_A_0_full_n );
    sensitive << ( ap_sync_reg_channel_write_A_0 );

    SC_METHOD(thread_ap_sync_channel_write_A_1);
    sensitive << ( ap_channel_done_A_1 );
    sensitive << ( readData32_U0_A_1_full_n );
    sensitive << ( ap_sync_reg_channel_write_A_1 );

    SC_METHOD(thread_ap_sync_channel_write_B_0);
    sensitive << ( ap_channel_done_B_0 );
    sensitive << ( readData32_U0_B_0_full_n );
    sensitive << ( ap_sync_reg_channel_write_B_0 );

    SC_METHOD(thread_ap_sync_channel_write_B_1);
    sensitive << ( ap_channel_done_B_1 );
    sensitive << ( readData32_U0_B_1_full_n );
    sensitive << ( ap_sync_reg_channel_write_B_1 );

    SC_METHOD(thread_ap_sync_channel_write_C_0);
    sensitive << ( ap_channel_done_C_0 );
    sensitive << ( readData32_U0_C_0_full_n );
    sensitive << ( ap_sync_reg_channel_write_C_0 );

    SC_METHOD(thread_ap_sync_channel_write_C_1);
    sensitive << ( ap_channel_done_C_1 );
    sensitive << ( readData32_U0_C_1_full_n );
    sensitive << ( ap_sync_reg_channel_write_C_1 );

    SC_METHOD(thread_ap_sync_channel_write_C_2);
    sensitive << ( ap_channel_done_C_2 );
    sensitive << ( readData32_U0_C_2_full_n );
    sensitive << ( ap_sync_reg_channel_write_C_2 );

    SC_METHOD(thread_ap_sync_channel_write_C_3);
    sensitive << ( ap_channel_done_C_3 );
    sensitive << ( readData32_U0_C_3_full_n );
    sensitive << ( ap_sync_reg_channel_write_C_3 );

    SC_METHOD(thread_ap_sync_channel_write_C_4);
    sensitive << ( ap_channel_done_C_4 );
    sensitive << ( readData32_U0_C_4_full_n );
    sensitive << ( ap_sync_reg_channel_write_C_4 );

    SC_METHOD(thread_ap_sync_channel_write_C_5);
    sensitive << ( ap_channel_done_C_5 );
    sensitive << ( readData32_U0_C_5_full_n );
    sensitive << ( ap_sync_reg_channel_write_C_5 );

    SC_METHOD(thread_ap_sync_channel_write_C_6);
    sensitive << ( ap_channel_done_C_6 );
    sensitive << ( readData32_U0_C_6_full_n );
    sensitive << ( ap_sync_reg_channel_write_C_6 );

    SC_METHOD(thread_ap_sync_channel_write_C_7);
    sensitive << ( ap_channel_done_C_7 );
    sensitive << ( readData32_U0_C_7_full_n );
    sensitive << ( ap_sync_reg_channel_write_C_7 );

    SC_METHOD(thread_ap_sync_channel_write_D);
    sensitive << ( ap_channel_done_D );
    sensitive << ( readData32_U0_D_full_n );
    sensitive << ( ap_sync_reg_channel_write_D );

    SC_METHOD(thread_ap_sync_continue);

    SC_METHOD(thread_ap_sync_done);
    sensitive << ( writeData_U0_ap_done );

    SC_METHOD(thread_ap_sync_ready);
    sensitive << ( readData32_U0_ap_ready );

    SC_METHOD(thread_kernel_2mm_U0_D_output_full_n);
    sensitive << ( D_output_i_full_n );

    SC_METHOD(thread_kernel_2mm_U0_ap_continue);
    sensitive << ( kernel_2mm_U0_D_output_full_n );

    SC_METHOD(thread_kernel_2mm_U0_ap_start);
    sensitive << ( A_0_t_empty_n );
    sensitive << ( A_1_t_empty_n );
    sensitive << ( B_0_t_empty_n );
    sensitive << ( B_1_t_empty_n );
    sensitive << ( C_0_t_empty_n );
    sensitive << ( C_1_t_empty_n );
    sensitive << ( C_2_t_empty_n );
    sensitive << ( C_3_t_empty_n );
    sensitive << ( C_4_t_empty_n );
    sensitive << ( C_5_t_empty_n );
    sensitive << ( C_6_t_empty_n );
    sensitive << ( C_7_t_empty_n );
    sensitive << ( D_t_empty_n );

    SC_METHOD(thread_kernel_2mm_U0_start_full_n);

    SC_METHOD(thread_kernel_2mm_U0_start_write);

    SC_METHOD(thread_readData32_U0_A_0_full_n);
    sensitive << ( A_0_i_full_n );

    SC_METHOD(thread_readData32_U0_A_1_full_n);
    sensitive << ( A_1_i_full_n );

    SC_METHOD(thread_readData32_U0_B_0_full_n);
    sensitive << ( B_0_i_full_n );

    SC_METHOD(thread_readData32_U0_B_1_full_n);
    sensitive << ( B_1_i_full_n );

    SC_METHOD(thread_readData32_U0_C_0_full_n);
    sensitive << ( C_0_i_full_n );

    SC_METHOD(thread_readData32_U0_C_1_full_n);
    sensitive << ( C_1_i_full_n );

    SC_METHOD(thread_readData32_U0_C_2_full_n);
    sensitive << ( C_2_i_full_n );

    SC_METHOD(thread_readData32_U0_C_3_full_n);
    sensitive << ( C_3_i_full_n );

    SC_METHOD(thread_readData32_U0_C_4_full_n);
    sensitive << ( C_4_i_full_n );

    SC_METHOD(thread_readData32_U0_C_5_full_n);
    sensitive << ( C_5_i_full_n );

    SC_METHOD(thread_readData32_U0_C_6_full_n);
    sensitive << ( C_6_i_full_n );

    SC_METHOD(thread_readData32_U0_C_7_full_n);
    sensitive << ( C_7_i_full_n );

    SC_METHOD(thread_readData32_U0_D_full_n);
    sensitive << ( D_i_full_n );

    SC_METHOD(thread_readData32_U0_ap_continue);
    sensitive << ( ap_sync_channel_write_D );
    sensitive << ( ap_sync_channel_write_C_7 );
    sensitive << ( ap_sync_channel_write_C_6 );
    sensitive << ( ap_sync_channel_write_C_5 );
    sensitive << ( ap_sync_channel_write_C_4 );
    sensitive << ( ap_sync_channel_write_C_3 );
    sensitive << ( ap_sync_channel_write_C_2 );
    sensitive << ( ap_sync_channel_write_C_1 );
    sensitive << ( ap_sync_channel_write_C_0 );
    sensitive << ( ap_sync_channel_write_B_1 );
    sensitive << ( ap_sync_channel_write_B_0 );
    sensitive << ( ap_sync_channel_write_A_1 );
    sensitive << ( ap_sync_channel_write_A_0 );

    SC_METHOD(thread_readData32_U0_ap_start);
    sensitive << ( ap_start );

    SC_METHOD(thread_readData32_U0_start_full_n);

    SC_METHOD(thread_readData32_U0_start_write);

    SC_METHOD(thread_writeData_U0_ap_continue);

    SC_METHOD(thread_writeData_U0_ap_start);
    sensitive << ( D_output_t_empty_n );

    SC_METHOD(thread_writeData_U0_start_full_n);

    SC_METHOD(thread_writeData_U0_start_write);

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const3);

    SC_THREAD(thread_ap_var_for_const4);

    SC_THREAD(thread_ap_var_for_const5);

    SC_THREAD(thread_ap_var_for_const6);

    ap_sync_reg_channel_write_D = SC_LOGIC_0;
    ap_sync_reg_channel_write_C_7 = SC_LOGIC_0;
    ap_sync_reg_channel_write_C_6 = SC_LOGIC_0;
    ap_sync_reg_channel_write_C_5 = SC_LOGIC_0;
    ap_sync_reg_channel_write_C_4 = SC_LOGIC_0;
    ap_sync_reg_channel_write_C_3 = SC_LOGIC_0;
    ap_sync_reg_channel_write_C_2 = SC_LOGIC_0;
    ap_sync_reg_channel_write_C_1 = SC_LOGIC_0;
    ap_sync_reg_channel_write_C_0 = SC_LOGIC_0;
    ap_sync_reg_channel_write_B_1 = SC_LOGIC_0;
    ap_sync_reg_channel_write_B_0 = SC_LOGIC_0;
    ap_sync_reg_channel_write_A_1 = SC_LOGIC_0;
    ap_sync_reg_channel_write_A_0 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "kernel_2mm_wrapper_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, s_axi_for_control_AWVALID, "(port)s_axi_for_control_AWVALID");
    sc_trace(mVcdFile, s_axi_for_control_AWREADY, "(port)s_axi_for_control_AWREADY");
    sc_trace(mVcdFile, s_axi_for_control_AWADDR, "(port)s_axi_for_control_AWADDR");
    sc_trace(mVcdFile, s_axi_for_control_WVALID, "(port)s_axi_for_control_WVALID");
    sc_trace(mVcdFile, s_axi_for_control_WREADY, "(port)s_axi_for_control_WREADY");
    sc_trace(mVcdFile, s_axi_for_control_WDATA, "(port)s_axi_for_control_WDATA");
    sc_trace(mVcdFile, s_axi_for_control_WSTRB, "(port)s_axi_for_control_WSTRB");
    sc_trace(mVcdFile, s_axi_for_control_ARVALID, "(port)s_axi_for_control_ARVALID");
    sc_trace(mVcdFile, s_axi_for_control_ARREADY, "(port)s_axi_for_control_ARREADY");
    sc_trace(mVcdFile, s_axi_for_control_ARADDR, "(port)s_axi_for_control_ARADDR");
    sc_trace(mVcdFile, s_axi_for_control_RVALID, "(port)s_axi_for_control_RVALID");
    sc_trace(mVcdFile, s_axi_for_control_RREADY, "(port)s_axi_for_control_RREADY");
    sc_trace(mVcdFile, s_axi_for_control_RDATA, "(port)s_axi_for_control_RDATA");
    sc_trace(mVcdFile, s_axi_for_control_RRESP, "(port)s_axi_for_control_RRESP");
    sc_trace(mVcdFile, s_axi_for_control_BVALID, "(port)s_axi_for_control_BVALID");
    sc_trace(mVcdFile, s_axi_for_control_BREADY, "(port)s_axi_for_control_BREADY");
    sc_trace(mVcdFile, s_axi_for_control_BRESP, "(port)s_axi_for_control_BRESP");
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
    sc_trace(mVcdFile, m_axi_gmem0_AWVALID, "(port)m_axi_gmem0_AWVALID");
    sc_trace(mVcdFile, m_axi_gmem0_AWREADY, "(port)m_axi_gmem0_AWREADY");
    sc_trace(mVcdFile, m_axi_gmem0_AWADDR, "(port)m_axi_gmem0_AWADDR");
    sc_trace(mVcdFile, m_axi_gmem0_AWID, "(port)m_axi_gmem0_AWID");
    sc_trace(mVcdFile, m_axi_gmem0_AWLEN, "(port)m_axi_gmem0_AWLEN");
    sc_trace(mVcdFile, m_axi_gmem0_AWSIZE, "(port)m_axi_gmem0_AWSIZE");
    sc_trace(mVcdFile, m_axi_gmem0_AWBURST, "(port)m_axi_gmem0_AWBURST");
    sc_trace(mVcdFile, m_axi_gmem0_AWLOCK, "(port)m_axi_gmem0_AWLOCK");
    sc_trace(mVcdFile, m_axi_gmem0_AWCACHE, "(port)m_axi_gmem0_AWCACHE");
    sc_trace(mVcdFile, m_axi_gmem0_AWPROT, "(port)m_axi_gmem0_AWPROT");
    sc_trace(mVcdFile, m_axi_gmem0_AWQOS, "(port)m_axi_gmem0_AWQOS");
    sc_trace(mVcdFile, m_axi_gmem0_AWREGION, "(port)m_axi_gmem0_AWREGION");
    sc_trace(mVcdFile, m_axi_gmem0_AWUSER, "(port)m_axi_gmem0_AWUSER");
    sc_trace(mVcdFile, m_axi_gmem0_WVALID, "(port)m_axi_gmem0_WVALID");
    sc_trace(mVcdFile, m_axi_gmem0_WREADY, "(port)m_axi_gmem0_WREADY");
    sc_trace(mVcdFile, m_axi_gmem0_WDATA, "(port)m_axi_gmem0_WDATA");
    sc_trace(mVcdFile, m_axi_gmem0_WSTRB, "(port)m_axi_gmem0_WSTRB");
    sc_trace(mVcdFile, m_axi_gmem0_WLAST, "(port)m_axi_gmem0_WLAST");
    sc_trace(mVcdFile, m_axi_gmem0_WID, "(port)m_axi_gmem0_WID");
    sc_trace(mVcdFile, m_axi_gmem0_WUSER, "(port)m_axi_gmem0_WUSER");
    sc_trace(mVcdFile, m_axi_gmem0_ARVALID, "(port)m_axi_gmem0_ARVALID");
    sc_trace(mVcdFile, m_axi_gmem0_ARREADY, "(port)m_axi_gmem0_ARREADY");
    sc_trace(mVcdFile, m_axi_gmem0_ARADDR, "(port)m_axi_gmem0_ARADDR");
    sc_trace(mVcdFile, m_axi_gmem0_ARID, "(port)m_axi_gmem0_ARID");
    sc_trace(mVcdFile, m_axi_gmem0_ARLEN, "(port)m_axi_gmem0_ARLEN");
    sc_trace(mVcdFile, m_axi_gmem0_ARSIZE, "(port)m_axi_gmem0_ARSIZE");
    sc_trace(mVcdFile, m_axi_gmem0_ARBURST, "(port)m_axi_gmem0_ARBURST");
    sc_trace(mVcdFile, m_axi_gmem0_ARLOCK, "(port)m_axi_gmem0_ARLOCK");
    sc_trace(mVcdFile, m_axi_gmem0_ARCACHE, "(port)m_axi_gmem0_ARCACHE");
    sc_trace(mVcdFile, m_axi_gmem0_ARPROT, "(port)m_axi_gmem0_ARPROT");
    sc_trace(mVcdFile, m_axi_gmem0_ARQOS, "(port)m_axi_gmem0_ARQOS");
    sc_trace(mVcdFile, m_axi_gmem0_ARREGION, "(port)m_axi_gmem0_ARREGION");
    sc_trace(mVcdFile, m_axi_gmem0_ARUSER, "(port)m_axi_gmem0_ARUSER");
    sc_trace(mVcdFile, m_axi_gmem0_RVALID, "(port)m_axi_gmem0_RVALID");
    sc_trace(mVcdFile, m_axi_gmem0_RREADY, "(port)m_axi_gmem0_RREADY");
    sc_trace(mVcdFile, m_axi_gmem0_RDATA, "(port)m_axi_gmem0_RDATA");
    sc_trace(mVcdFile, m_axi_gmem0_RLAST, "(port)m_axi_gmem0_RLAST");
    sc_trace(mVcdFile, m_axi_gmem0_RID, "(port)m_axi_gmem0_RID");
    sc_trace(mVcdFile, m_axi_gmem0_RUSER, "(port)m_axi_gmem0_RUSER");
    sc_trace(mVcdFile, m_axi_gmem0_RRESP, "(port)m_axi_gmem0_RRESP");
    sc_trace(mVcdFile, m_axi_gmem0_BVALID, "(port)m_axi_gmem0_BVALID");
    sc_trace(mVcdFile, m_axi_gmem0_BREADY, "(port)m_axi_gmem0_BREADY");
    sc_trace(mVcdFile, m_axi_gmem0_BRESP, "(port)m_axi_gmem0_BRESP");
    sc_trace(mVcdFile, m_axi_gmem0_BID, "(port)m_axi_gmem0_BID");
    sc_trace(mVcdFile, m_axi_gmem0_BUSER, "(port)m_axi_gmem0_BUSER");
    sc_trace(mVcdFile, m_axi_gmem1_AWVALID, "(port)m_axi_gmem1_AWVALID");
    sc_trace(mVcdFile, m_axi_gmem1_AWREADY, "(port)m_axi_gmem1_AWREADY");
    sc_trace(mVcdFile, m_axi_gmem1_AWADDR, "(port)m_axi_gmem1_AWADDR");
    sc_trace(mVcdFile, m_axi_gmem1_AWID, "(port)m_axi_gmem1_AWID");
    sc_trace(mVcdFile, m_axi_gmem1_AWLEN, "(port)m_axi_gmem1_AWLEN");
    sc_trace(mVcdFile, m_axi_gmem1_AWSIZE, "(port)m_axi_gmem1_AWSIZE");
    sc_trace(mVcdFile, m_axi_gmem1_AWBURST, "(port)m_axi_gmem1_AWBURST");
    sc_trace(mVcdFile, m_axi_gmem1_AWLOCK, "(port)m_axi_gmem1_AWLOCK");
    sc_trace(mVcdFile, m_axi_gmem1_AWCACHE, "(port)m_axi_gmem1_AWCACHE");
    sc_trace(mVcdFile, m_axi_gmem1_AWPROT, "(port)m_axi_gmem1_AWPROT");
    sc_trace(mVcdFile, m_axi_gmem1_AWQOS, "(port)m_axi_gmem1_AWQOS");
    sc_trace(mVcdFile, m_axi_gmem1_AWREGION, "(port)m_axi_gmem1_AWREGION");
    sc_trace(mVcdFile, m_axi_gmem1_AWUSER, "(port)m_axi_gmem1_AWUSER");
    sc_trace(mVcdFile, m_axi_gmem1_WVALID, "(port)m_axi_gmem1_WVALID");
    sc_trace(mVcdFile, m_axi_gmem1_WREADY, "(port)m_axi_gmem1_WREADY");
    sc_trace(mVcdFile, m_axi_gmem1_WDATA, "(port)m_axi_gmem1_WDATA");
    sc_trace(mVcdFile, m_axi_gmem1_WSTRB, "(port)m_axi_gmem1_WSTRB");
    sc_trace(mVcdFile, m_axi_gmem1_WLAST, "(port)m_axi_gmem1_WLAST");
    sc_trace(mVcdFile, m_axi_gmem1_WID, "(port)m_axi_gmem1_WID");
    sc_trace(mVcdFile, m_axi_gmem1_WUSER, "(port)m_axi_gmem1_WUSER");
    sc_trace(mVcdFile, m_axi_gmem1_ARVALID, "(port)m_axi_gmem1_ARVALID");
    sc_trace(mVcdFile, m_axi_gmem1_ARREADY, "(port)m_axi_gmem1_ARREADY");
    sc_trace(mVcdFile, m_axi_gmem1_ARADDR, "(port)m_axi_gmem1_ARADDR");
    sc_trace(mVcdFile, m_axi_gmem1_ARID, "(port)m_axi_gmem1_ARID");
    sc_trace(mVcdFile, m_axi_gmem1_ARLEN, "(port)m_axi_gmem1_ARLEN");
    sc_trace(mVcdFile, m_axi_gmem1_ARSIZE, "(port)m_axi_gmem1_ARSIZE");
    sc_trace(mVcdFile, m_axi_gmem1_ARBURST, "(port)m_axi_gmem1_ARBURST");
    sc_trace(mVcdFile, m_axi_gmem1_ARLOCK, "(port)m_axi_gmem1_ARLOCK");
    sc_trace(mVcdFile, m_axi_gmem1_ARCACHE, "(port)m_axi_gmem1_ARCACHE");
    sc_trace(mVcdFile, m_axi_gmem1_ARPROT, "(port)m_axi_gmem1_ARPROT");
    sc_trace(mVcdFile, m_axi_gmem1_ARQOS, "(port)m_axi_gmem1_ARQOS");
    sc_trace(mVcdFile, m_axi_gmem1_ARREGION, "(port)m_axi_gmem1_ARREGION");
    sc_trace(mVcdFile, m_axi_gmem1_ARUSER, "(port)m_axi_gmem1_ARUSER");
    sc_trace(mVcdFile, m_axi_gmem1_RVALID, "(port)m_axi_gmem1_RVALID");
    sc_trace(mVcdFile, m_axi_gmem1_RREADY, "(port)m_axi_gmem1_RREADY");
    sc_trace(mVcdFile, m_axi_gmem1_RDATA, "(port)m_axi_gmem1_RDATA");
    sc_trace(mVcdFile, m_axi_gmem1_RLAST, "(port)m_axi_gmem1_RLAST");
    sc_trace(mVcdFile, m_axi_gmem1_RID, "(port)m_axi_gmem1_RID");
    sc_trace(mVcdFile, m_axi_gmem1_RUSER, "(port)m_axi_gmem1_RUSER");
    sc_trace(mVcdFile, m_axi_gmem1_RRESP, "(port)m_axi_gmem1_RRESP");
    sc_trace(mVcdFile, m_axi_gmem1_BVALID, "(port)m_axi_gmem1_BVALID");
    sc_trace(mVcdFile, m_axi_gmem1_BREADY, "(port)m_axi_gmem1_BREADY");
    sc_trace(mVcdFile, m_axi_gmem1_BRESP, "(port)m_axi_gmem1_BRESP");
    sc_trace(mVcdFile, m_axi_gmem1_BID, "(port)m_axi_gmem1_BID");
    sc_trace(mVcdFile, m_axi_gmem1_BUSER, "(port)m_axi_gmem1_BUSER");
    sc_trace(mVcdFile, m_axi_gmem2_AWVALID, "(port)m_axi_gmem2_AWVALID");
    sc_trace(mVcdFile, m_axi_gmem2_AWREADY, "(port)m_axi_gmem2_AWREADY");
    sc_trace(mVcdFile, m_axi_gmem2_AWADDR, "(port)m_axi_gmem2_AWADDR");
    sc_trace(mVcdFile, m_axi_gmem2_AWID, "(port)m_axi_gmem2_AWID");
    sc_trace(mVcdFile, m_axi_gmem2_AWLEN, "(port)m_axi_gmem2_AWLEN");
    sc_trace(mVcdFile, m_axi_gmem2_AWSIZE, "(port)m_axi_gmem2_AWSIZE");
    sc_trace(mVcdFile, m_axi_gmem2_AWBURST, "(port)m_axi_gmem2_AWBURST");
    sc_trace(mVcdFile, m_axi_gmem2_AWLOCK, "(port)m_axi_gmem2_AWLOCK");
    sc_trace(mVcdFile, m_axi_gmem2_AWCACHE, "(port)m_axi_gmem2_AWCACHE");
    sc_trace(mVcdFile, m_axi_gmem2_AWPROT, "(port)m_axi_gmem2_AWPROT");
    sc_trace(mVcdFile, m_axi_gmem2_AWQOS, "(port)m_axi_gmem2_AWQOS");
    sc_trace(mVcdFile, m_axi_gmem2_AWREGION, "(port)m_axi_gmem2_AWREGION");
    sc_trace(mVcdFile, m_axi_gmem2_AWUSER, "(port)m_axi_gmem2_AWUSER");
    sc_trace(mVcdFile, m_axi_gmem2_WVALID, "(port)m_axi_gmem2_WVALID");
    sc_trace(mVcdFile, m_axi_gmem2_WREADY, "(port)m_axi_gmem2_WREADY");
    sc_trace(mVcdFile, m_axi_gmem2_WDATA, "(port)m_axi_gmem2_WDATA");
    sc_trace(mVcdFile, m_axi_gmem2_WSTRB, "(port)m_axi_gmem2_WSTRB");
    sc_trace(mVcdFile, m_axi_gmem2_WLAST, "(port)m_axi_gmem2_WLAST");
    sc_trace(mVcdFile, m_axi_gmem2_WID, "(port)m_axi_gmem2_WID");
    sc_trace(mVcdFile, m_axi_gmem2_WUSER, "(port)m_axi_gmem2_WUSER");
    sc_trace(mVcdFile, m_axi_gmem2_ARVALID, "(port)m_axi_gmem2_ARVALID");
    sc_trace(mVcdFile, m_axi_gmem2_ARREADY, "(port)m_axi_gmem2_ARREADY");
    sc_trace(mVcdFile, m_axi_gmem2_ARADDR, "(port)m_axi_gmem2_ARADDR");
    sc_trace(mVcdFile, m_axi_gmem2_ARID, "(port)m_axi_gmem2_ARID");
    sc_trace(mVcdFile, m_axi_gmem2_ARLEN, "(port)m_axi_gmem2_ARLEN");
    sc_trace(mVcdFile, m_axi_gmem2_ARSIZE, "(port)m_axi_gmem2_ARSIZE");
    sc_trace(mVcdFile, m_axi_gmem2_ARBURST, "(port)m_axi_gmem2_ARBURST");
    sc_trace(mVcdFile, m_axi_gmem2_ARLOCK, "(port)m_axi_gmem2_ARLOCK");
    sc_trace(mVcdFile, m_axi_gmem2_ARCACHE, "(port)m_axi_gmem2_ARCACHE");
    sc_trace(mVcdFile, m_axi_gmem2_ARPROT, "(port)m_axi_gmem2_ARPROT");
    sc_trace(mVcdFile, m_axi_gmem2_ARQOS, "(port)m_axi_gmem2_ARQOS");
    sc_trace(mVcdFile, m_axi_gmem2_ARREGION, "(port)m_axi_gmem2_ARREGION");
    sc_trace(mVcdFile, m_axi_gmem2_ARUSER, "(port)m_axi_gmem2_ARUSER");
    sc_trace(mVcdFile, m_axi_gmem2_RVALID, "(port)m_axi_gmem2_RVALID");
    sc_trace(mVcdFile, m_axi_gmem2_RREADY, "(port)m_axi_gmem2_RREADY");
    sc_trace(mVcdFile, m_axi_gmem2_RDATA, "(port)m_axi_gmem2_RDATA");
    sc_trace(mVcdFile, m_axi_gmem2_RLAST, "(port)m_axi_gmem2_RLAST");
    sc_trace(mVcdFile, m_axi_gmem2_RID, "(port)m_axi_gmem2_RID");
    sc_trace(mVcdFile, m_axi_gmem2_RUSER, "(port)m_axi_gmem2_RUSER");
    sc_trace(mVcdFile, m_axi_gmem2_RRESP, "(port)m_axi_gmem2_RRESP");
    sc_trace(mVcdFile, m_axi_gmem2_BVALID, "(port)m_axi_gmem2_BVALID");
    sc_trace(mVcdFile, m_axi_gmem2_BREADY, "(port)m_axi_gmem2_BREADY");
    sc_trace(mVcdFile, m_axi_gmem2_BRESP, "(port)m_axi_gmem2_BRESP");
    sc_trace(mVcdFile, m_axi_gmem2_BID, "(port)m_axi_gmem2_BID");
    sc_trace(mVcdFile, m_axi_gmem2_BUSER, "(port)m_axi_gmem2_BUSER");
    sc_trace(mVcdFile, m_axi_gmem3_AWVALID, "(port)m_axi_gmem3_AWVALID");
    sc_trace(mVcdFile, m_axi_gmem3_AWREADY, "(port)m_axi_gmem3_AWREADY");
    sc_trace(mVcdFile, m_axi_gmem3_AWADDR, "(port)m_axi_gmem3_AWADDR");
    sc_trace(mVcdFile, m_axi_gmem3_AWID, "(port)m_axi_gmem3_AWID");
    sc_trace(mVcdFile, m_axi_gmem3_AWLEN, "(port)m_axi_gmem3_AWLEN");
    sc_trace(mVcdFile, m_axi_gmem3_AWSIZE, "(port)m_axi_gmem3_AWSIZE");
    sc_trace(mVcdFile, m_axi_gmem3_AWBURST, "(port)m_axi_gmem3_AWBURST");
    sc_trace(mVcdFile, m_axi_gmem3_AWLOCK, "(port)m_axi_gmem3_AWLOCK");
    sc_trace(mVcdFile, m_axi_gmem3_AWCACHE, "(port)m_axi_gmem3_AWCACHE");
    sc_trace(mVcdFile, m_axi_gmem3_AWPROT, "(port)m_axi_gmem3_AWPROT");
    sc_trace(mVcdFile, m_axi_gmem3_AWQOS, "(port)m_axi_gmem3_AWQOS");
    sc_trace(mVcdFile, m_axi_gmem3_AWREGION, "(port)m_axi_gmem3_AWREGION");
    sc_trace(mVcdFile, m_axi_gmem3_AWUSER, "(port)m_axi_gmem3_AWUSER");
    sc_trace(mVcdFile, m_axi_gmem3_WVALID, "(port)m_axi_gmem3_WVALID");
    sc_trace(mVcdFile, m_axi_gmem3_WREADY, "(port)m_axi_gmem3_WREADY");
    sc_trace(mVcdFile, m_axi_gmem3_WDATA, "(port)m_axi_gmem3_WDATA");
    sc_trace(mVcdFile, m_axi_gmem3_WSTRB, "(port)m_axi_gmem3_WSTRB");
    sc_trace(mVcdFile, m_axi_gmem3_WLAST, "(port)m_axi_gmem3_WLAST");
    sc_trace(mVcdFile, m_axi_gmem3_WID, "(port)m_axi_gmem3_WID");
    sc_trace(mVcdFile, m_axi_gmem3_WUSER, "(port)m_axi_gmem3_WUSER");
    sc_trace(mVcdFile, m_axi_gmem3_ARVALID, "(port)m_axi_gmem3_ARVALID");
    sc_trace(mVcdFile, m_axi_gmem3_ARREADY, "(port)m_axi_gmem3_ARREADY");
    sc_trace(mVcdFile, m_axi_gmem3_ARADDR, "(port)m_axi_gmem3_ARADDR");
    sc_trace(mVcdFile, m_axi_gmem3_ARID, "(port)m_axi_gmem3_ARID");
    sc_trace(mVcdFile, m_axi_gmem3_ARLEN, "(port)m_axi_gmem3_ARLEN");
    sc_trace(mVcdFile, m_axi_gmem3_ARSIZE, "(port)m_axi_gmem3_ARSIZE");
    sc_trace(mVcdFile, m_axi_gmem3_ARBURST, "(port)m_axi_gmem3_ARBURST");
    sc_trace(mVcdFile, m_axi_gmem3_ARLOCK, "(port)m_axi_gmem3_ARLOCK");
    sc_trace(mVcdFile, m_axi_gmem3_ARCACHE, "(port)m_axi_gmem3_ARCACHE");
    sc_trace(mVcdFile, m_axi_gmem3_ARPROT, "(port)m_axi_gmem3_ARPROT");
    sc_trace(mVcdFile, m_axi_gmem3_ARQOS, "(port)m_axi_gmem3_ARQOS");
    sc_trace(mVcdFile, m_axi_gmem3_ARREGION, "(port)m_axi_gmem3_ARREGION");
    sc_trace(mVcdFile, m_axi_gmem3_ARUSER, "(port)m_axi_gmem3_ARUSER");
    sc_trace(mVcdFile, m_axi_gmem3_RVALID, "(port)m_axi_gmem3_RVALID");
    sc_trace(mVcdFile, m_axi_gmem3_RREADY, "(port)m_axi_gmem3_RREADY");
    sc_trace(mVcdFile, m_axi_gmem3_RDATA, "(port)m_axi_gmem3_RDATA");
    sc_trace(mVcdFile, m_axi_gmem3_RLAST, "(port)m_axi_gmem3_RLAST");
    sc_trace(mVcdFile, m_axi_gmem3_RID, "(port)m_axi_gmem3_RID");
    sc_trace(mVcdFile, m_axi_gmem3_RUSER, "(port)m_axi_gmem3_RUSER");
    sc_trace(mVcdFile, m_axi_gmem3_RRESP, "(port)m_axi_gmem3_RRESP");
    sc_trace(mVcdFile, m_axi_gmem3_BVALID, "(port)m_axi_gmem3_BVALID");
    sc_trace(mVcdFile, m_axi_gmem3_BREADY, "(port)m_axi_gmem3_BREADY");
    sc_trace(mVcdFile, m_axi_gmem3_BRESP, "(port)m_axi_gmem3_BRESP");
    sc_trace(mVcdFile, m_axi_gmem3_BID, "(port)m_axi_gmem3_BID");
    sc_trace(mVcdFile, m_axi_gmem3_BUSER, "(port)m_axi_gmem3_BUSER");
    sc_trace(mVcdFile, m_axi_gmem4_AWVALID, "(port)m_axi_gmem4_AWVALID");
    sc_trace(mVcdFile, m_axi_gmem4_AWREADY, "(port)m_axi_gmem4_AWREADY");
    sc_trace(mVcdFile, m_axi_gmem4_AWADDR, "(port)m_axi_gmem4_AWADDR");
    sc_trace(mVcdFile, m_axi_gmem4_AWID, "(port)m_axi_gmem4_AWID");
    sc_trace(mVcdFile, m_axi_gmem4_AWLEN, "(port)m_axi_gmem4_AWLEN");
    sc_trace(mVcdFile, m_axi_gmem4_AWSIZE, "(port)m_axi_gmem4_AWSIZE");
    sc_trace(mVcdFile, m_axi_gmem4_AWBURST, "(port)m_axi_gmem4_AWBURST");
    sc_trace(mVcdFile, m_axi_gmem4_AWLOCK, "(port)m_axi_gmem4_AWLOCK");
    sc_trace(mVcdFile, m_axi_gmem4_AWCACHE, "(port)m_axi_gmem4_AWCACHE");
    sc_trace(mVcdFile, m_axi_gmem4_AWPROT, "(port)m_axi_gmem4_AWPROT");
    sc_trace(mVcdFile, m_axi_gmem4_AWQOS, "(port)m_axi_gmem4_AWQOS");
    sc_trace(mVcdFile, m_axi_gmem4_AWREGION, "(port)m_axi_gmem4_AWREGION");
    sc_trace(mVcdFile, m_axi_gmem4_AWUSER, "(port)m_axi_gmem4_AWUSER");
    sc_trace(mVcdFile, m_axi_gmem4_WVALID, "(port)m_axi_gmem4_WVALID");
    sc_trace(mVcdFile, m_axi_gmem4_WREADY, "(port)m_axi_gmem4_WREADY");
    sc_trace(mVcdFile, m_axi_gmem4_WDATA, "(port)m_axi_gmem4_WDATA");
    sc_trace(mVcdFile, m_axi_gmem4_WSTRB, "(port)m_axi_gmem4_WSTRB");
    sc_trace(mVcdFile, m_axi_gmem4_WLAST, "(port)m_axi_gmem4_WLAST");
    sc_trace(mVcdFile, m_axi_gmem4_WID, "(port)m_axi_gmem4_WID");
    sc_trace(mVcdFile, m_axi_gmem4_WUSER, "(port)m_axi_gmem4_WUSER");
    sc_trace(mVcdFile, m_axi_gmem4_ARVALID, "(port)m_axi_gmem4_ARVALID");
    sc_trace(mVcdFile, m_axi_gmem4_ARREADY, "(port)m_axi_gmem4_ARREADY");
    sc_trace(mVcdFile, m_axi_gmem4_ARADDR, "(port)m_axi_gmem4_ARADDR");
    sc_trace(mVcdFile, m_axi_gmem4_ARID, "(port)m_axi_gmem4_ARID");
    sc_trace(mVcdFile, m_axi_gmem4_ARLEN, "(port)m_axi_gmem4_ARLEN");
    sc_trace(mVcdFile, m_axi_gmem4_ARSIZE, "(port)m_axi_gmem4_ARSIZE");
    sc_trace(mVcdFile, m_axi_gmem4_ARBURST, "(port)m_axi_gmem4_ARBURST");
    sc_trace(mVcdFile, m_axi_gmem4_ARLOCK, "(port)m_axi_gmem4_ARLOCK");
    sc_trace(mVcdFile, m_axi_gmem4_ARCACHE, "(port)m_axi_gmem4_ARCACHE");
    sc_trace(mVcdFile, m_axi_gmem4_ARPROT, "(port)m_axi_gmem4_ARPROT");
    sc_trace(mVcdFile, m_axi_gmem4_ARQOS, "(port)m_axi_gmem4_ARQOS");
    sc_trace(mVcdFile, m_axi_gmem4_ARREGION, "(port)m_axi_gmem4_ARREGION");
    sc_trace(mVcdFile, m_axi_gmem4_ARUSER, "(port)m_axi_gmem4_ARUSER");
    sc_trace(mVcdFile, m_axi_gmem4_RVALID, "(port)m_axi_gmem4_RVALID");
    sc_trace(mVcdFile, m_axi_gmem4_RREADY, "(port)m_axi_gmem4_RREADY");
    sc_trace(mVcdFile, m_axi_gmem4_RDATA, "(port)m_axi_gmem4_RDATA");
    sc_trace(mVcdFile, m_axi_gmem4_RLAST, "(port)m_axi_gmem4_RLAST");
    sc_trace(mVcdFile, m_axi_gmem4_RID, "(port)m_axi_gmem4_RID");
    sc_trace(mVcdFile, m_axi_gmem4_RUSER, "(port)m_axi_gmem4_RUSER");
    sc_trace(mVcdFile, m_axi_gmem4_RRESP, "(port)m_axi_gmem4_RRESP");
    sc_trace(mVcdFile, m_axi_gmem4_BVALID, "(port)m_axi_gmem4_BVALID");
    sc_trace(mVcdFile, m_axi_gmem4_BREADY, "(port)m_axi_gmem4_BREADY");
    sc_trace(mVcdFile, m_axi_gmem4_BRESP, "(port)m_axi_gmem4_BRESP");
    sc_trace(mVcdFile, m_axi_gmem4_BID, "(port)m_axi_gmem4_BID");
    sc_trace(mVcdFile, m_axi_gmem4_BUSER, "(port)m_axi_gmem4_BUSER");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, A_AXI, "A_AXI");
    sc_trace(mVcdFile, B_AXI, "B_AXI");
    sc_trace(mVcdFile, C_AXI, "C_AXI");
    sc_trace(mVcdFile, D_input_AXI, "D_input_AXI");
    sc_trace(mVcdFile, D_output_AXI, "D_output_AXI");
    sc_trace(mVcdFile, gmem0_AWREADY, "gmem0_AWREADY");
    sc_trace(mVcdFile, gmem0_WREADY, "gmem0_WREADY");
    sc_trace(mVcdFile, gmem0_ARREADY, "gmem0_ARREADY");
    sc_trace(mVcdFile, gmem0_RVALID, "gmem0_RVALID");
    sc_trace(mVcdFile, gmem0_RDATA, "gmem0_RDATA");
    sc_trace(mVcdFile, gmem0_RLAST, "gmem0_RLAST");
    sc_trace(mVcdFile, gmem0_RID, "gmem0_RID");
    sc_trace(mVcdFile, gmem0_RUSER, "gmem0_RUSER");
    sc_trace(mVcdFile, gmem0_RRESP, "gmem0_RRESP");
    sc_trace(mVcdFile, gmem0_BVALID, "gmem0_BVALID");
    sc_trace(mVcdFile, gmem0_BRESP, "gmem0_BRESP");
    sc_trace(mVcdFile, gmem0_BID, "gmem0_BID");
    sc_trace(mVcdFile, gmem0_BUSER, "gmem0_BUSER");
    sc_trace(mVcdFile, gmem1_AWREADY, "gmem1_AWREADY");
    sc_trace(mVcdFile, gmem1_WREADY, "gmem1_WREADY");
    sc_trace(mVcdFile, gmem1_ARREADY, "gmem1_ARREADY");
    sc_trace(mVcdFile, gmem1_RVALID, "gmem1_RVALID");
    sc_trace(mVcdFile, gmem1_RDATA, "gmem1_RDATA");
    sc_trace(mVcdFile, gmem1_RLAST, "gmem1_RLAST");
    sc_trace(mVcdFile, gmem1_RID, "gmem1_RID");
    sc_trace(mVcdFile, gmem1_RUSER, "gmem1_RUSER");
    sc_trace(mVcdFile, gmem1_RRESP, "gmem1_RRESP");
    sc_trace(mVcdFile, gmem1_BVALID, "gmem1_BVALID");
    sc_trace(mVcdFile, gmem1_BRESP, "gmem1_BRESP");
    sc_trace(mVcdFile, gmem1_BID, "gmem1_BID");
    sc_trace(mVcdFile, gmem1_BUSER, "gmem1_BUSER");
    sc_trace(mVcdFile, gmem2_AWREADY, "gmem2_AWREADY");
    sc_trace(mVcdFile, gmem2_WREADY, "gmem2_WREADY");
    sc_trace(mVcdFile, gmem2_ARREADY, "gmem2_ARREADY");
    sc_trace(mVcdFile, gmem2_RVALID, "gmem2_RVALID");
    sc_trace(mVcdFile, gmem2_RDATA, "gmem2_RDATA");
    sc_trace(mVcdFile, gmem2_RLAST, "gmem2_RLAST");
    sc_trace(mVcdFile, gmem2_RID, "gmem2_RID");
    sc_trace(mVcdFile, gmem2_RUSER, "gmem2_RUSER");
    sc_trace(mVcdFile, gmem2_RRESP, "gmem2_RRESP");
    sc_trace(mVcdFile, gmem2_BVALID, "gmem2_BVALID");
    sc_trace(mVcdFile, gmem2_BRESP, "gmem2_BRESP");
    sc_trace(mVcdFile, gmem2_BID, "gmem2_BID");
    sc_trace(mVcdFile, gmem2_BUSER, "gmem2_BUSER");
    sc_trace(mVcdFile, gmem3_AWREADY, "gmem3_AWREADY");
    sc_trace(mVcdFile, gmem3_WREADY, "gmem3_WREADY");
    sc_trace(mVcdFile, gmem3_ARREADY, "gmem3_ARREADY");
    sc_trace(mVcdFile, gmem3_RVALID, "gmem3_RVALID");
    sc_trace(mVcdFile, gmem3_RDATA, "gmem3_RDATA");
    sc_trace(mVcdFile, gmem3_RLAST, "gmem3_RLAST");
    sc_trace(mVcdFile, gmem3_RID, "gmem3_RID");
    sc_trace(mVcdFile, gmem3_RUSER, "gmem3_RUSER");
    sc_trace(mVcdFile, gmem3_RRESP, "gmem3_RRESP");
    sc_trace(mVcdFile, gmem3_BVALID, "gmem3_BVALID");
    sc_trace(mVcdFile, gmem3_BRESP, "gmem3_BRESP");
    sc_trace(mVcdFile, gmem3_BID, "gmem3_BID");
    sc_trace(mVcdFile, gmem3_BUSER, "gmem3_BUSER");
    sc_trace(mVcdFile, gmem4_AWREADY, "gmem4_AWREADY");
    sc_trace(mVcdFile, gmem4_WREADY, "gmem4_WREADY");
    sc_trace(mVcdFile, gmem4_ARREADY, "gmem4_ARREADY");
    sc_trace(mVcdFile, gmem4_RVALID, "gmem4_RVALID");
    sc_trace(mVcdFile, gmem4_RDATA, "gmem4_RDATA");
    sc_trace(mVcdFile, gmem4_RLAST, "gmem4_RLAST");
    sc_trace(mVcdFile, gmem4_RID, "gmem4_RID");
    sc_trace(mVcdFile, gmem4_RUSER, "gmem4_RUSER");
    sc_trace(mVcdFile, gmem4_RRESP, "gmem4_RRESP");
    sc_trace(mVcdFile, gmem4_BVALID, "gmem4_BVALID");
    sc_trace(mVcdFile, gmem4_BRESP, "gmem4_BRESP");
    sc_trace(mVcdFile, gmem4_BID, "gmem4_BID");
    sc_trace(mVcdFile, gmem4_BUSER, "gmem4_BUSER");
    sc_trace(mVcdFile, A_0_i_q0, "A_0_i_q0");
    sc_trace(mVcdFile, A_0_t_q0, "A_0_t_q0");
    sc_trace(mVcdFile, A_1_i_q0, "A_1_i_q0");
    sc_trace(mVcdFile, A_1_t_q0, "A_1_t_q0");
    sc_trace(mVcdFile, B_0_i_q0, "B_0_i_q0");
    sc_trace(mVcdFile, B_0_t_q0, "B_0_t_q0");
    sc_trace(mVcdFile, B_1_i_q0, "B_1_i_q0");
    sc_trace(mVcdFile, B_1_t_q0, "B_1_t_q0");
    sc_trace(mVcdFile, C_0_i_q0, "C_0_i_q0");
    sc_trace(mVcdFile, C_0_t_q0, "C_0_t_q0");
    sc_trace(mVcdFile, C_1_i_q0, "C_1_i_q0");
    sc_trace(mVcdFile, C_1_t_q0, "C_1_t_q0");
    sc_trace(mVcdFile, C_2_i_q0, "C_2_i_q0");
    sc_trace(mVcdFile, C_2_t_q0, "C_2_t_q0");
    sc_trace(mVcdFile, C_3_i_q0, "C_3_i_q0");
    sc_trace(mVcdFile, C_3_t_q0, "C_3_t_q0");
    sc_trace(mVcdFile, C_4_i_q0, "C_4_i_q0");
    sc_trace(mVcdFile, C_4_t_q0, "C_4_t_q0");
    sc_trace(mVcdFile, C_5_i_q0, "C_5_i_q0");
    sc_trace(mVcdFile, C_5_t_q0, "C_5_t_q0");
    sc_trace(mVcdFile, C_6_i_q0, "C_6_i_q0");
    sc_trace(mVcdFile, C_6_t_q0, "C_6_t_q0");
    sc_trace(mVcdFile, C_7_i_q0, "C_7_i_q0");
    sc_trace(mVcdFile, C_7_t_q0, "C_7_t_q0");
    sc_trace(mVcdFile, D_i_q0, "D_i_q0");
    sc_trace(mVcdFile, D_t_q0, "D_t_q0");
    sc_trace(mVcdFile, D_output_i_q0, "D_output_i_q0");
    sc_trace(mVcdFile, D_output_t_q0, "D_output_t_q0");
    sc_trace(mVcdFile, readData32_U0_ap_start, "readData32_U0_ap_start");
    sc_trace(mVcdFile, readData32_U0_ap_done, "readData32_U0_ap_done");
    sc_trace(mVcdFile, readData32_U0_ap_continue, "readData32_U0_ap_continue");
    sc_trace(mVcdFile, readData32_U0_ap_idle, "readData32_U0_ap_idle");
    sc_trace(mVcdFile, readData32_U0_ap_ready, "readData32_U0_ap_ready");
    sc_trace(mVcdFile, readData32_U0_m_axi_A_AXI_AWVALID, "readData32_U0_m_axi_A_AXI_AWVALID");
    sc_trace(mVcdFile, readData32_U0_m_axi_A_AXI_AWADDR, "readData32_U0_m_axi_A_AXI_AWADDR");
    sc_trace(mVcdFile, readData32_U0_m_axi_A_AXI_AWID, "readData32_U0_m_axi_A_AXI_AWID");
    sc_trace(mVcdFile, readData32_U0_m_axi_A_AXI_AWLEN, "readData32_U0_m_axi_A_AXI_AWLEN");
    sc_trace(mVcdFile, readData32_U0_m_axi_A_AXI_AWSIZE, "readData32_U0_m_axi_A_AXI_AWSIZE");
    sc_trace(mVcdFile, readData32_U0_m_axi_A_AXI_AWBURST, "readData32_U0_m_axi_A_AXI_AWBURST");
    sc_trace(mVcdFile, readData32_U0_m_axi_A_AXI_AWLOCK, "readData32_U0_m_axi_A_AXI_AWLOCK");
    sc_trace(mVcdFile, readData32_U0_m_axi_A_AXI_AWCACHE, "readData32_U0_m_axi_A_AXI_AWCACHE");
    sc_trace(mVcdFile, readData32_U0_m_axi_A_AXI_AWPROT, "readData32_U0_m_axi_A_AXI_AWPROT");
    sc_trace(mVcdFile, readData32_U0_m_axi_A_AXI_AWQOS, "readData32_U0_m_axi_A_AXI_AWQOS");
    sc_trace(mVcdFile, readData32_U0_m_axi_A_AXI_AWREGION, "readData32_U0_m_axi_A_AXI_AWREGION");
    sc_trace(mVcdFile, readData32_U0_m_axi_A_AXI_AWUSER, "readData32_U0_m_axi_A_AXI_AWUSER");
    sc_trace(mVcdFile, readData32_U0_m_axi_A_AXI_WVALID, "readData32_U0_m_axi_A_AXI_WVALID");
    sc_trace(mVcdFile, readData32_U0_m_axi_A_AXI_WDATA, "readData32_U0_m_axi_A_AXI_WDATA");
    sc_trace(mVcdFile, readData32_U0_m_axi_A_AXI_WSTRB, "readData32_U0_m_axi_A_AXI_WSTRB");
    sc_trace(mVcdFile, readData32_U0_m_axi_A_AXI_WLAST, "readData32_U0_m_axi_A_AXI_WLAST");
    sc_trace(mVcdFile, readData32_U0_m_axi_A_AXI_WID, "readData32_U0_m_axi_A_AXI_WID");
    sc_trace(mVcdFile, readData32_U0_m_axi_A_AXI_WUSER, "readData32_U0_m_axi_A_AXI_WUSER");
    sc_trace(mVcdFile, readData32_U0_m_axi_A_AXI_ARVALID, "readData32_U0_m_axi_A_AXI_ARVALID");
    sc_trace(mVcdFile, readData32_U0_m_axi_A_AXI_ARADDR, "readData32_U0_m_axi_A_AXI_ARADDR");
    sc_trace(mVcdFile, readData32_U0_m_axi_A_AXI_ARID, "readData32_U0_m_axi_A_AXI_ARID");
    sc_trace(mVcdFile, readData32_U0_m_axi_A_AXI_ARLEN, "readData32_U0_m_axi_A_AXI_ARLEN");
    sc_trace(mVcdFile, readData32_U0_m_axi_A_AXI_ARSIZE, "readData32_U0_m_axi_A_AXI_ARSIZE");
    sc_trace(mVcdFile, readData32_U0_m_axi_A_AXI_ARBURST, "readData32_U0_m_axi_A_AXI_ARBURST");
    sc_trace(mVcdFile, readData32_U0_m_axi_A_AXI_ARLOCK, "readData32_U0_m_axi_A_AXI_ARLOCK");
    sc_trace(mVcdFile, readData32_U0_m_axi_A_AXI_ARCACHE, "readData32_U0_m_axi_A_AXI_ARCACHE");
    sc_trace(mVcdFile, readData32_U0_m_axi_A_AXI_ARPROT, "readData32_U0_m_axi_A_AXI_ARPROT");
    sc_trace(mVcdFile, readData32_U0_m_axi_A_AXI_ARQOS, "readData32_U0_m_axi_A_AXI_ARQOS");
    sc_trace(mVcdFile, readData32_U0_m_axi_A_AXI_ARREGION, "readData32_U0_m_axi_A_AXI_ARREGION");
    sc_trace(mVcdFile, readData32_U0_m_axi_A_AXI_ARUSER, "readData32_U0_m_axi_A_AXI_ARUSER");
    sc_trace(mVcdFile, readData32_U0_m_axi_A_AXI_RREADY, "readData32_U0_m_axi_A_AXI_RREADY");
    sc_trace(mVcdFile, readData32_U0_m_axi_A_AXI_BREADY, "readData32_U0_m_axi_A_AXI_BREADY");
    sc_trace(mVcdFile, readData32_U0_m_axi_B_AXI_AWVALID, "readData32_U0_m_axi_B_AXI_AWVALID");
    sc_trace(mVcdFile, readData32_U0_m_axi_B_AXI_AWADDR, "readData32_U0_m_axi_B_AXI_AWADDR");
    sc_trace(mVcdFile, readData32_U0_m_axi_B_AXI_AWID, "readData32_U0_m_axi_B_AXI_AWID");
    sc_trace(mVcdFile, readData32_U0_m_axi_B_AXI_AWLEN, "readData32_U0_m_axi_B_AXI_AWLEN");
    sc_trace(mVcdFile, readData32_U0_m_axi_B_AXI_AWSIZE, "readData32_U0_m_axi_B_AXI_AWSIZE");
    sc_trace(mVcdFile, readData32_U0_m_axi_B_AXI_AWBURST, "readData32_U0_m_axi_B_AXI_AWBURST");
    sc_trace(mVcdFile, readData32_U0_m_axi_B_AXI_AWLOCK, "readData32_U0_m_axi_B_AXI_AWLOCK");
    sc_trace(mVcdFile, readData32_U0_m_axi_B_AXI_AWCACHE, "readData32_U0_m_axi_B_AXI_AWCACHE");
    sc_trace(mVcdFile, readData32_U0_m_axi_B_AXI_AWPROT, "readData32_U0_m_axi_B_AXI_AWPROT");
    sc_trace(mVcdFile, readData32_U0_m_axi_B_AXI_AWQOS, "readData32_U0_m_axi_B_AXI_AWQOS");
    sc_trace(mVcdFile, readData32_U0_m_axi_B_AXI_AWREGION, "readData32_U0_m_axi_B_AXI_AWREGION");
    sc_trace(mVcdFile, readData32_U0_m_axi_B_AXI_AWUSER, "readData32_U0_m_axi_B_AXI_AWUSER");
    sc_trace(mVcdFile, readData32_U0_m_axi_B_AXI_WVALID, "readData32_U0_m_axi_B_AXI_WVALID");
    sc_trace(mVcdFile, readData32_U0_m_axi_B_AXI_WDATA, "readData32_U0_m_axi_B_AXI_WDATA");
    sc_trace(mVcdFile, readData32_U0_m_axi_B_AXI_WSTRB, "readData32_U0_m_axi_B_AXI_WSTRB");
    sc_trace(mVcdFile, readData32_U0_m_axi_B_AXI_WLAST, "readData32_U0_m_axi_B_AXI_WLAST");
    sc_trace(mVcdFile, readData32_U0_m_axi_B_AXI_WID, "readData32_U0_m_axi_B_AXI_WID");
    sc_trace(mVcdFile, readData32_U0_m_axi_B_AXI_WUSER, "readData32_U0_m_axi_B_AXI_WUSER");
    sc_trace(mVcdFile, readData32_U0_m_axi_B_AXI_ARVALID, "readData32_U0_m_axi_B_AXI_ARVALID");
    sc_trace(mVcdFile, readData32_U0_m_axi_B_AXI_ARADDR, "readData32_U0_m_axi_B_AXI_ARADDR");
    sc_trace(mVcdFile, readData32_U0_m_axi_B_AXI_ARID, "readData32_U0_m_axi_B_AXI_ARID");
    sc_trace(mVcdFile, readData32_U0_m_axi_B_AXI_ARLEN, "readData32_U0_m_axi_B_AXI_ARLEN");
    sc_trace(mVcdFile, readData32_U0_m_axi_B_AXI_ARSIZE, "readData32_U0_m_axi_B_AXI_ARSIZE");
    sc_trace(mVcdFile, readData32_U0_m_axi_B_AXI_ARBURST, "readData32_U0_m_axi_B_AXI_ARBURST");
    sc_trace(mVcdFile, readData32_U0_m_axi_B_AXI_ARLOCK, "readData32_U0_m_axi_B_AXI_ARLOCK");
    sc_trace(mVcdFile, readData32_U0_m_axi_B_AXI_ARCACHE, "readData32_U0_m_axi_B_AXI_ARCACHE");
    sc_trace(mVcdFile, readData32_U0_m_axi_B_AXI_ARPROT, "readData32_U0_m_axi_B_AXI_ARPROT");
    sc_trace(mVcdFile, readData32_U0_m_axi_B_AXI_ARQOS, "readData32_U0_m_axi_B_AXI_ARQOS");
    sc_trace(mVcdFile, readData32_U0_m_axi_B_AXI_ARREGION, "readData32_U0_m_axi_B_AXI_ARREGION");
    sc_trace(mVcdFile, readData32_U0_m_axi_B_AXI_ARUSER, "readData32_U0_m_axi_B_AXI_ARUSER");
    sc_trace(mVcdFile, readData32_U0_m_axi_B_AXI_RREADY, "readData32_U0_m_axi_B_AXI_RREADY");
    sc_trace(mVcdFile, readData32_U0_m_axi_B_AXI_BREADY, "readData32_U0_m_axi_B_AXI_BREADY");
    sc_trace(mVcdFile, readData32_U0_m_axi_C_AXI_AWVALID, "readData32_U0_m_axi_C_AXI_AWVALID");
    sc_trace(mVcdFile, readData32_U0_m_axi_C_AXI_AWADDR, "readData32_U0_m_axi_C_AXI_AWADDR");
    sc_trace(mVcdFile, readData32_U0_m_axi_C_AXI_AWID, "readData32_U0_m_axi_C_AXI_AWID");
    sc_trace(mVcdFile, readData32_U0_m_axi_C_AXI_AWLEN, "readData32_U0_m_axi_C_AXI_AWLEN");
    sc_trace(mVcdFile, readData32_U0_m_axi_C_AXI_AWSIZE, "readData32_U0_m_axi_C_AXI_AWSIZE");
    sc_trace(mVcdFile, readData32_U0_m_axi_C_AXI_AWBURST, "readData32_U0_m_axi_C_AXI_AWBURST");
    sc_trace(mVcdFile, readData32_U0_m_axi_C_AXI_AWLOCK, "readData32_U0_m_axi_C_AXI_AWLOCK");
    sc_trace(mVcdFile, readData32_U0_m_axi_C_AXI_AWCACHE, "readData32_U0_m_axi_C_AXI_AWCACHE");
    sc_trace(mVcdFile, readData32_U0_m_axi_C_AXI_AWPROT, "readData32_U0_m_axi_C_AXI_AWPROT");
    sc_trace(mVcdFile, readData32_U0_m_axi_C_AXI_AWQOS, "readData32_U0_m_axi_C_AXI_AWQOS");
    sc_trace(mVcdFile, readData32_U0_m_axi_C_AXI_AWREGION, "readData32_U0_m_axi_C_AXI_AWREGION");
    sc_trace(mVcdFile, readData32_U0_m_axi_C_AXI_AWUSER, "readData32_U0_m_axi_C_AXI_AWUSER");
    sc_trace(mVcdFile, readData32_U0_m_axi_C_AXI_WVALID, "readData32_U0_m_axi_C_AXI_WVALID");
    sc_trace(mVcdFile, readData32_U0_m_axi_C_AXI_WDATA, "readData32_U0_m_axi_C_AXI_WDATA");
    sc_trace(mVcdFile, readData32_U0_m_axi_C_AXI_WSTRB, "readData32_U0_m_axi_C_AXI_WSTRB");
    sc_trace(mVcdFile, readData32_U0_m_axi_C_AXI_WLAST, "readData32_U0_m_axi_C_AXI_WLAST");
    sc_trace(mVcdFile, readData32_U0_m_axi_C_AXI_WID, "readData32_U0_m_axi_C_AXI_WID");
    sc_trace(mVcdFile, readData32_U0_m_axi_C_AXI_WUSER, "readData32_U0_m_axi_C_AXI_WUSER");
    sc_trace(mVcdFile, readData32_U0_m_axi_C_AXI_ARVALID, "readData32_U0_m_axi_C_AXI_ARVALID");
    sc_trace(mVcdFile, readData32_U0_m_axi_C_AXI_ARADDR, "readData32_U0_m_axi_C_AXI_ARADDR");
    sc_trace(mVcdFile, readData32_U0_m_axi_C_AXI_ARID, "readData32_U0_m_axi_C_AXI_ARID");
    sc_trace(mVcdFile, readData32_U0_m_axi_C_AXI_ARLEN, "readData32_U0_m_axi_C_AXI_ARLEN");
    sc_trace(mVcdFile, readData32_U0_m_axi_C_AXI_ARSIZE, "readData32_U0_m_axi_C_AXI_ARSIZE");
    sc_trace(mVcdFile, readData32_U0_m_axi_C_AXI_ARBURST, "readData32_U0_m_axi_C_AXI_ARBURST");
    sc_trace(mVcdFile, readData32_U0_m_axi_C_AXI_ARLOCK, "readData32_U0_m_axi_C_AXI_ARLOCK");
    sc_trace(mVcdFile, readData32_U0_m_axi_C_AXI_ARCACHE, "readData32_U0_m_axi_C_AXI_ARCACHE");
    sc_trace(mVcdFile, readData32_U0_m_axi_C_AXI_ARPROT, "readData32_U0_m_axi_C_AXI_ARPROT");
    sc_trace(mVcdFile, readData32_U0_m_axi_C_AXI_ARQOS, "readData32_U0_m_axi_C_AXI_ARQOS");
    sc_trace(mVcdFile, readData32_U0_m_axi_C_AXI_ARREGION, "readData32_U0_m_axi_C_AXI_ARREGION");
    sc_trace(mVcdFile, readData32_U0_m_axi_C_AXI_ARUSER, "readData32_U0_m_axi_C_AXI_ARUSER");
    sc_trace(mVcdFile, readData32_U0_m_axi_C_AXI_RREADY, "readData32_U0_m_axi_C_AXI_RREADY");
    sc_trace(mVcdFile, readData32_U0_m_axi_C_AXI_BREADY, "readData32_U0_m_axi_C_AXI_BREADY");
    sc_trace(mVcdFile, readData32_U0_m_axi_D_input_AXI_AWVALID, "readData32_U0_m_axi_D_input_AXI_AWVALID");
    sc_trace(mVcdFile, readData32_U0_m_axi_D_input_AXI_AWADDR, "readData32_U0_m_axi_D_input_AXI_AWADDR");
    sc_trace(mVcdFile, readData32_U0_m_axi_D_input_AXI_AWID, "readData32_U0_m_axi_D_input_AXI_AWID");
    sc_trace(mVcdFile, readData32_U0_m_axi_D_input_AXI_AWLEN, "readData32_U0_m_axi_D_input_AXI_AWLEN");
    sc_trace(mVcdFile, readData32_U0_m_axi_D_input_AXI_AWSIZE, "readData32_U0_m_axi_D_input_AXI_AWSIZE");
    sc_trace(mVcdFile, readData32_U0_m_axi_D_input_AXI_AWBURST, "readData32_U0_m_axi_D_input_AXI_AWBURST");
    sc_trace(mVcdFile, readData32_U0_m_axi_D_input_AXI_AWLOCK, "readData32_U0_m_axi_D_input_AXI_AWLOCK");
    sc_trace(mVcdFile, readData32_U0_m_axi_D_input_AXI_AWCACHE, "readData32_U0_m_axi_D_input_AXI_AWCACHE");
    sc_trace(mVcdFile, readData32_U0_m_axi_D_input_AXI_AWPROT, "readData32_U0_m_axi_D_input_AXI_AWPROT");
    sc_trace(mVcdFile, readData32_U0_m_axi_D_input_AXI_AWQOS, "readData32_U0_m_axi_D_input_AXI_AWQOS");
    sc_trace(mVcdFile, readData32_U0_m_axi_D_input_AXI_AWREGION, "readData32_U0_m_axi_D_input_AXI_AWREGION");
    sc_trace(mVcdFile, readData32_U0_m_axi_D_input_AXI_AWUSER, "readData32_U0_m_axi_D_input_AXI_AWUSER");
    sc_trace(mVcdFile, readData32_U0_m_axi_D_input_AXI_WVALID, "readData32_U0_m_axi_D_input_AXI_WVALID");
    sc_trace(mVcdFile, readData32_U0_m_axi_D_input_AXI_WDATA, "readData32_U0_m_axi_D_input_AXI_WDATA");
    sc_trace(mVcdFile, readData32_U0_m_axi_D_input_AXI_WSTRB, "readData32_U0_m_axi_D_input_AXI_WSTRB");
    sc_trace(mVcdFile, readData32_U0_m_axi_D_input_AXI_WLAST, "readData32_U0_m_axi_D_input_AXI_WLAST");
    sc_trace(mVcdFile, readData32_U0_m_axi_D_input_AXI_WID, "readData32_U0_m_axi_D_input_AXI_WID");
    sc_trace(mVcdFile, readData32_U0_m_axi_D_input_AXI_WUSER, "readData32_U0_m_axi_D_input_AXI_WUSER");
    sc_trace(mVcdFile, readData32_U0_m_axi_D_input_AXI_ARVALID, "readData32_U0_m_axi_D_input_AXI_ARVALID");
    sc_trace(mVcdFile, readData32_U0_m_axi_D_input_AXI_ARADDR, "readData32_U0_m_axi_D_input_AXI_ARADDR");
    sc_trace(mVcdFile, readData32_U0_m_axi_D_input_AXI_ARID, "readData32_U0_m_axi_D_input_AXI_ARID");
    sc_trace(mVcdFile, readData32_U0_m_axi_D_input_AXI_ARLEN, "readData32_U0_m_axi_D_input_AXI_ARLEN");
    sc_trace(mVcdFile, readData32_U0_m_axi_D_input_AXI_ARSIZE, "readData32_U0_m_axi_D_input_AXI_ARSIZE");
    sc_trace(mVcdFile, readData32_U0_m_axi_D_input_AXI_ARBURST, "readData32_U0_m_axi_D_input_AXI_ARBURST");
    sc_trace(mVcdFile, readData32_U0_m_axi_D_input_AXI_ARLOCK, "readData32_U0_m_axi_D_input_AXI_ARLOCK");
    sc_trace(mVcdFile, readData32_U0_m_axi_D_input_AXI_ARCACHE, "readData32_U0_m_axi_D_input_AXI_ARCACHE");
    sc_trace(mVcdFile, readData32_U0_m_axi_D_input_AXI_ARPROT, "readData32_U0_m_axi_D_input_AXI_ARPROT");
    sc_trace(mVcdFile, readData32_U0_m_axi_D_input_AXI_ARQOS, "readData32_U0_m_axi_D_input_AXI_ARQOS");
    sc_trace(mVcdFile, readData32_U0_m_axi_D_input_AXI_ARREGION, "readData32_U0_m_axi_D_input_AXI_ARREGION");
    sc_trace(mVcdFile, readData32_U0_m_axi_D_input_AXI_ARUSER, "readData32_U0_m_axi_D_input_AXI_ARUSER");
    sc_trace(mVcdFile, readData32_U0_m_axi_D_input_AXI_RREADY, "readData32_U0_m_axi_D_input_AXI_RREADY");
    sc_trace(mVcdFile, readData32_U0_m_axi_D_input_AXI_BREADY, "readData32_U0_m_axi_D_input_AXI_BREADY");
    sc_trace(mVcdFile, readData32_U0_A_0_address0, "readData32_U0_A_0_address0");
    sc_trace(mVcdFile, readData32_U0_A_0_ce0, "readData32_U0_A_0_ce0");
    sc_trace(mVcdFile, readData32_U0_A_0_we0, "readData32_U0_A_0_we0");
    sc_trace(mVcdFile, readData32_U0_A_0_d0, "readData32_U0_A_0_d0");
    sc_trace(mVcdFile, readData32_U0_A_1_address0, "readData32_U0_A_1_address0");
    sc_trace(mVcdFile, readData32_U0_A_1_ce0, "readData32_U0_A_1_ce0");
    sc_trace(mVcdFile, readData32_U0_A_1_we0, "readData32_U0_A_1_we0");
    sc_trace(mVcdFile, readData32_U0_A_1_d0, "readData32_U0_A_1_d0");
    sc_trace(mVcdFile, readData32_U0_B_0_address0, "readData32_U0_B_0_address0");
    sc_trace(mVcdFile, readData32_U0_B_0_ce0, "readData32_U0_B_0_ce0");
    sc_trace(mVcdFile, readData32_U0_B_0_we0, "readData32_U0_B_0_we0");
    sc_trace(mVcdFile, readData32_U0_B_0_d0, "readData32_U0_B_0_d0");
    sc_trace(mVcdFile, readData32_U0_B_1_address0, "readData32_U0_B_1_address0");
    sc_trace(mVcdFile, readData32_U0_B_1_ce0, "readData32_U0_B_1_ce0");
    sc_trace(mVcdFile, readData32_U0_B_1_we0, "readData32_U0_B_1_we0");
    sc_trace(mVcdFile, readData32_U0_B_1_d0, "readData32_U0_B_1_d0");
    sc_trace(mVcdFile, readData32_U0_C_0_address0, "readData32_U0_C_0_address0");
    sc_trace(mVcdFile, readData32_U0_C_0_ce0, "readData32_U0_C_0_ce0");
    sc_trace(mVcdFile, readData32_U0_C_0_we0, "readData32_U0_C_0_we0");
    sc_trace(mVcdFile, readData32_U0_C_0_d0, "readData32_U0_C_0_d0");
    sc_trace(mVcdFile, readData32_U0_C_1_address0, "readData32_U0_C_1_address0");
    sc_trace(mVcdFile, readData32_U0_C_1_ce0, "readData32_U0_C_1_ce0");
    sc_trace(mVcdFile, readData32_U0_C_1_we0, "readData32_U0_C_1_we0");
    sc_trace(mVcdFile, readData32_U0_C_1_d0, "readData32_U0_C_1_d0");
    sc_trace(mVcdFile, readData32_U0_C_2_address0, "readData32_U0_C_2_address0");
    sc_trace(mVcdFile, readData32_U0_C_2_ce0, "readData32_U0_C_2_ce0");
    sc_trace(mVcdFile, readData32_U0_C_2_we0, "readData32_U0_C_2_we0");
    sc_trace(mVcdFile, readData32_U0_C_2_d0, "readData32_U0_C_2_d0");
    sc_trace(mVcdFile, readData32_U0_C_3_address0, "readData32_U0_C_3_address0");
    sc_trace(mVcdFile, readData32_U0_C_3_ce0, "readData32_U0_C_3_ce0");
    sc_trace(mVcdFile, readData32_U0_C_3_we0, "readData32_U0_C_3_we0");
    sc_trace(mVcdFile, readData32_U0_C_3_d0, "readData32_U0_C_3_d0");
    sc_trace(mVcdFile, readData32_U0_C_4_address0, "readData32_U0_C_4_address0");
    sc_trace(mVcdFile, readData32_U0_C_4_ce0, "readData32_U0_C_4_ce0");
    sc_trace(mVcdFile, readData32_U0_C_4_we0, "readData32_U0_C_4_we0");
    sc_trace(mVcdFile, readData32_U0_C_4_d0, "readData32_U0_C_4_d0");
    sc_trace(mVcdFile, readData32_U0_C_5_address0, "readData32_U0_C_5_address0");
    sc_trace(mVcdFile, readData32_U0_C_5_ce0, "readData32_U0_C_5_ce0");
    sc_trace(mVcdFile, readData32_U0_C_5_we0, "readData32_U0_C_5_we0");
    sc_trace(mVcdFile, readData32_U0_C_5_d0, "readData32_U0_C_5_d0");
    sc_trace(mVcdFile, readData32_U0_C_6_address0, "readData32_U0_C_6_address0");
    sc_trace(mVcdFile, readData32_U0_C_6_ce0, "readData32_U0_C_6_ce0");
    sc_trace(mVcdFile, readData32_U0_C_6_we0, "readData32_U0_C_6_we0");
    sc_trace(mVcdFile, readData32_U0_C_6_d0, "readData32_U0_C_6_d0");
    sc_trace(mVcdFile, readData32_U0_C_7_address0, "readData32_U0_C_7_address0");
    sc_trace(mVcdFile, readData32_U0_C_7_ce0, "readData32_U0_C_7_ce0");
    sc_trace(mVcdFile, readData32_U0_C_7_we0, "readData32_U0_C_7_we0");
    sc_trace(mVcdFile, readData32_U0_C_7_d0, "readData32_U0_C_7_d0");
    sc_trace(mVcdFile, readData32_U0_D_address0, "readData32_U0_D_address0");
    sc_trace(mVcdFile, readData32_U0_D_ce0, "readData32_U0_D_ce0");
    sc_trace(mVcdFile, readData32_U0_D_we0, "readData32_U0_D_we0");
    sc_trace(mVcdFile, readData32_U0_D_d0, "readData32_U0_D_d0");
    sc_trace(mVcdFile, readData32_U0_D_output_AXI_out_din, "readData32_U0_D_output_AXI_out_din");
    sc_trace(mVcdFile, readData32_U0_D_output_AXI_out_write, "readData32_U0_D_output_AXI_out_write");
    sc_trace(mVcdFile, ap_channel_done_D, "ap_channel_done_D");
    sc_trace(mVcdFile, readData32_U0_D_full_n, "readData32_U0_D_full_n");
    sc_trace(mVcdFile, ap_sync_reg_channel_write_D, "ap_sync_reg_channel_write_D");
    sc_trace(mVcdFile, ap_sync_channel_write_D, "ap_sync_channel_write_D");
    sc_trace(mVcdFile, ap_channel_done_C_7, "ap_channel_done_C_7");
    sc_trace(mVcdFile, readData32_U0_C_7_full_n, "readData32_U0_C_7_full_n");
    sc_trace(mVcdFile, ap_sync_reg_channel_write_C_7, "ap_sync_reg_channel_write_C_7");
    sc_trace(mVcdFile, ap_sync_channel_write_C_7, "ap_sync_channel_write_C_7");
    sc_trace(mVcdFile, ap_channel_done_C_6, "ap_channel_done_C_6");
    sc_trace(mVcdFile, readData32_U0_C_6_full_n, "readData32_U0_C_6_full_n");
    sc_trace(mVcdFile, ap_sync_reg_channel_write_C_6, "ap_sync_reg_channel_write_C_6");
    sc_trace(mVcdFile, ap_sync_channel_write_C_6, "ap_sync_channel_write_C_6");
    sc_trace(mVcdFile, ap_channel_done_C_5, "ap_channel_done_C_5");
    sc_trace(mVcdFile, readData32_U0_C_5_full_n, "readData32_U0_C_5_full_n");
    sc_trace(mVcdFile, ap_sync_reg_channel_write_C_5, "ap_sync_reg_channel_write_C_5");
    sc_trace(mVcdFile, ap_sync_channel_write_C_5, "ap_sync_channel_write_C_5");
    sc_trace(mVcdFile, ap_channel_done_C_4, "ap_channel_done_C_4");
    sc_trace(mVcdFile, readData32_U0_C_4_full_n, "readData32_U0_C_4_full_n");
    sc_trace(mVcdFile, ap_sync_reg_channel_write_C_4, "ap_sync_reg_channel_write_C_4");
    sc_trace(mVcdFile, ap_sync_channel_write_C_4, "ap_sync_channel_write_C_4");
    sc_trace(mVcdFile, ap_channel_done_C_3, "ap_channel_done_C_3");
    sc_trace(mVcdFile, readData32_U0_C_3_full_n, "readData32_U0_C_3_full_n");
    sc_trace(mVcdFile, ap_sync_reg_channel_write_C_3, "ap_sync_reg_channel_write_C_3");
    sc_trace(mVcdFile, ap_sync_channel_write_C_3, "ap_sync_channel_write_C_3");
    sc_trace(mVcdFile, ap_channel_done_C_2, "ap_channel_done_C_2");
    sc_trace(mVcdFile, readData32_U0_C_2_full_n, "readData32_U0_C_2_full_n");
    sc_trace(mVcdFile, ap_sync_reg_channel_write_C_2, "ap_sync_reg_channel_write_C_2");
    sc_trace(mVcdFile, ap_sync_channel_write_C_2, "ap_sync_channel_write_C_2");
    sc_trace(mVcdFile, ap_channel_done_C_1, "ap_channel_done_C_1");
    sc_trace(mVcdFile, readData32_U0_C_1_full_n, "readData32_U0_C_1_full_n");
    sc_trace(mVcdFile, ap_sync_reg_channel_write_C_1, "ap_sync_reg_channel_write_C_1");
    sc_trace(mVcdFile, ap_sync_channel_write_C_1, "ap_sync_channel_write_C_1");
    sc_trace(mVcdFile, ap_channel_done_C_0, "ap_channel_done_C_0");
    sc_trace(mVcdFile, readData32_U0_C_0_full_n, "readData32_U0_C_0_full_n");
    sc_trace(mVcdFile, ap_sync_reg_channel_write_C_0, "ap_sync_reg_channel_write_C_0");
    sc_trace(mVcdFile, ap_sync_channel_write_C_0, "ap_sync_channel_write_C_0");
    sc_trace(mVcdFile, ap_channel_done_B_1, "ap_channel_done_B_1");
    sc_trace(mVcdFile, readData32_U0_B_1_full_n, "readData32_U0_B_1_full_n");
    sc_trace(mVcdFile, ap_sync_reg_channel_write_B_1, "ap_sync_reg_channel_write_B_1");
    sc_trace(mVcdFile, ap_sync_channel_write_B_1, "ap_sync_channel_write_B_1");
    sc_trace(mVcdFile, ap_channel_done_B_0, "ap_channel_done_B_0");
    sc_trace(mVcdFile, readData32_U0_B_0_full_n, "readData32_U0_B_0_full_n");
    sc_trace(mVcdFile, ap_sync_reg_channel_write_B_0, "ap_sync_reg_channel_write_B_0");
    sc_trace(mVcdFile, ap_sync_channel_write_B_0, "ap_sync_channel_write_B_0");
    sc_trace(mVcdFile, ap_channel_done_A_1, "ap_channel_done_A_1");
    sc_trace(mVcdFile, readData32_U0_A_1_full_n, "readData32_U0_A_1_full_n");
    sc_trace(mVcdFile, ap_sync_reg_channel_write_A_1, "ap_sync_reg_channel_write_A_1");
    sc_trace(mVcdFile, ap_sync_channel_write_A_1, "ap_sync_channel_write_A_1");
    sc_trace(mVcdFile, ap_channel_done_A_0, "ap_channel_done_A_0");
    sc_trace(mVcdFile, readData32_U0_A_0_full_n, "readData32_U0_A_0_full_n");
    sc_trace(mVcdFile, ap_sync_reg_channel_write_A_0, "ap_sync_reg_channel_write_A_0");
    sc_trace(mVcdFile, ap_sync_channel_write_A_0, "ap_sync_channel_write_A_0");
    sc_trace(mVcdFile, kernel_2mm_U0_A_0_address0, "kernel_2mm_U0_A_0_address0");
    sc_trace(mVcdFile, kernel_2mm_U0_A_0_ce0, "kernel_2mm_U0_A_0_ce0");
    sc_trace(mVcdFile, kernel_2mm_U0_A_0_d0, "kernel_2mm_U0_A_0_d0");
    sc_trace(mVcdFile, kernel_2mm_U0_A_0_we0, "kernel_2mm_U0_A_0_we0");
    sc_trace(mVcdFile, kernel_2mm_U0_A_0_address1, "kernel_2mm_U0_A_0_address1");
    sc_trace(mVcdFile, kernel_2mm_U0_A_0_ce1, "kernel_2mm_U0_A_0_ce1");
    sc_trace(mVcdFile, kernel_2mm_U0_A_0_d1, "kernel_2mm_U0_A_0_d1");
    sc_trace(mVcdFile, kernel_2mm_U0_A_0_we1, "kernel_2mm_U0_A_0_we1");
    sc_trace(mVcdFile, kernel_2mm_U0_A_1_address0, "kernel_2mm_U0_A_1_address0");
    sc_trace(mVcdFile, kernel_2mm_U0_A_1_ce0, "kernel_2mm_U0_A_1_ce0");
    sc_trace(mVcdFile, kernel_2mm_U0_A_1_d0, "kernel_2mm_U0_A_1_d0");
    sc_trace(mVcdFile, kernel_2mm_U0_A_1_we0, "kernel_2mm_U0_A_1_we0");
    sc_trace(mVcdFile, kernel_2mm_U0_A_1_address1, "kernel_2mm_U0_A_1_address1");
    sc_trace(mVcdFile, kernel_2mm_U0_A_1_ce1, "kernel_2mm_U0_A_1_ce1");
    sc_trace(mVcdFile, kernel_2mm_U0_A_1_d1, "kernel_2mm_U0_A_1_d1");
    sc_trace(mVcdFile, kernel_2mm_U0_A_1_we1, "kernel_2mm_U0_A_1_we1");
    sc_trace(mVcdFile, kernel_2mm_U0_B_0_address0, "kernel_2mm_U0_B_0_address0");
    sc_trace(mVcdFile, kernel_2mm_U0_B_0_ce0, "kernel_2mm_U0_B_0_ce0");
    sc_trace(mVcdFile, kernel_2mm_U0_B_0_d0, "kernel_2mm_U0_B_0_d0");
    sc_trace(mVcdFile, kernel_2mm_U0_B_0_we0, "kernel_2mm_U0_B_0_we0");
    sc_trace(mVcdFile, kernel_2mm_U0_B_0_address1, "kernel_2mm_U0_B_0_address1");
    sc_trace(mVcdFile, kernel_2mm_U0_B_0_ce1, "kernel_2mm_U0_B_0_ce1");
    sc_trace(mVcdFile, kernel_2mm_U0_B_0_d1, "kernel_2mm_U0_B_0_d1");
    sc_trace(mVcdFile, kernel_2mm_U0_B_0_we1, "kernel_2mm_U0_B_0_we1");
    sc_trace(mVcdFile, kernel_2mm_U0_B_1_address0, "kernel_2mm_U0_B_1_address0");
    sc_trace(mVcdFile, kernel_2mm_U0_B_1_ce0, "kernel_2mm_U0_B_1_ce0");
    sc_trace(mVcdFile, kernel_2mm_U0_B_1_d0, "kernel_2mm_U0_B_1_d0");
    sc_trace(mVcdFile, kernel_2mm_U0_B_1_we0, "kernel_2mm_U0_B_1_we0");
    sc_trace(mVcdFile, kernel_2mm_U0_B_1_address1, "kernel_2mm_U0_B_1_address1");
    sc_trace(mVcdFile, kernel_2mm_U0_B_1_ce1, "kernel_2mm_U0_B_1_ce1");
    sc_trace(mVcdFile, kernel_2mm_U0_B_1_d1, "kernel_2mm_U0_B_1_d1");
    sc_trace(mVcdFile, kernel_2mm_U0_B_1_we1, "kernel_2mm_U0_B_1_we1");
    sc_trace(mVcdFile, kernel_2mm_U0_C_0_address0, "kernel_2mm_U0_C_0_address0");
    sc_trace(mVcdFile, kernel_2mm_U0_C_0_ce0, "kernel_2mm_U0_C_0_ce0");
    sc_trace(mVcdFile, kernel_2mm_U0_C_0_d0, "kernel_2mm_U0_C_0_d0");
    sc_trace(mVcdFile, kernel_2mm_U0_C_0_we0, "kernel_2mm_U0_C_0_we0");
    sc_trace(mVcdFile, kernel_2mm_U0_C_0_address1, "kernel_2mm_U0_C_0_address1");
    sc_trace(mVcdFile, kernel_2mm_U0_C_0_ce1, "kernel_2mm_U0_C_0_ce1");
    sc_trace(mVcdFile, kernel_2mm_U0_C_0_d1, "kernel_2mm_U0_C_0_d1");
    sc_trace(mVcdFile, kernel_2mm_U0_C_0_we1, "kernel_2mm_U0_C_0_we1");
    sc_trace(mVcdFile, kernel_2mm_U0_C_1_address0, "kernel_2mm_U0_C_1_address0");
    sc_trace(mVcdFile, kernel_2mm_U0_C_1_ce0, "kernel_2mm_U0_C_1_ce0");
    sc_trace(mVcdFile, kernel_2mm_U0_C_1_d0, "kernel_2mm_U0_C_1_d0");
    sc_trace(mVcdFile, kernel_2mm_U0_C_1_we0, "kernel_2mm_U0_C_1_we0");
    sc_trace(mVcdFile, kernel_2mm_U0_C_1_address1, "kernel_2mm_U0_C_1_address1");
    sc_trace(mVcdFile, kernel_2mm_U0_C_1_ce1, "kernel_2mm_U0_C_1_ce1");
    sc_trace(mVcdFile, kernel_2mm_U0_C_1_d1, "kernel_2mm_U0_C_1_d1");
    sc_trace(mVcdFile, kernel_2mm_U0_C_1_we1, "kernel_2mm_U0_C_1_we1");
    sc_trace(mVcdFile, kernel_2mm_U0_C_2_address0, "kernel_2mm_U0_C_2_address0");
    sc_trace(mVcdFile, kernel_2mm_U0_C_2_ce0, "kernel_2mm_U0_C_2_ce0");
    sc_trace(mVcdFile, kernel_2mm_U0_C_2_d0, "kernel_2mm_U0_C_2_d0");
    sc_trace(mVcdFile, kernel_2mm_U0_C_2_we0, "kernel_2mm_U0_C_2_we0");
    sc_trace(mVcdFile, kernel_2mm_U0_C_2_address1, "kernel_2mm_U0_C_2_address1");
    sc_trace(mVcdFile, kernel_2mm_U0_C_2_ce1, "kernel_2mm_U0_C_2_ce1");
    sc_trace(mVcdFile, kernel_2mm_U0_C_2_d1, "kernel_2mm_U0_C_2_d1");
    sc_trace(mVcdFile, kernel_2mm_U0_C_2_we1, "kernel_2mm_U0_C_2_we1");
    sc_trace(mVcdFile, kernel_2mm_U0_C_3_address0, "kernel_2mm_U0_C_3_address0");
    sc_trace(mVcdFile, kernel_2mm_U0_C_3_ce0, "kernel_2mm_U0_C_3_ce0");
    sc_trace(mVcdFile, kernel_2mm_U0_C_3_d0, "kernel_2mm_U0_C_3_d0");
    sc_trace(mVcdFile, kernel_2mm_U0_C_3_we0, "kernel_2mm_U0_C_3_we0");
    sc_trace(mVcdFile, kernel_2mm_U0_C_3_address1, "kernel_2mm_U0_C_3_address1");
    sc_trace(mVcdFile, kernel_2mm_U0_C_3_ce1, "kernel_2mm_U0_C_3_ce1");
    sc_trace(mVcdFile, kernel_2mm_U0_C_3_d1, "kernel_2mm_U0_C_3_d1");
    sc_trace(mVcdFile, kernel_2mm_U0_C_3_we1, "kernel_2mm_U0_C_3_we1");
    sc_trace(mVcdFile, kernel_2mm_U0_C_4_address0, "kernel_2mm_U0_C_4_address0");
    sc_trace(mVcdFile, kernel_2mm_U0_C_4_ce0, "kernel_2mm_U0_C_4_ce0");
    sc_trace(mVcdFile, kernel_2mm_U0_C_4_d0, "kernel_2mm_U0_C_4_d0");
    sc_trace(mVcdFile, kernel_2mm_U0_C_4_we0, "kernel_2mm_U0_C_4_we0");
    sc_trace(mVcdFile, kernel_2mm_U0_C_4_address1, "kernel_2mm_U0_C_4_address1");
    sc_trace(mVcdFile, kernel_2mm_U0_C_4_ce1, "kernel_2mm_U0_C_4_ce1");
    sc_trace(mVcdFile, kernel_2mm_U0_C_4_d1, "kernel_2mm_U0_C_4_d1");
    sc_trace(mVcdFile, kernel_2mm_U0_C_4_we1, "kernel_2mm_U0_C_4_we1");
    sc_trace(mVcdFile, kernel_2mm_U0_C_5_address0, "kernel_2mm_U0_C_5_address0");
    sc_trace(mVcdFile, kernel_2mm_U0_C_5_ce0, "kernel_2mm_U0_C_5_ce0");
    sc_trace(mVcdFile, kernel_2mm_U0_C_5_d0, "kernel_2mm_U0_C_5_d0");
    sc_trace(mVcdFile, kernel_2mm_U0_C_5_we0, "kernel_2mm_U0_C_5_we0");
    sc_trace(mVcdFile, kernel_2mm_U0_C_5_address1, "kernel_2mm_U0_C_5_address1");
    sc_trace(mVcdFile, kernel_2mm_U0_C_5_ce1, "kernel_2mm_U0_C_5_ce1");
    sc_trace(mVcdFile, kernel_2mm_U0_C_5_d1, "kernel_2mm_U0_C_5_d1");
    sc_trace(mVcdFile, kernel_2mm_U0_C_5_we1, "kernel_2mm_U0_C_5_we1");
    sc_trace(mVcdFile, kernel_2mm_U0_C_6_address0, "kernel_2mm_U0_C_6_address0");
    sc_trace(mVcdFile, kernel_2mm_U0_C_6_ce0, "kernel_2mm_U0_C_6_ce0");
    sc_trace(mVcdFile, kernel_2mm_U0_C_6_d0, "kernel_2mm_U0_C_6_d0");
    sc_trace(mVcdFile, kernel_2mm_U0_C_6_we0, "kernel_2mm_U0_C_6_we0");
    sc_trace(mVcdFile, kernel_2mm_U0_C_6_address1, "kernel_2mm_U0_C_6_address1");
    sc_trace(mVcdFile, kernel_2mm_U0_C_6_ce1, "kernel_2mm_U0_C_6_ce1");
    sc_trace(mVcdFile, kernel_2mm_U0_C_6_d1, "kernel_2mm_U0_C_6_d1");
    sc_trace(mVcdFile, kernel_2mm_U0_C_6_we1, "kernel_2mm_U0_C_6_we1");
    sc_trace(mVcdFile, kernel_2mm_U0_C_7_address0, "kernel_2mm_U0_C_7_address0");
    sc_trace(mVcdFile, kernel_2mm_U0_C_7_ce0, "kernel_2mm_U0_C_7_ce0");
    sc_trace(mVcdFile, kernel_2mm_U0_C_7_d0, "kernel_2mm_U0_C_7_d0");
    sc_trace(mVcdFile, kernel_2mm_U0_C_7_we0, "kernel_2mm_U0_C_7_we0");
    sc_trace(mVcdFile, kernel_2mm_U0_C_7_address1, "kernel_2mm_U0_C_7_address1");
    sc_trace(mVcdFile, kernel_2mm_U0_C_7_ce1, "kernel_2mm_U0_C_7_ce1");
    sc_trace(mVcdFile, kernel_2mm_U0_C_7_d1, "kernel_2mm_U0_C_7_d1");
    sc_trace(mVcdFile, kernel_2mm_U0_C_7_we1, "kernel_2mm_U0_C_7_we1");
    sc_trace(mVcdFile, kernel_2mm_U0_D_address0, "kernel_2mm_U0_D_address0");
    sc_trace(mVcdFile, kernel_2mm_U0_D_ce0, "kernel_2mm_U0_D_ce0");
    sc_trace(mVcdFile, kernel_2mm_U0_D_d0, "kernel_2mm_U0_D_d0");
    sc_trace(mVcdFile, kernel_2mm_U0_D_we0, "kernel_2mm_U0_D_we0");
    sc_trace(mVcdFile, kernel_2mm_U0_D_address1, "kernel_2mm_U0_D_address1");
    sc_trace(mVcdFile, kernel_2mm_U0_D_ce1, "kernel_2mm_U0_D_ce1");
    sc_trace(mVcdFile, kernel_2mm_U0_D_d1, "kernel_2mm_U0_D_d1");
    sc_trace(mVcdFile, kernel_2mm_U0_D_we1, "kernel_2mm_U0_D_we1");
    sc_trace(mVcdFile, kernel_2mm_U0_D_output_address0, "kernel_2mm_U0_D_output_address0");
    sc_trace(mVcdFile, kernel_2mm_U0_D_output_ce0, "kernel_2mm_U0_D_output_ce0");
    sc_trace(mVcdFile, kernel_2mm_U0_D_output_d0, "kernel_2mm_U0_D_output_d0");
    sc_trace(mVcdFile, kernel_2mm_U0_D_output_we0, "kernel_2mm_U0_D_output_we0");
    sc_trace(mVcdFile, kernel_2mm_U0_D_output_address1, "kernel_2mm_U0_D_output_address1");
    sc_trace(mVcdFile, kernel_2mm_U0_D_output_ce1, "kernel_2mm_U0_D_output_ce1");
    sc_trace(mVcdFile, kernel_2mm_U0_D_output_d1, "kernel_2mm_U0_D_output_d1");
    sc_trace(mVcdFile, kernel_2mm_U0_D_output_we1, "kernel_2mm_U0_D_output_we1");
    sc_trace(mVcdFile, kernel_2mm_U0_A_0_read, "kernel_2mm_U0_A_0_read");
    sc_trace(mVcdFile, kernel_2mm_U0_A_1_read, "kernel_2mm_U0_A_1_read");
    sc_trace(mVcdFile, kernel_2mm_U0_B_0_read, "kernel_2mm_U0_B_0_read");
    sc_trace(mVcdFile, kernel_2mm_U0_B_1_read, "kernel_2mm_U0_B_1_read");
    sc_trace(mVcdFile, kernel_2mm_U0_C_0_read, "kernel_2mm_U0_C_0_read");
    sc_trace(mVcdFile, kernel_2mm_U0_C_1_read, "kernel_2mm_U0_C_1_read");
    sc_trace(mVcdFile, kernel_2mm_U0_C_2_read, "kernel_2mm_U0_C_2_read");
    sc_trace(mVcdFile, kernel_2mm_U0_C_3_read, "kernel_2mm_U0_C_3_read");
    sc_trace(mVcdFile, kernel_2mm_U0_C_4_read, "kernel_2mm_U0_C_4_read");
    sc_trace(mVcdFile, kernel_2mm_U0_C_5_read, "kernel_2mm_U0_C_5_read");
    sc_trace(mVcdFile, kernel_2mm_U0_C_6_read, "kernel_2mm_U0_C_6_read");
    sc_trace(mVcdFile, kernel_2mm_U0_C_7_read, "kernel_2mm_U0_C_7_read");
    sc_trace(mVcdFile, kernel_2mm_U0_D_read, "kernel_2mm_U0_D_read");
    sc_trace(mVcdFile, kernel_2mm_U0_D_output_full_n, "kernel_2mm_U0_D_output_full_n");
    sc_trace(mVcdFile, kernel_2mm_U0_D_output_write, "kernel_2mm_U0_D_output_write");
    sc_trace(mVcdFile, kernel_2mm_U0_ap_done, "kernel_2mm_U0_ap_done");
    sc_trace(mVcdFile, kernel_2mm_U0_ap_start, "kernel_2mm_U0_ap_start");
    sc_trace(mVcdFile, kernel_2mm_U0_ap_ready, "kernel_2mm_U0_ap_ready");
    sc_trace(mVcdFile, kernel_2mm_U0_ap_idle, "kernel_2mm_U0_ap_idle");
    sc_trace(mVcdFile, kernel_2mm_U0_ap_continue, "kernel_2mm_U0_ap_continue");
    sc_trace(mVcdFile, ap_channel_done_D_output, "ap_channel_done_D_output");
    sc_trace(mVcdFile, writeData_U0_ap_start, "writeData_U0_ap_start");
    sc_trace(mVcdFile, writeData_U0_ap_done, "writeData_U0_ap_done");
    sc_trace(mVcdFile, writeData_U0_ap_continue, "writeData_U0_ap_continue");
    sc_trace(mVcdFile, writeData_U0_ap_idle, "writeData_U0_ap_idle");
    sc_trace(mVcdFile, writeData_U0_ap_ready, "writeData_U0_ap_ready");
    sc_trace(mVcdFile, writeData_U0_m_axi_D_output_AXI_AWVALID, "writeData_U0_m_axi_D_output_AXI_AWVALID");
    sc_trace(mVcdFile, writeData_U0_m_axi_D_output_AXI_AWADDR, "writeData_U0_m_axi_D_output_AXI_AWADDR");
    sc_trace(mVcdFile, writeData_U0_m_axi_D_output_AXI_AWID, "writeData_U0_m_axi_D_output_AXI_AWID");
    sc_trace(mVcdFile, writeData_U0_m_axi_D_output_AXI_AWLEN, "writeData_U0_m_axi_D_output_AXI_AWLEN");
    sc_trace(mVcdFile, writeData_U0_m_axi_D_output_AXI_AWSIZE, "writeData_U0_m_axi_D_output_AXI_AWSIZE");
    sc_trace(mVcdFile, writeData_U0_m_axi_D_output_AXI_AWBURST, "writeData_U0_m_axi_D_output_AXI_AWBURST");
    sc_trace(mVcdFile, writeData_U0_m_axi_D_output_AXI_AWLOCK, "writeData_U0_m_axi_D_output_AXI_AWLOCK");
    sc_trace(mVcdFile, writeData_U0_m_axi_D_output_AXI_AWCACHE, "writeData_U0_m_axi_D_output_AXI_AWCACHE");
    sc_trace(mVcdFile, writeData_U0_m_axi_D_output_AXI_AWPROT, "writeData_U0_m_axi_D_output_AXI_AWPROT");
    sc_trace(mVcdFile, writeData_U0_m_axi_D_output_AXI_AWQOS, "writeData_U0_m_axi_D_output_AXI_AWQOS");
    sc_trace(mVcdFile, writeData_U0_m_axi_D_output_AXI_AWREGION, "writeData_U0_m_axi_D_output_AXI_AWREGION");
    sc_trace(mVcdFile, writeData_U0_m_axi_D_output_AXI_AWUSER, "writeData_U0_m_axi_D_output_AXI_AWUSER");
    sc_trace(mVcdFile, writeData_U0_m_axi_D_output_AXI_WVALID, "writeData_U0_m_axi_D_output_AXI_WVALID");
    sc_trace(mVcdFile, writeData_U0_m_axi_D_output_AXI_WDATA, "writeData_U0_m_axi_D_output_AXI_WDATA");
    sc_trace(mVcdFile, writeData_U0_m_axi_D_output_AXI_WSTRB, "writeData_U0_m_axi_D_output_AXI_WSTRB");
    sc_trace(mVcdFile, writeData_U0_m_axi_D_output_AXI_WLAST, "writeData_U0_m_axi_D_output_AXI_WLAST");
    sc_trace(mVcdFile, writeData_U0_m_axi_D_output_AXI_WID, "writeData_U0_m_axi_D_output_AXI_WID");
    sc_trace(mVcdFile, writeData_U0_m_axi_D_output_AXI_WUSER, "writeData_U0_m_axi_D_output_AXI_WUSER");
    sc_trace(mVcdFile, writeData_U0_m_axi_D_output_AXI_ARVALID, "writeData_U0_m_axi_D_output_AXI_ARVALID");
    sc_trace(mVcdFile, writeData_U0_m_axi_D_output_AXI_ARADDR, "writeData_U0_m_axi_D_output_AXI_ARADDR");
    sc_trace(mVcdFile, writeData_U0_m_axi_D_output_AXI_ARID, "writeData_U0_m_axi_D_output_AXI_ARID");
    sc_trace(mVcdFile, writeData_U0_m_axi_D_output_AXI_ARLEN, "writeData_U0_m_axi_D_output_AXI_ARLEN");
    sc_trace(mVcdFile, writeData_U0_m_axi_D_output_AXI_ARSIZE, "writeData_U0_m_axi_D_output_AXI_ARSIZE");
    sc_trace(mVcdFile, writeData_U0_m_axi_D_output_AXI_ARBURST, "writeData_U0_m_axi_D_output_AXI_ARBURST");
    sc_trace(mVcdFile, writeData_U0_m_axi_D_output_AXI_ARLOCK, "writeData_U0_m_axi_D_output_AXI_ARLOCK");
    sc_trace(mVcdFile, writeData_U0_m_axi_D_output_AXI_ARCACHE, "writeData_U0_m_axi_D_output_AXI_ARCACHE");
    sc_trace(mVcdFile, writeData_U0_m_axi_D_output_AXI_ARPROT, "writeData_U0_m_axi_D_output_AXI_ARPROT");
    sc_trace(mVcdFile, writeData_U0_m_axi_D_output_AXI_ARQOS, "writeData_U0_m_axi_D_output_AXI_ARQOS");
    sc_trace(mVcdFile, writeData_U0_m_axi_D_output_AXI_ARREGION, "writeData_U0_m_axi_D_output_AXI_ARREGION");
    sc_trace(mVcdFile, writeData_U0_m_axi_D_output_AXI_ARUSER, "writeData_U0_m_axi_D_output_AXI_ARUSER");
    sc_trace(mVcdFile, writeData_U0_m_axi_D_output_AXI_RREADY, "writeData_U0_m_axi_D_output_AXI_RREADY");
    sc_trace(mVcdFile, writeData_U0_m_axi_D_output_AXI_BREADY, "writeData_U0_m_axi_D_output_AXI_BREADY");
    sc_trace(mVcdFile, writeData_U0_D_output_AXI_offset_read, "writeData_U0_D_output_AXI_offset_read");
    sc_trace(mVcdFile, writeData_U0_D_output_address0, "writeData_U0_D_output_address0");
    sc_trace(mVcdFile, writeData_U0_D_output_ce0, "writeData_U0_D_output_ce0");
    sc_trace(mVcdFile, ap_sync_continue, "ap_sync_continue");
    sc_trace(mVcdFile, A_0_i_full_n, "A_0_i_full_n");
    sc_trace(mVcdFile, A_0_t_empty_n, "A_0_t_empty_n");
    sc_trace(mVcdFile, A_1_i_full_n, "A_1_i_full_n");
    sc_trace(mVcdFile, A_1_t_empty_n, "A_1_t_empty_n");
    sc_trace(mVcdFile, B_0_i_full_n, "B_0_i_full_n");
    sc_trace(mVcdFile, B_0_t_empty_n, "B_0_t_empty_n");
    sc_trace(mVcdFile, B_1_i_full_n, "B_1_i_full_n");
    sc_trace(mVcdFile, B_1_t_empty_n, "B_1_t_empty_n");
    sc_trace(mVcdFile, C_0_i_full_n, "C_0_i_full_n");
    sc_trace(mVcdFile, C_0_t_empty_n, "C_0_t_empty_n");
    sc_trace(mVcdFile, C_1_i_full_n, "C_1_i_full_n");
    sc_trace(mVcdFile, C_1_t_empty_n, "C_1_t_empty_n");
    sc_trace(mVcdFile, C_2_i_full_n, "C_2_i_full_n");
    sc_trace(mVcdFile, C_2_t_empty_n, "C_2_t_empty_n");
    sc_trace(mVcdFile, C_3_i_full_n, "C_3_i_full_n");
    sc_trace(mVcdFile, C_3_t_empty_n, "C_3_t_empty_n");
    sc_trace(mVcdFile, C_4_i_full_n, "C_4_i_full_n");
    sc_trace(mVcdFile, C_4_t_empty_n, "C_4_t_empty_n");
    sc_trace(mVcdFile, C_5_i_full_n, "C_5_i_full_n");
    sc_trace(mVcdFile, C_5_t_empty_n, "C_5_t_empty_n");
    sc_trace(mVcdFile, C_6_i_full_n, "C_6_i_full_n");
    sc_trace(mVcdFile, C_6_t_empty_n, "C_6_t_empty_n");
    sc_trace(mVcdFile, C_7_i_full_n, "C_7_i_full_n");
    sc_trace(mVcdFile, C_7_t_empty_n, "C_7_t_empty_n");
    sc_trace(mVcdFile, D_i_full_n, "D_i_full_n");
    sc_trace(mVcdFile, D_t_empty_n, "D_t_empty_n");
    sc_trace(mVcdFile, D_output_i_full_n, "D_output_i_full_n");
    sc_trace(mVcdFile, D_output_t_empty_n, "D_output_t_empty_n");
    sc_trace(mVcdFile, D_output_AXI_c_full_n, "D_output_AXI_c_full_n");
    sc_trace(mVcdFile, D_output_AXI_c_dout, "D_output_AXI_c_dout");
    sc_trace(mVcdFile, D_output_AXI_c_empty_n, "D_output_AXI_c_empty_n");
    sc_trace(mVcdFile, ap_sync_done, "ap_sync_done");
    sc_trace(mVcdFile, ap_sync_ready, "ap_sync_ready");
    sc_trace(mVcdFile, readData32_U0_start_full_n, "readData32_U0_start_full_n");
    sc_trace(mVcdFile, readData32_U0_start_write, "readData32_U0_start_write");
    sc_trace(mVcdFile, kernel_2mm_U0_start_full_n, "kernel_2mm_U0_start_full_n");
    sc_trace(mVcdFile, kernel_2mm_U0_start_write, "kernel_2mm_U0_start_write");
    sc_trace(mVcdFile, writeData_U0_start_full_n, "writeData_U0_start_full_n");
    sc_trace(mVcdFile, writeData_U0_start_write, "writeData_U0_start_write");
#endif

    }
    mHdltvinHandle.open("kernel_2mm_wrapper.hdltvin.dat");
    mHdltvoutHandle.open("kernel_2mm_wrapper.hdltvout.dat");
}

kernel_2mm_wrapper::~kernel_2mm_wrapper() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete kernel_2mm_wrapper_for_control_s_axi_U;
    delete kernel_2mm_wrapper_gmem0_m_axi_U;
    delete kernel_2mm_wrapper_gmem1_m_axi_U;
    delete kernel_2mm_wrapper_gmem2_m_axi_U;
    delete kernel_2mm_wrapper_gmem3_m_axi_U;
    delete kernel_2mm_wrapper_gmem4_m_axi_U;
    delete A_0_U;
    delete A_1_U;
    delete B_0_U;
    delete B_1_U;
    delete C_0_U;
    delete C_1_U;
    delete C_2_U;
    delete C_3_U;
    delete C_4_U;
    delete C_5_U;
    delete C_6_U;
    delete C_7_U;
    delete D_U;
    delete D_output_U;
    delete readData32_U0;
    delete kernel_2mm_U0;
    delete writeData_U0;
    delete D_output_AXI_c_U;
}

void kernel_2mm_wrapper::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void kernel_2mm_wrapper::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_logic_0;
}

void kernel_2mm_wrapper::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv32_0;
}

void kernel_2mm_wrapper::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv1_0;
}

void kernel_2mm_wrapper::thread_ap_var_for_const4() {
    ap_var_for_const4 = ap_const_lv3_0;
}

void kernel_2mm_wrapper::thread_ap_var_for_const5() {
    ap_var_for_const5 = ap_const_lv2_0;
}

void kernel_2mm_wrapper::thread_ap_var_for_const6() {
    ap_var_for_const6 = ap_const_lv4_0;
}

void kernel_2mm_wrapper::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_sync_reg_channel_write_A_0 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (readData32_U0_ap_done.read() & 
             readData32_U0_ap_continue.read()))) {
            ap_sync_reg_channel_write_A_0 = ap_const_logic_0;
        } else {
            ap_sync_reg_channel_write_A_0 = ap_sync_channel_write_A_0.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_sync_reg_channel_write_A_1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (readData32_U0_ap_done.read() & 
             readData32_U0_ap_continue.read()))) {
            ap_sync_reg_channel_write_A_1 = ap_const_logic_0;
        } else {
            ap_sync_reg_channel_write_A_1 = ap_sync_channel_write_A_1.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_sync_reg_channel_write_B_0 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (readData32_U0_ap_done.read() & 
             readData32_U0_ap_continue.read()))) {
            ap_sync_reg_channel_write_B_0 = ap_const_logic_0;
        } else {
            ap_sync_reg_channel_write_B_0 = ap_sync_channel_write_B_0.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_sync_reg_channel_write_B_1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (readData32_U0_ap_done.read() & 
             readData32_U0_ap_continue.read()))) {
            ap_sync_reg_channel_write_B_1 = ap_const_logic_0;
        } else {
            ap_sync_reg_channel_write_B_1 = ap_sync_channel_write_B_1.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_sync_reg_channel_write_C_0 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (readData32_U0_ap_done.read() & 
             readData32_U0_ap_continue.read()))) {
            ap_sync_reg_channel_write_C_0 = ap_const_logic_0;
        } else {
            ap_sync_reg_channel_write_C_0 = ap_sync_channel_write_C_0.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_sync_reg_channel_write_C_1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (readData32_U0_ap_done.read() & 
             readData32_U0_ap_continue.read()))) {
            ap_sync_reg_channel_write_C_1 = ap_const_logic_0;
        } else {
            ap_sync_reg_channel_write_C_1 = ap_sync_channel_write_C_1.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_sync_reg_channel_write_C_2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (readData32_U0_ap_done.read() & 
             readData32_U0_ap_continue.read()))) {
            ap_sync_reg_channel_write_C_2 = ap_const_logic_0;
        } else {
            ap_sync_reg_channel_write_C_2 = ap_sync_channel_write_C_2.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_sync_reg_channel_write_C_3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (readData32_U0_ap_done.read() & 
             readData32_U0_ap_continue.read()))) {
            ap_sync_reg_channel_write_C_3 = ap_const_logic_0;
        } else {
            ap_sync_reg_channel_write_C_3 = ap_sync_channel_write_C_3.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_sync_reg_channel_write_C_4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (readData32_U0_ap_done.read() & 
             readData32_U0_ap_continue.read()))) {
            ap_sync_reg_channel_write_C_4 = ap_const_logic_0;
        } else {
            ap_sync_reg_channel_write_C_4 = ap_sync_channel_write_C_4.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_sync_reg_channel_write_C_5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (readData32_U0_ap_done.read() & 
             readData32_U0_ap_continue.read()))) {
            ap_sync_reg_channel_write_C_5 = ap_const_logic_0;
        } else {
            ap_sync_reg_channel_write_C_5 = ap_sync_channel_write_C_5.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_sync_reg_channel_write_C_6 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (readData32_U0_ap_done.read() & 
             readData32_U0_ap_continue.read()))) {
            ap_sync_reg_channel_write_C_6 = ap_const_logic_0;
        } else {
            ap_sync_reg_channel_write_C_6 = ap_sync_channel_write_C_6.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_sync_reg_channel_write_C_7 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (readData32_U0_ap_done.read() & 
             readData32_U0_ap_continue.read()))) {
            ap_sync_reg_channel_write_C_7 = ap_const_logic_0;
        } else {
            ap_sync_reg_channel_write_C_7 = ap_sync_channel_write_C_7.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_sync_reg_channel_write_D = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (readData32_U0_ap_done.read() & 
             readData32_U0_ap_continue.read()))) {
            ap_sync_reg_channel_write_D = ap_const_logic_0;
        } else {
            ap_sync_reg_channel_write_D = ap_sync_channel_write_D.read();
        }
    }
}

void kernel_2mm_wrapper::thread_ap_channel_done_A_0() {
    ap_channel_done_A_0 = (readData32_U0_ap_done.read() & (ap_sync_reg_channel_write_A_0.read() ^ 
  ap_const_logic_1));
}

void kernel_2mm_wrapper::thread_ap_channel_done_A_1() {
    ap_channel_done_A_1 = (readData32_U0_ap_done.read() & (ap_sync_reg_channel_write_A_1.read() ^ 
  ap_const_logic_1));
}

void kernel_2mm_wrapper::thread_ap_channel_done_B_0() {
    ap_channel_done_B_0 = (readData32_U0_ap_done.read() & (ap_sync_reg_channel_write_B_0.read() ^ 
  ap_const_logic_1));
}

void kernel_2mm_wrapper::thread_ap_channel_done_B_1() {
    ap_channel_done_B_1 = (readData32_U0_ap_done.read() & (ap_sync_reg_channel_write_B_1.read() ^ 
  ap_const_logic_1));
}

void kernel_2mm_wrapper::thread_ap_channel_done_C_0() {
    ap_channel_done_C_0 = (readData32_U0_ap_done.read() & (ap_sync_reg_channel_write_C_0.read() ^ 
  ap_const_logic_1));
}

void kernel_2mm_wrapper::thread_ap_channel_done_C_1() {
    ap_channel_done_C_1 = (readData32_U0_ap_done.read() & (ap_sync_reg_channel_write_C_1.read() ^ 
  ap_const_logic_1));
}

void kernel_2mm_wrapper::thread_ap_channel_done_C_2() {
    ap_channel_done_C_2 = (readData32_U0_ap_done.read() & (ap_sync_reg_channel_write_C_2.read() ^ 
  ap_const_logic_1));
}

void kernel_2mm_wrapper::thread_ap_channel_done_C_3() {
    ap_channel_done_C_3 = (readData32_U0_ap_done.read() & (ap_sync_reg_channel_write_C_3.read() ^ 
  ap_const_logic_1));
}

void kernel_2mm_wrapper::thread_ap_channel_done_C_4() {
    ap_channel_done_C_4 = (readData32_U0_ap_done.read() & (ap_sync_reg_channel_write_C_4.read() ^ 
  ap_const_logic_1));
}

void kernel_2mm_wrapper::thread_ap_channel_done_C_5() {
    ap_channel_done_C_5 = (readData32_U0_ap_done.read() & (ap_sync_reg_channel_write_C_5.read() ^ 
  ap_const_logic_1));
}

void kernel_2mm_wrapper::thread_ap_channel_done_C_6() {
    ap_channel_done_C_6 = (readData32_U0_ap_done.read() & (ap_sync_reg_channel_write_C_6.read() ^ 
  ap_const_logic_1));
}

void kernel_2mm_wrapper::thread_ap_channel_done_C_7() {
    ap_channel_done_C_7 = (readData32_U0_ap_done.read() & (ap_sync_reg_channel_write_C_7.read() ^ 
  ap_const_logic_1));
}

void kernel_2mm_wrapper::thread_ap_channel_done_D() {
    ap_channel_done_D = (readData32_U0_ap_done.read() & (ap_sync_reg_channel_write_D.read() ^ 
  ap_const_logic_1));
}

void kernel_2mm_wrapper::thread_ap_channel_done_D_output() {
    ap_channel_done_D_output = kernel_2mm_U0_ap_done.read();
}

void kernel_2mm_wrapper::thread_ap_done() {
    ap_done = writeData_U0_ap_done.read();
}

void kernel_2mm_wrapper::thread_ap_idle() {
    ap_idle = (readData32_U0_ap_idle.read() & kernel_2mm_U0_ap_idle.read() & writeData_U0_ap_idle.read() & (A_0_t_empty_n.read() ^ 
  ap_const_logic_1) & (A_1_t_empty_n.read() ^ 
  ap_const_logic_1) & (B_0_t_empty_n.read() ^ 
  ap_const_logic_1) & (B_1_t_empty_n.read() ^ 
  ap_const_logic_1) & (C_0_t_empty_n.read() ^ 
  ap_const_logic_1) & (C_1_t_empty_n.read() ^ 
  ap_const_logic_1) & (C_2_t_empty_n.read() ^ 
  ap_const_logic_1) & (C_3_t_empty_n.read() ^ 
  ap_const_logic_1) & (C_4_t_empty_n.read() ^ 
  ap_const_logic_1) & (C_5_t_empty_n.read() ^ 
  ap_const_logic_1) & (C_6_t_empty_n.read() ^ 
  ap_const_logic_1) & (C_7_t_empty_n.read() ^ 
  ap_const_logic_1) & (D_t_empty_n.read() ^ 
  ap_const_logic_1) & (D_output_t_empty_n.read() ^ 
  ap_const_logic_1));
}

void kernel_2mm_wrapper::thread_ap_ready() {
    ap_ready = readData32_U0_ap_ready.read();
}

void kernel_2mm_wrapper::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void kernel_2mm_wrapper::thread_ap_sync_channel_write_A_0() {
    ap_sync_channel_write_A_0 = ((ap_channel_done_A_0.read() & 
  readData32_U0_A_0_full_n.read()) | ap_sync_reg_channel_write_A_0.read());
}

void kernel_2mm_wrapper::thread_ap_sync_channel_write_A_1() {
    ap_sync_channel_write_A_1 = ((ap_channel_done_A_1.read() & 
  readData32_U0_A_1_full_n.read()) | ap_sync_reg_channel_write_A_1.read());
}

void kernel_2mm_wrapper::thread_ap_sync_channel_write_B_0() {
    ap_sync_channel_write_B_0 = ((ap_channel_done_B_0.read() & 
  readData32_U0_B_0_full_n.read()) | ap_sync_reg_channel_write_B_0.read());
}

void kernel_2mm_wrapper::thread_ap_sync_channel_write_B_1() {
    ap_sync_channel_write_B_1 = ((ap_channel_done_B_1.read() & 
  readData32_U0_B_1_full_n.read()) | ap_sync_reg_channel_write_B_1.read());
}

void kernel_2mm_wrapper::thread_ap_sync_channel_write_C_0() {
    ap_sync_channel_write_C_0 = ((ap_channel_done_C_0.read() & 
  readData32_U0_C_0_full_n.read()) | ap_sync_reg_channel_write_C_0.read());
}

void kernel_2mm_wrapper::thread_ap_sync_channel_write_C_1() {
    ap_sync_channel_write_C_1 = ((ap_channel_done_C_1.read() & 
  readData32_U0_C_1_full_n.read()) | ap_sync_reg_channel_write_C_1.read());
}

void kernel_2mm_wrapper::thread_ap_sync_channel_write_C_2() {
    ap_sync_channel_write_C_2 = ((ap_channel_done_C_2.read() & 
  readData32_U0_C_2_full_n.read()) | ap_sync_reg_channel_write_C_2.read());
}

void kernel_2mm_wrapper::thread_ap_sync_channel_write_C_3() {
    ap_sync_channel_write_C_3 = ((ap_channel_done_C_3.read() & 
  readData32_U0_C_3_full_n.read()) | ap_sync_reg_channel_write_C_3.read());
}

void kernel_2mm_wrapper::thread_ap_sync_channel_write_C_4() {
    ap_sync_channel_write_C_4 = ((ap_channel_done_C_4.read() & 
  readData32_U0_C_4_full_n.read()) | ap_sync_reg_channel_write_C_4.read());
}

void kernel_2mm_wrapper::thread_ap_sync_channel_write_C_5() {
    ap_sync_channel_write_C_5 = ((ap_channel_done_C_5.read() & 
  readData32_U0_C_5_full_n.read()) | ap_sync_reg_channel_write_C_5.read());
}

void kernel_2mm_wrapper::thread_ap_sync_channel_write_C_6() {
    ap_sync_channel_write_C_6 = ((ap_channel_done_C_6.read() & 
  readData32_U0_C_6_full_n.read()) | ap_sync_reg_channel_write_C_6.read());
}

void kernel_2mm_wrapper::thread_ap_sync_channel_write_C_7() {
    ap_sync_channel_write_C_7 = ((ap_channel_done_C_7.read() & 
  readData32_U0_C_7_full_n.read()) | ap_sync_reg_channel_write_C_7.read());
}

void kernel_2mm_wrapper::thread_ap_sync_channel_write_D() {
    ap_sync_channel_write_D = ((ap_channel_done_D.read() & 
  readData32_U0_D_full_n.read()) | ap_sync_reg_channel_write_D.read());
}

void kernel_2mm_wrapper::thread_ap_sync_continue() {
    ap_sync_continue = ap_const_logic_1;
}

void kernel_2mm_wrapper::thread_ap_sync_done() {
    ap_sync_done = writeData_U0_ap_done.read();
}

void kernel_2mm_wrapper::thread_ap_sync_ready() {
    ap_sync_ready = readData32_U0_ap_ready.read();
}

void kernel_2mm_wrapper::thread_kernel_2mm_U0_D_output_full_n() {
    kernel_2mm_U0_D_output_full_n = D_output_i_full_n.read();
}

void kernel_2mm_wrapper::thread_kernel_2mm_U0_ap_continue() {
    kernel_2mm_U0_ap_continue = kernel_2mm_U0_D_output_full_n.read();
}

void kernel_2mm_wrapper::thread_kernel_2mm_U0_ap_start() {
    kernel_2mm_U0_ap_start = (A_0_t_empty_n.read() & A_1_t_empty_n.read() & B_0_t_empty_n.read() & B_1_t_empty_n.read() & C_0_t_empty_n.read() & C_1_t_empty_n.read() & C_2_t_empty_n.read() & C_3_t_empty_n.read() & C_4_t_empty_n.read() & C_5_t_empty_n.read() & C_6_t_empty_n.read() & C_7_t_empty_n.read() & D_t_empty_n.read());
}

void kernel_2mm_wrapper::thread_kernel_2mm_U0_start_full_n() {
    kernel_2mm_U0_start_full_n = ap_const_logic_1;
}

void kernel_2mm_wrapper::thread_kernel_2mm_U0_start_write() {
    kernel_2mm_U0_start_write = ap_const_logic_0;
}

void kernel_2mm_wrapper::thread_readData32_U0_A_0_full_n() {
    readData32_U0_A_0_full_n = A_0_i_full_n.read();
}

void kernel_2mm_wrapper::thread_readData32_U0_A_1_full_n() {
    readData32_U0_A_1_full_n = A_1_i_full_n.read();
}

void kernel_2mm_wrapper::thread_readData32_U0_B_0_full_n() {
    readData32_U0_B_0_full_n = B_0_i_full_n.read();
}

void kernel_2mm_wrapper::thread_readData32_U0_B_1_full_n() {
    readData32_U0_B_1_full_n = B_1_i_full_n.read();
}

void kernel_2mm_wrapper::thread_readData32_U0_C_0_full_n() {
    readData32_U0_C_0_full_n = C_0_i_full_n.read();
}

void kernel_2mm_wrapper::thread_readData32_U0_C_1_full_n() {
    readData32_U0_C_1_full_n = C_1_i_full_n.read();
}

void kernel_2mm_wrapper::thread_readData32_U0_C_2_full_n() {
    readData32_U0_C_2_full_n = C_2_i_full_n.read();
}

void kernel_2mm_wrapper::thread_readData32_U0_C_3_full_n() {
    readData32_U0_C_3_full_n = C_3_i_full_n.read();
}

void kernel_2mm_wrapper::thread_readData32_U0_C_4_full_n() {
    readData32_U0_C_4_full_n = C_4_i_full_n.read();
}

void kernel_2mm_wrapper::thread_readData32_U0_C_5_full_n() {
    readData32_U0_C_5_full_n = C_5_i_full_n.read();
}

void kernel_2mm_wrapper::thread_readData32_U0_C_6_full_n() {
    readData32_U0_C_6_full_n = C_6_i_full_n.read();
}

void kernel_2mm_wrapper::thread_readData32_U0_C_7_full_n() {
    readData32_U0_C_7_full_n = C_7_i_full_n.read();
}

void kernel_2mm_wrapper::thread_readData32_U0_D_full_n() {
    readData32_U0_D_full_n = D_i_full_n.read();
}

void kernel_2mm_wrapper::thread_readData32_U0_ap_continue() {
    readData32_U0_ap_continue = (ap_sync_channel_write_D.read() & ap_sync_channel_write_C_7.read() & ap_sync_channel_write_C_6.read() & ap_sync_channel_write_C_5.read() & ap_sync_channel_write_C_4.read() & ap_sync_channel_write_C_3.read() & ap_sync_channel_write_C_2.read() & ap_sync_channel_write_C_1.read() & ap_sync_channel_write_C_0.read() & ap_sync_channel_write_B_1.read() & ap_sync_channel_write_B_0.read() & ap_sync_channel_write_A_1.read() & ap_sync_channel_write_A_0.read());
}

void kernel_2mm_wrapper::thread_readData32_U0_ap_start() {
    readData32_U0_ap_start = ap_start.read();
}

void kernel_2mm_wrapper::thread_readData32_U0_start_full_n() {
    readData32_U0_start_full_n = ap_const_logic_1;
}

void kernel_2mm_wrapper::thread_readData32_U0_start_write() {
    readData32_U0_start_write = ap_const_logic_0;
}

void kernel_2mm_wrapper::thread_writeData_U0_ap_continue() {
    writeData_U0_ap_continue = ap_const_logic_1;
}

void kernel_2mm_wrapper::thread_writeData_U0_ap_start() {
    writeData_U0_ap_start = D_output_t_empty_n.read();
}

void kernel_2mm_wrapper::thread_writeData_U0_start_full_n() {
    writeData_U0_start_full_n = ap_const_logic_1;
}

void kernel_2mm_wrapper::thread_writeData_U0_start_write() {
    writeData_U0_start_write = ap_const_logic_0;
}

void kernel_2mm_wrapper::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"s_axi_for_control_AWVALID\" :  \"" << s_axi_for_control_AWVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"s_axi_for_control_AWREADY\" :  \"" << s_axi_for_control_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_for_control_AWADDR\" :  \"" << s_axi_for_control_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_for_control_WVALID\" :  \"" << s_axi_for_control_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_for_control_WREADY\" :  \"" << s_axi_for_control_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_for_control_WDATA\" :  \"" << s_axi_for_control_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_for_control_WSTRB\" :  \"" << s_axi_for_control_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_for_control_ARVALID\" :  \"" << s_axi_for_control_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_for_control_ARREADY\" :  \"" << s_axi_for_control_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_for_control_ARADDR\" :  \"" << s_axi_for_control_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_for_control_RVALID\" :  \"" << s_axi_for_control_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_for_control_RREADY\" :  \"" << s_axi_for_control_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_for_control_RDATA\" :  \"" << s_axi_for_control_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_for_control_RRESP\" :  \"" << s_axi_for_control_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_for_control_BVALID\" :  \"" << s_axi_for_control_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_for_control_BREADY\" :  \"" << s_axi_for_control_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_for_control_BRESP\" :  \"" << s_axi_for_control_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_AWVALID\" :  \"" << m_axi_gmem0_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem0_AWREADY\" :  \"" << m_axi_gmem0_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_AWADDR\" :  \"" << m_axi_gmem0_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_AWID\" :  \"" << m_axi_gmem0_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_AWLEN\" :  \"" << m_axi_gmem0_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_AWSIZE\" :  \"" << m_axi_gmem0_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_AWBURST\" :  \"" << m_axi_gmem0_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_AWLOCK\" :  \"" << m_axi_gmem0_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_AWCACHE\" :  \"" << m_axi_gmem0_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_AWPROT\" :  \"" << m_axi_gmem0_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_AWQOS\" :  \"" << m_axi_gmem0_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_AWREGION\" :  \"" << m_axi_gmem0_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_AWUSER\" :  \"" << m_axi_gmem0_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_WVALID\" :  \"" << m_axi_gmem0_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem0_WREADY\" :  \"" << m_axi_gmem0_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_WDATA\" :  \"" << m_axi_gmem0_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_WSTRB\" :  \"" << m_axi_gmem0_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_WLAST\" :  \"" << m_axi_gmem0_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_WID\" :  \"" << m_axi_gmem0_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_WUSER\" :  \"" << m_axi_gmem0_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_ARVALID\" :  \"" << m_axi_gmem0_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem0_ARREADY\" :  \"" << m_axi_gmem0_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_ARADDR\" :  \"" << m_axi_gmem0_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_ARID\" :  \"" << m_axi_gmem0_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_ARLEN\" :  \"" << m_axi_gmem0_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_ARSIZE\" :  \"" << m_axi_gmem0_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_ARBURST\" :  \"" << m_axi_gmem0_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_ARLOCK\" :  \"" << m_axi_gmem0_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_ARCACHE\" :  \"" << m_axi_gmem0_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_ARPROT\" :  \"" << m_axi_gmem0_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_ARQOS\" :  \"" << m_axi_gmem0_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_ARREGION\" :  \"" << m_axi_gmem0_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_ARUSER\" :  \"" << m_axi_gmem0_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem0_RVALID\" :  \"" << m_axi_gmem0_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_RREADY\" :  \"" << m_axi_gmem0_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem0_RDATA\" :  \"" << m_axi_gmem0_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem0_RLAST\" :  \"" << m_axi_gmem0_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem0_RID\" :  \"" << m_axi_gmem0_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem0_RUSER\" :  \"" << m_axi_gmem0_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem0_RRESP\" :  \"" << m_axi_gmem0_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem0_BVALID\" :  \"" << m_axi_gmem0_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_BREADY\" :  \"" << m_axi_gmem0_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem0_BRESP\" :  \"" << m_axi_gmem0_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem0_BID\" :  \"" << m_axi_gmem0_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem0_BUSER\" :  \"" << m_axi_gmem0_BUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_AWVALID\" :  \"" << m_axi_gmem1_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_AWREADY\" :  \"" << m_axi_gmem1_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_AWADDR\" :  \"" << m_axi_gmem1_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_AWID\" :  \"" << m_axi_gmem1_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_AWLEN\" :  \"" << m_axi_gmem1_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_AWSIZE\" :  \"" << m_axi_gmem1_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_AWBURST\" :  \"" << m_axi_gmem1_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_AWLOCK\" :  \"" << m_axi_gmem1_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_AWCACHE\" :  \"" << m_axi_gmem1_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_AWPROT\" :  \"" << m_axi_gmem1_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_AWQOS\" :  \"" << m_axi_gmem1_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_AWREGION\" :  \"" << m_axi_gmem1_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_AWUSER\" :  \"" << m_axi_gmem1_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_WVALID\" :  \"" << m_axi_gmem1_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_WREADY\" :  \"" << m_axi_gmem1_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_WDATA\" :  \"" << m_axi_gmem1_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_WSTRB\" :  \"" << m_axi_gmem1_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_WLAST\" :  \"" << m_axi_gmem1_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_WID\" :  \"" << m_axi_gmem1_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_WUSER\" :  \"" << m_axi_gmem1_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_ARVALID\" :  \"" << m_axi_gmem1_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_ARREADY\" :  \"" << m_axi_gmem1_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_ARADDR\" :  \"" << m_axi_gmem1_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_ARID\" :  \"" << m_axi_gmem1_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_ARLEN\" :  \"" << m_axi_gmem1_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_ARSIZE\" :  \"" << m_axi_gmem1_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_ARBURST\" :  \"" << m_axi_gmem1_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_ARLOCK\" :  \"" << m_axi_gmem1_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_ARCACHE\" :  \"" << m_axi_gmem1_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_ARPROT\" :  \"" << m_axi_gmem1_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_ARQOS\" :  \"" << m_axi_gmem1_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_ARREGION\" :  \"" << m_axi_gmem1_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_ARUSER\" :  \"" << m_axi_gmem1_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_RVALID\" :  \"" << m_axi_gmem1_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_RREADY\" :  \"" << m_axi_gmem1_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_RDATA\" :  \"" << m_axi_gmem1_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_RLAST\" :  \"" << m_axi_gmem1_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_RID\" :  \"" << m_axi_gmem1_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_RUSER\" :  \"" << m_axi_gmem1_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_RRESP\" :  \"" << m_axi_gmem1_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_BVALID\" :  \"" << m_axi_gmem1_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_BREADY\" :  \"" << m_axi_gmem1_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_BRESP\" :  \"" << m_axi_gmem1_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_BID\" :  \"" << m_axi_gmem1_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_BUSER\" :  \"" << m_axi_gmem1_BUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_AWVALID\" :  \"" << m_axi_gmem2_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem2_AWREADY\" :  \"" << m_axi_gmem2_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_AWADDR\" :  \"" << m_axi_gmem2_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_AWID\" :  \"" << m_axi_gmem2_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_AWLEN\" :  \"" << m_axi_gmem2_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_AWSIZE\" :  \"" << m_axi_gmem2_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_AWBURST\" :  \"" << m_axi_gmem2_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_AWLOCK\" :  \"" << m_axi_gmem2_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_AWCACHE\" :  \"" << m_axi_gmem2_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_AWPROT\" :  \"" << m_axi_gmem2_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_AWQOS\" :  \"" << m_axi_gmem2_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_AWREGION\" :  \"" << m_axi_gmem2_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_AWUSER\" :  \"" << m_axi_gmem2_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_WVALID\" :  \"" << m_axi_gmem2_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem2_WREADY\" :  \"" << m_axi_gmem2_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_WDATA\" :  \"" << m_axi_gmem2_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_WSTRB\" :  \"" << m_axi_gmem2_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_WLAST\" :  \"" << m_axi_gmem2_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_WID\" :  \"" << m_axi_gmem2_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_WUSER\" :  \"" << m_axi_gmem2_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_ARVALID\" :  \"" << m_axi_gmem2_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem2_ARREADY\" :  \"" << m_axi_gmem2_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_ARADDR\" :  \"" << m_axi_gmem2_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_ARID\" :  \"" << m_axi_gmem2_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_ARLEN\" :  \"" << m_axi_gmem2_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_ARSIZE\" :  \"" << m_axi_gmem2_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_ARBURST\" :  \"" << m_axi_gmem2_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_ARLOCK\" :  \"" << m_axi_gmem2_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_ARCACHE\" :  \"" << m_axi_gmem2_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_ARPROT\" :  \"" << m_axi_gmem2_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_ARQOS\" :  \"" << m_axi_gmem2_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_ARREGION\" :  \"" << m_axi_gmem2_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_ARUSER\" :  \"" << m_axi_gmem2_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem2_RVALID\" :  \"" << m_axi_gmem2_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_RREADY\" :  \"" << m_axi_gmem2_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem2_RDATA\" :  \"" << m_axi_gmem2_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem2_RLAST\" :  \"" << m_axi_gmem2_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem2_RID\" :  \"" << m_axi_gmem2_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem2_RUSER\" :  \"" << m_axi_gmem2_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem2_RRESP\" :  \"" << m_axi_gmem2_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem2_BVALID\" :  \"" << m_axi_gmem2_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_BREADY\" :  \"" << m_axi_gmem2_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem2_BRESP\" :  \"" << m_axi_gmem2_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem2_BID\" :  \"" << m_axi_gmem2_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem2_BUSER\" :  \"" << m_axi_gmem2_BUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem3_AWVALID\" :  \"" << m_axi_gmem3_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem3_AWREADY\" :  \"" << m_axi_gmem3_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem3_AWADDR\" :  \"" << m_axi_gmem3_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem3_AWID\" :  \"" << m_axi_gmem3_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem3_AWLEN\" :  \"" << m_axi_gmem3_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem3_AWSIZE\" :  \"" << m_axi_gmem3_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem3_AWBURST\" :  \"" << m_axi_gmem3_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem3_AWLOCK\" :  \"" << m_axi_gmem3_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem3_AWCACHE\" :  \"" << m_axi_gmem3_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem3_AWPROT\" :  \"" << m_axi_gmem3_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem3_AWQOS\" :  \"" << m_axi_gmem3_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem3_AWREGION\" :  \"" << m_axi_gmem3_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem3_AWUSER\" :  \"" << m_axi_gmem3_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem3_WVALID\" :  \"" << m_axi_gmem3_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem3_WREADY\" :  \"" << m_axi_gmem3_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem3_WDATA\" :  \"" << m_axi_gmem3_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem3_WSTRB\" :  \"" << m_axi_gmem3_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem3_WLAST\" :  \"" << m_axi_gmem3_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem3_WID\" :  \"" << m_axi_gmem3_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem3_WUSER\" :  \"" << m_axi_gmem3_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem3_ARVALID\" :  \"" << m_axi_gmem3_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem3_ARREADY\" :  \"" << m_axi_gmem3_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem3_ARADDR\" :  \"" << m_axi_gmem3_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem3_ARID\" :  \"" << m_axi_gmem3_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem3_ARLEN\" :  \"" << m_axi_gmem3_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem3_ARSIZE\" :  \"" << m_axi_gmem3_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem3_ARBURST\" :  \"" << m_axi_gmem3_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem3_ARLOCK\" :  \"" << m_axi_gmem3_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem3_ARCACHE\" :  \"" << m_axi_gmem3_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem3_ARPROT\" :  \"" << m_axi_gmem3_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem3_ARQOS\" :  \"" << m_axi_gmem3_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem3_ARREGION\" :  \"" << m_axi_gmem3_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem3_ARUSER\" :  \"" << m_axi_gmem3_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem3_RVALID\" :  \"" << m_axi_gmem3_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem3_RREADY\" :  \"" << m_axi_gmem3_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem3_RDATA\" :  \"" << m_axi_gmem3_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem3_RLAST\" :  \"" << m_axi_gmem3_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem3_RID\" :  \"" << m_axi_gmem3_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem3_RUSER\" :  \"" << m_axi_gmem3_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem3_RRESP\" :  \"" << m_axi_gmem3_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem3_BVALID\" :  \"" << m_axi_gmem3_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem3_BREADY\" :  \"" << m_axi_gmem3_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem3_BRESP\" :  \"" << m_axi_gmem3_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem3_BID\" :  \"" << m_axi_gmem3_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem3_BUSER\" :  \"" << m_axi_gmem3_BUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem4_AWVALID\" :  \"" << m_axi_gmem4_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem4_AWREADY\" :  \"" << m_axi_gmem4_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem4_AWADDR\" :  \"" << m_axi_gmem4_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem4_AWID\" :  \"" << m_axi_gmem4_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem4_AWLEN\" :  \"" << m_axi_gmem4_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem4_AWSIZE\" :  \"" << m_axi_gmem4_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem4_AWBURST\" :  \"" << m_axi_gmem4_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem4_AWLOCK\" :  \"" << m_axi_gmem4_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem4_AWCACHE\" :  \"" << m_axi_gmem4_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem4_AWPROT\" :  \"" << m_axi_gmem4_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem4_AWQOS\" :  \"" << m_axi_gmem4_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem4_AWREGION\" :  \"" << m_axi_gmem4_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem4_AWUSER\" :  \"" << m_axi_gmem4_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem4_WVALID\" :  \"" << m_axi_gmem4_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem4_WREADY\" :  \"" << m_axi_gmem4_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem4_WDATA\" :  \"" << m_axi_gmem4_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem4_WSTRB\" :  \"" << m_axi_gmem4_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem4_WLAST\" :  \"" << m_axi_gmem4_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem4_WID\" :  \"" << m_axi_gmem4_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem4_WUSER\" :  \"" << m_axi_gmem4_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem4_ARVALID\" :  \"" << m_axi_gmem4_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem4_ARREADY\" :  \"" << m_axi_gmem4_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem4_ARADDR\" :  \"" << m_axi_gmem4_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem4_ARID\" :  \"" << m_axi_gmem4_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem4_ARLEN\" :  \"" << m_axi_gmem4_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem4_ARSIZE\" :  \"" << m_axi_gmem4_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem4_ARBURST\" :  \"" << m_axi_gmem4_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem4_ARLOCK\" :  \"" << m_axi_gmem4_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem4_ARCACHE\" :  \"" << m_axi_gmem4_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem4_ARPROT\" :  \"" << m_axi_gmem4_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem4_ARQOS\" :  \"" << m_axi_gmem4_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem4_ARREGION\" :  \"" << m_axi_gmem4_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem4_ARUSER\" :  \"" << m_axi_gmem4_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem4_RVALID\" :  \"" << m_axi_gmem4_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem4_RREADY\" :  \"" << m_axi_gmem4_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem4_RDATA\" :  \"" << m_axi_gmem4_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem4_RLAST\" :  \"" << m_axi_gmem4_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem4_RID\" :  \"" << m_axi_gmem4_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem4_RUSER\" :  \"" << m_axi_gmem4_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem4_RRESP\" :  \"" << m_axi_gmem4_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem4_BVALID\" :  \"" << m_axi_gmem4_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem4_BREADY\" :  \"" << m_axi_gmem4_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem4_BRESP\" :  \"" << m_axi_gmem4_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem4_BID\" :  \"" << m_axi_gmem4_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem4_BUSER\" :  \"" << m_axi_gmem4_BUSER.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

