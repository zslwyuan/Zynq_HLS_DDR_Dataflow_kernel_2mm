// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _func15_HH_
#define _func15_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "func1_execute8.h"
#include "buffer_func1_C7.h"
#include "buffer_func1_D6.h"

namespace ap_rtl {

struct func15 : public sc_module {
    // Port declarations 122
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<8> > A_0_address0;
    sc_out< sc_logic > A_0_ce0;
    sc_in< sc_lv<32> > A_0_q0;
    sc_out< sc_lv<8> > A_1_address0;
    sc_out< sc_logic > A_1_ce0;
    sc_in< sc_lv<32> > A_1_q0;
    sc_out< sc_lv<8> > B_0_address0;
    sc_out< sc_logic > B_0_ce0;
    sc_in< sc_lv<32> > B_0_q0;
    sc_out< sc_lv<8> > B_1_address0;
    sc_out< sc_logic > B_1_ce0;
    sc_in< sc_lv<32> > B_1_q0;
    sc_out< sc_lv<7> > C_0_address0;
    sc_out< sc_logic > C_0_ce0;
    sc_in< sc_lv<32> > C_0_q0;
    sc_out< sc_lv<7> > C_1_address0;
    sc_out< sc_logic > C_1_ce0;
    sc_in< sc_lv<32> > C_1_q0;
    sc_out< sc_lv<6> > C_2_address0;
    sc_out< sc_logic > C_2_ce0;
    sc_in< sc_lv<32> > C_2_q0;
    sc_out< sc_lv<6> > C_3_address0;
    sc_out< sc_logic > C_3_ce0;
    sc_in< sc_lv<32> > C_3_q0;
    sc_out< sc_lv<6> > C_4_address0;
    sc_out< sc_logic > C_4_ce0;
    sc_in< sc_lv<32> > C_4_q0;
    sc_out< sc_lv<6> > C_5_address0;
    sc_out< sc_logic > C_5_ce0;
    sc_in< sc_lv<32> > C_5_q0;
    sc_out< sc_lv<6> > C_6_address0;
    sc_out< sc_logic > C_6_ce0;
    sc_in< sc_lv<32> > C_6_q0;
    sc_out< sc_lv<6> > C_7_address0;
    sc_out< sc_logic > C_7_ce0;
    sc_in< sc_lv<32> > C_7_q0;
    sc_out< sc_lv<9> > D_address0;
    sc_out< sc_logic > D_ce0;
    sc_in< sc_lv<32> > D_q0;
    sc_out< sc_lv<6> > tmp_0_address0;
    sc_out< sc_logic > tmp_0_ce0;
    sc_out< sc_logic > tmp_0_we0;
    sc_out< sc_lv<32> > tmp_0_d0;
    sc_in< sc_lv<32> > tmp_0_q0;
    sc_out< sc_lv<6> > tmp_1_address0;
    sc_out< sc_logic > tmp_1_ce0;
    sc_out< sc_logic > tmp_1_we0;
    sc_out< sc_lv<32> > tmp_1_d0;
    sc_in< sc_lv<32> > tmp_1_q0;
    sc_out< sc_lv<5> > tmp_2_address0;
    sc_out< sc_logic > tmp_2_ce0;
    sc_out< sc_logic > tmp_2_we0;
    sc_out< sc_lv<32> > tmp_2_d0;
    sc_in< sc_lv<32> > tmp_2_q0;
    sc_out< sc_lv<5> > tmp_3_address0;
    sc_out< sc_logic > tmp_3_ce0;
    sc_out< sc_logic > tmp_3_we0;
    sc_out< sc_lv<32> > tmp_3_d0;
    sc_in< sc_lv<32> > tmp_3_q0;
    sc_out< sc_lv<5> > tmp_4_address0;
    sc_out< sc_logic > tmp_4_ce0;
    sc_out< sc_logic > tmp_4_we0;
    sc_out< sc_lv<32> > tmp_4_d0;
    sc_in< sc_lv<32> > tmp_4_q0;
    sc_out< sc_lv<5> > tmp_5_address0;
    sc_out< sc_logic > tmp_5_ce0;
    sc_out< sc_logic > tmp_5_we0;
    sc_out< sc_lv<32> > tmp_5_d0;
    sc_in< sc_lv<32> > tmp_5_q0;
    sc_out< sc_lv<5> > tmp_6_address0;
    sc_out< sc_logic > tmp_6_ce0;
    sc_out< sc_logic > tmp_6_we0;
    sc_out< sc_lv<32> > tmp_6_d0;
    sc_in< sc_lv<32> > tmp_6_q0;
    sc_out< sc_lv<5> > tmp_7_address0;
    sc_out< sc_logic > tmp_7_ce0;
    sc_out< sc_logic > tmp_7_we0;
    sc_out< sc_lv<32> > tmp_7_d0;
    sc_in< sc_lv<32> > tmp_7_q0;
    sc_out< sc_lv<7> > C_mid_0_address0;
    sc_out< sc_logic > C_mid_0_ce0;
    sc_out< sc_logic > C_mid_0_we0;
    sc_out< sc_lv<32> > C_mid_0_d0;
    sc_out< sc_lv<7> > C_mid_1_address0;
    sc_out< sc_logic > C_mid_1_ce0;
    sc_out< sc_logic > C_mid_1_we0;
    sc_out< sc_lv<32> > C_mid_1_d0;
    sc_out< sc_lv<6> > C_mid_2_address0;
    sc_out< sc_logic > C_mid_2_ce0;
    sc_out< sc_logic > C_mid_2_we0;
    sc_out< sc_lv<32> > C_mid_2_d0;
    sc_out< sc_lv<6> > C_mid_3_address0;
    sc_out< sc_logic > C_mid_3_ce0;
    sc_out< sc_logic > C_mid_3_we0;
    sc_out< sc_lv<32> > C_mid_3_d0;
    sc_out< sc_lv<6> > C_mid_4_address0;
    sc_out< sc_logic > C_mid_4_ce0;
    sc_out< sc_logic > C_mid_4_we0;
    sc_out< sc_lv<32> > C_mid_4_d0;
    sc_out< sc_lv<6> > C_mid_5_address0;
    sc_out< sc_logic > C_mid_5_ce0;
    sc_out< sc_logic > C_mid_5_we0;
    sc_out< sc_lv<32> > C_mid_5_d0;
    sc_out< sc_lv<6> > C_mid_6_address0;
    sc_out< sc_logic > C_mid_6_ce0;
    sc_out< sc_logic > C_mid_6_we0;
    sc_out< sc_lv<32> > C_mid_6_d0;
    sc_out< sc_lv<6> > C_mid_7_address0;
    sc_out< sc_logic > C_mid_7_ce0;
    sc_out< sc_logic > C_mid_7_we0;
    sc_out< sc_lv<32> > C_mid_7_d0;
    sc_out< sc_lv<9> > D_mid_address0;
    sc_out< sc_logic > D_mid_ce0;
    sc_out< sc_logic > D_mid_we0;
    sc_out< sc_lv<32> > D_mid_d0;


    // Module declarations
    func15(sc_module_name name);
    SC_HAS_PROCESS(func15);

    ~func15();

    sc_trace_file* mVcdFile;

    func1_execute8* grp_func1_execute8_fu_66;
    buffer_func1_C7* grp_buffer_func1_C7_fu_94;
    buffer_func1_D6* grp_buffer_func1_D6_fu_130;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<2> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > grp_func1_execute8_fu_66_ap_start;
    sc_signal< sc_logic > grp_func1_execute8_fu_66_ap_done;
    sc_signal< sc_logic > grp_func1_execute8_fu_66_ap_idle;
    sc_signal< sc_logic > grp_func1_execute8_fu_66_ap_ready;
    sc_signal< sc_lv<6> > grp_func1_execute8_fu_66_tmp_mid_execute_0_address0;
    sc_signal< sc_logic > grp_func1_execute8_fu_66_tmp_mid_execute_0_ce0;
    sc_signal< sc_logic > grp_func1_execute8_fu_66_tmp_mid_execute_0_we0;
    sc_signal< sc_lv<32> > grp_func1_execute8_fu_66_tmp_mid_execute_0_d0;
    sc_signal< sc_lv<6> > grp_func1_execute8_fu_66_tmp_mid_execute_1_address0;
    sc_signal< sc_logic > grp_func1_execute8_fu_66_tmp_mid_execute_1_ce0;
    sc_signal< sc_logic > grp_func1_execute8_fu_66_tmp_mid_execute_1_we0;
    sc_signal< sc_lv<32> > grp_func1_execute8_fu_66_tmp_mid_execute_1_d0;
    sc_signal< sc_lv<5> > grp_func1_execute8_fu_66_tmp_mid_execute_2_address0;
    sc_signal< sc_logic > grp_func1_execute8_fu_66_tmp_mid_execute_2_ce0;
    sc_signal< sc_logic > grp_func1_execute8_fu_66_tmp_mid_execute_2_we0;
    sc_signal< sc_lv<32> > grp_func1_execute8_fu_66_tmp_mid_execute_2_d0;
    sc_signal< sc_lv<5> > grp_func1_execute8_fu_66_tmp_mid_execute_3_address0;
    sc_signal< sc_logic > grp_func1_execute8_fu_66_tmp_mid_execute_3_ce0;
    sc_signal< sc_logic > grp_func1_execute8_fu_66_tmp_mid_execute_3_we0;
    sc_signal< sc_lv<32> > grp_func1_execute8_fu_66_tmp_mid_execute_3_d0;
    sc_signal< sc_lv<5> > grp_func1_execute8_fu_66_tmp_mid_execute_4_address0;
    sc_signal< sc_logic > grp_func1_execute8_fu_66_tmp_mid_execute_4_ce0;
    sc_signal< sc_logic > grp_func1_execute8_fu_66_tmp_mid_execute_4_we0;
    sc_signal< sc_lv<32> > grp_func1_execute8_fu_66_tmp_mid_execute_4_d0;
    sc_signal< sc_lv<5> > grp_func1_execute8_fu_66_tmp_mid_execute_5_address0;
    sc_signal< sc_logic > grp_func1_execute8_fu_66_tmp_mid_execute_5_ce0;
    sc_signal< sc_logic > grp_func1_execute8_fu_66_tmp_mid_execute_5_we0;
    sc_signal< sc_lv<32> > grp_func1_execute8_fu_66_tmp_mid_execute_5_d0;
    sc_signal< sc_lv<5> > grp_func1_execute8_fu_66_tmp_mid_execute_6_address0;
    sc_signal< sc_logic > grp_func1_execute8_fu_66_tmp_mid_execute_6_ce0;
    sc_signal< sc_logic > grp_func1_execute8_fu_66_tmp_mid_execute_6_we0;
    sc_signal< sc_lv<32> > grp_func1_execute8_fu_66_tmp_mid_execute_6_d0;
    sc_signal< sc_lv<5> > grp_func1_execute8_fu_66_tmp_mid_execute_7_address0;
    sc_signal< sc_logic > grp_func1_execute8_fu_66_tmp_mid_execute_7_ce0;
    sc_signal< sc_logic > grp_func1_execute8_fu_66_tmp_mid_execute_7_we0;
    sc_signal< sc_lv<32> > grp_func1_execute8_fu_66_tmp_mid_execute_7_d0;
    sc_signal< sc_lv<8> > grp_func1_execute8_fu_66_A_0_address0;
    sc_signal< sc_logic > grp_func1_execute8_fu_66_A_0_ce0;
    sc_signal< sc_lv<8> > grp_func1_execute8_fu_66_A_1_address0;
    sc_signal< sc_logic > grp_func1_execute8_fu_66_A_1_ce0;
    sc_signal< sc_lv<8> > grp_func1_execute8_fu_66_B_0_address0;
    sc_signal< sc_logic > grp_func1_execute8_fu_66_B_0_ce0;
    sc_signal< sc_lv<8> > grp_func1_execute8_fu_66_B_1_address0;
    sc_signal< sc_logic > grp_func1_execute8_fu_66_B_1_ce0;
    sc_signal< sc_logic > grp_buffer_func1_C7_fu_94_ap_start;
    sc_signal< sc_logic > grp_buffer_func1_C7_fu_94_ap_done;
    sc_signal< sc_logic > grp_buffer_func1_C7_fu_94_ap_idle;
    sc_signal< sc_logic > grp_buffer_func1_C7_fu_94_ap_ready;
    sc_signal< sc_lv<7> > grp_buffer_func1_C7_fu_94_C_input_0_address0;
    sc_signal< sc_logic > grp_buffer_func1_C7_fu_94_C_input_0_ce0;
    sc_signal< sc_lv<7> > grp_buffer_func1_C7_fu_94_C_input_1_address0;
    sc_signal< sc_logic > grp_buffer_func1_C7_fu_94_C_input_1_ce0;
    sc_signal< sc_lv<6> > grp_buffer_func1_C7_fu_94_C_input_2_address0;
    sc_signal< sc_logic > grp_buffer_func1_C7_fu_94_C_input_2_ce0;
    sc_signal< sc_lv<6> > grp_buffer_func1_C7_fu_94_C_input_3_address0;
    sc_signal< sc_logic > grp_buffer_func1_C7_fu_94_C_input_3_ce0;
    sc_signal< sc_lv<6> > grp_buffer_func1_C7_fu_94_C_input_4_address0;
    sc_signal< sc_logic > grp_buffer_func1_C7_fu_94_C_input_4_ce0;
    sc_signal< sc_lv<6> > grp_buffer_func1_C7_fu_94_C_input_5_address0;
    sc_signal< sc_logic > grp_buffer_func1_C7_fu_94_C_input_5_ce0;
    sc_signal< sc_lv<6> > grp_buffer_func1_C7_fu_94_C_input_6_address0;
    sc_signal< sc_logic > grp_buffer_func1_C7_fu_94_C_input_6_ce0;
    sc_signal< sc_lv<6> > grp_buffer_func1_C7_fu_94_C_input_7_address0;
    sc_signal< sc_logic > grp_buffer_func1_C7_fu_94_C_input_7_ce0;
    sc_signal< sc_lv<7> > grp_buffer_func1_C7_fu_94_C_mid_0_address0;
    sc_signal< sc_logic > grp_buffer_func1_C7_fu_94_C_mid_0_ce0;
    sc_signal< sc_logic > grp_buffer_func1_C7_fu_94_C_mid_0_we0;
    sc_signal< sc_lv<32> > grp_buffer_func1_C7_fu_94_C_mid_0_d0;
    sc_signal< sc_lv<7> > grp_buffer_func1_C7_fu_94_C_mid_1_address0;
    sc_signal< sc_logic > grp_buffer_func1_C7_fu_94_C_mid_1_ce0;
    sc_signal< sc_logic > grp_buffer_func1_C7_fu_94_C_mid_1_we0;
    sc_signal< sc_lv<32> > grp_buffer_func1_C7_fu_94_C_mid_1_d0;
    sc_signal< sc_lv<6> > grp_buffer_func1_C7_fu_94_C_mid_2_address0;
    sc_signal< sc_logic > grp_buffer_func1_C7_fu_94_C_mid_2_ce0;
    sc_signal< sc_logic > grp_buffer_func1_C7_fu_94_C_mid_2_we0;
    sc_signal< sc_lv<32> > grp_buffer_func1_C7_fu_94_C_mid_2_d0;
    sc_signal< sc_lv<6> > grp_buffer_func1_C7_fu_94_C_mid_3_address0;
    sc_signal< sc_logic > grp_buffer_func1_C7_fu_94_C_mid_3_ce0;
    sc_signal< sc_logic > grp_buffer_func1_C7_fu_94_C_mid_3_we0;
    sc_signal< sc_lv<32> > grp_buffer_func1_C7_fu_94_C_mid_3_d0;
    sc_signal< sc_lv<6> > grp_buffer_func1_C7_fu_94_C_mid_4_address0;
    sc_signal< sc_logic > grp_buffer_func1_C7_fu_94_C_mid_4_ce0;
    sc_signal< sc_logic > grp_buffer_func1_C7_fu_94_C_mid_4_we0;
    sc_signal< sc_lv<32> > grp_buffer_func1_C7_fu_94_C_mid_4_d0;
    sc_signal< sc_lv<6> > grp_buffer_func1_C7_fu_94_C_mid_5_address0;
    sc_signal< sc_logic > grp_buffer_func1_C7_fu_94_C_mid_5_ce0;
    sc_signal< sc_logic > grp_buffer_func1_C7_fu_94_C_mid_5_we0;
    sc_signal< sc_lv<32> > grp_buffer_func1_C7_fu_94_C_mid_5_d0;
    sc_signal< sc_lv<6> > grp_buffer_func1_C7_fu_94_C_mid_6_address0;
    sc_signal< sc_logic > grp_buffer_func1_C7_fu_94_C_mid_6_ce0;
    sc_signal< sc_logic > grp_buffer_func1_C7_fu_94_C_mid_6_we0;
    sc_signal< sc_lv<32> > grp_buffer_func1_C7_fu_94_C_mid_6_d0;
    sc_signal< sc_lv<6> > grp_buffer_func1_C7_fu_94_C_mid_7_address0;
    sc_signal< sc_logic > grp_buffer_func1_C7_fu_94_C_mid_7_ce0;
    sc_signal< sc_logic > grp_buffer_func1_C7_fu_94_C_mid_7_we0;
    sc_signal< sc_lv<32> > grp_buffer_func1_C7_fu_94_C_mid_7_d0;
    sc_signal< sc_logic > grp_buffer_func1_D6_fu_130_ap_start;
    sc_signal< sc_logic > grp_buffer_func1_D6_fu_130_ap_done;
    sc_signal< sc_logic > grp_buffer_func1_D6_fu_130_ap_idle;
    sc_signal< sc_logic > grp_buffer_func1_D6_fu_130_ap_ready;
    sc_signal< sc_lv<9> > grp_buffer_func1_D6_fu_130_D_input_address0;
    sc_signal< sc_logic > grp_buffer_func1_D6_fu_130_D_input_ce0;
    sc_signal< sc_lv<9> > grp_buffer_func1_D6_fu_130_D_mid_address0;
    sc_signal< sc_logic > grp_buffer_func1_D6_fu_130_D_mid_ce0;
    sc_signal< sc_logic > grp_buffer_func1_D6_fu_130_D_mid_we0;
    sc_signal< sc_lv<32> > grp_buffer_func1_D6_fu_130_D_mid_d0;
    sc_signal< sc_logic > grp_func1_execute8_fu_66_ap_start_reg;
    sc_signal< bool > ap_block_state1_ignore_call2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > grp_buffer_func1_C7_fu_94_ap_start_reg;
    sc_signal< bool > ap_block_state1_ignore_call1;
    sc_signal< sc_logic > grp_buffer_func1_D6_fu_130_ap_start_reg;
    sc_signal< bool > ap_block_state1_ignore_call0;
    sc_signal< bool > ap_block_state2_on_subcall_done;
    sc_signal< sc_lv<2> > ap_NS_fsm;
    sc_signal< bool > ap_block_state1;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<2> ap_ST_fsm_state1;
    static const sc_lv<2> ap_ST_fsm_state2;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_A_0_address0();
    void thread_A_0_ce0();
    void thread_A_1_address0();
    void thread_A_1_ce0();
    void thread_B_0_address0();
    void thread_B_0_ce0();
    void thread_B_1_address0();
    void thread_B_1_ce0();
    void thread_C_0_address0();
    void thread_C_0_ce0();
    void thread_C_1_address0();
    void thread_C_1_ce0();
    void thread_C_2_address0();
    void thread_C_2_ce0();
    void thread_C_3_address0();
    void thread_C_3_ce0();
    void thread_C_4_address0();
    void thread_C_4_ce0();
    void thread_C_5_address0();
    void thread_C_5_ce0();
    void thread_C_6_address0();
    void thread_C_6_ce0();
    void thread_C_7_address0();
    void thread_C_7_ce0();
    void thread_C_mid_0_address0();
    void thread_C_mid_0_ce0();
    void thread_C_mid_0_d0();
    void thread_C_mid_0_we0();
    void thread_C_mid_1_address0();
    void thread_C_mid_1_ce0();
    void thread_C_mid_1_d0();
    void thread_C_mid_1_we0();
    void thread_C_mid_2_address0();
    void thread_C_mid_2_ce0();
    void thread_C_mid_2_d0();
    void thread_C_mid_2_we0();
    void thread_C_mid_3_address0();
    void thread_C_mid_3_ce0();
    void thread_C_mid_3_d0();
    void thread_C_mid_3_we0();
    void thread_C_mid_4_address0();
    void thread_C_mid_4_ce0();
    void thread_C_mid_4_d0();
    void thread_C_mid_4_we0();
    void thread_C_mid_5_address0();
    void thread_C_mid_5_ce0();
    void thread_C_mid_5_d0();
    void thread_C_mid_5_we0();
    void thread_C_mid_6_address0();
    void thread_C_mid_6_ce0();
    void thread_C_mid_6_d0();
    void thread_C_mid_6_we0();
    void thread_C_mid_7_address0();
    void thread_C_mid_7_ce0();
    void thread_C_mid_7_d0();
    void thread_C_mid_7_we0();
    void thread_D_address0();
    void thread_D_ce0();
    void thread_D_mid_address0();
    void thread_D_mid_ce0();
    void thread_D_mid_d0();
    void thread_D_mid_we0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_block_state1();
    void thread_ap_block_state1_ignore_call0();
    void thread_ap_block_state1_ignore_call1();
    void thread_ap_block_state1_ignore_call2();
    void thread_ap_block_state2_on_subcall_done();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_grp_buffer_func1_C7_fu_94_ap_start();
    void thread_grp_buffer_func1_D6_fu_130_ap_start();
    void thread_grp_func1_execute8_fu_66_ap_start();
    void thread_tmp_0_address0();
    void thread_tmp_0_ce0();
    void thread_tmp_0_d0();
    void thread_tmp_0_we0();
    void thread_tmp_1_address0();
    void thread_tmp_1_ce0();
    void thread_tmp_1_d0();
    void thread_tmp_1_we0();
    void thread_tmp_2_address0();
    void thread_tmp_2_ce0();
    void thread_tmp_2_d0();
    void thread_tmp_2_we0();
    void thread_tmp_3_address0();
    void thread_tmp_3_ce0();
    void thread_tmp_3_d0();
    void thread_tmp_3_we0();
    void thread_tmp_4_address0();
    void thread_tmp_4_ce0();
    void thread_tmp_4_d0();
    void thread_tmp_4_we0();
    void thread_tmp_5_address0();
    void thread_tmp_5_ce0();
    void thread_tmp_5_d0();
    void thread_tmp_5_we0();
    void thread_tmp_6_address0();
    void thread_tmp_6_ce0();
    void thread_tmp_6_d0();
    void thread_tmp_6_we0();
    void thread_tmp_7_address0();
    void thread_tmp_7_ce0();
    void thread_tmp_7_d0();
    void thread_tmp_7_we0();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
