// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _kernel_2mm_HH_
#define _kernel_2mm_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "func15.h"
#include "func24.h"
#include "kernel_2mm_D_mid.h"
#include "kernel_2mm_C_mid_0.h"
#include "kernel_2mm_C_mid_2.h"
#include "kernel_2mm_tmp_mig8j.h"

namespace ap_rtl {

struct kernel_2mm : public sc_module {
    // Port declarations 175
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_out< sc_lv<8> > A_0_address0;
    sc_out< sc_logic > A_0_ce0;
    sc_out< sc_lv<32> > A_0_d0;
    sc_in< sc_lv<32> > A_0_q0;
    sc_out< sc_logic > A_0_we0;
    sc_out< sc_lv<8> > A_0_address1;
    sc_out< sc_logic > A_0_ce1;
    sc_out< sc_lv<32> > A_0_d1;
    sc_in< sc_lv<32> > A_0_q1;
    sc_out< sc_logic > A_0_we1;
    sc_out< sc_lv<8> > A_1_address0;
    sc_out< sc_logic > A_1_ce0;
    sc_out< sc_lv<32> > A_1_d0;
    sc_in< sc_lv<32> > A_1_q0;
    sc_out< sc_logic > A_1_we0;
    sc_out< sc_lv<8> > A_1_address1;
    sc_out< sc_logic > A_1_ce1;
    sc_out< sc_lv<32> > A_1_d1;
    sc_in< sc_lv<32> > A_1_q1;
    sc_out< sc_logic > A_1_we1;
    sc_out< sc_lv<8> > B_0_address0;
    sc_out< sc_logic > B_0_ce0;
    sc_out< sc_lv<32> > B_0_d0;
    sc_in< sc_lv<32> > B_0_q0;
    sc_out< sc_logic > B_0_we0;
    sc_out< sc_lv<8> > B_0_address1;
    sc_out< sc_logic > B_0_ce1;
    sc_out< sc_lv<32> > B_0_d1;
    sc_in< sc_lv<32> > B_0_q1;
    sc_out< sc_logic > B_0_we1;
    sc_out< sc_lv<8> > B_1_address0;
    sc_out< sc_logic > B_1_ce0;
    sc_out< sc_lv<32> > B_1_d0;
    sc_in< sc_lv<32> > B_1_q0;
    sc_out< sc_logic > B_1_we0;
    sc_out< sc_lv<8> > B_1_address1;
    sc_out< sc_logic > B_1_ce1;
    sc_out< sc_lv<32> > B_1_d1;
    sc_in< sc_lv<32> > B_1_q1;
    sc_out< sc_logic > B_1_we1;
    sc_out< sc_lv<7> > C_0_address0;
    sc_out< sc_logic > C_0_ce0;
    sc_out< sc_lv<32> > C_0_d0;
    sc_in< sc_lv<32> > C_0_q0;
    sc_out< sc_logic > C_0_we0;
    sc_out< sc_lv<7> > C_0_address1;
    sc_out< sc_logic > C_0_ce1;
    sc_out< sc_lv<32> > C_0_d1;
    sc_in< sc_lv<32> > C_0_q1;
    sc_out< sc_logic > C_0_we1;
    sc_out< sc_lv<7> > C_1_address0;
    sc_out< sc_logic > C_1_ce0;
    sc_out< sc_lv<32> > C_1_d0;
    sc_in< sc_lv<32> > C_1_q0;
    sc_out< sc_logic > C_1_we0;
    sc_out< sc_lv<7> > C_1_address1;
    sc_out< sc_logic > C_1_ce1;
    sc_out< sc_lv<32> > C_1_d1;
    sc_in< sc_lv<32> > C_1_q1;
    sc_out< sc_logic > C_1_we1;
    sc_out< sc_lv<6> > C_2_address0;
    sc_out< sc_logic > C_2_ce0;
    sc_out< sc_lv<32> > C_2_d0;
    sc_in< sc_lv<32> > C_2_q0;
    sc_out< sc_logic > C_2_we0;
    sc_out< sc_lv<6> > C_2_address1;
    sc_out< sc_logic > C_2_ce1;
    sc_out< sc_lv<32> > C_2_d1;
    sc_in< sc_lv<32> > C_2_q1;
    sc_out< sc_logic > C_2_we1;
    sc_out< sc_lv<6> > C_3_address0;
    sc_out< sc_logic > C_3_ce0;
    sc_out< sc_lv<32> > C_3_d0;
    sc_in< sc_lv<32> > C_3_q0;
    sc_out< sc_logic > C_3_we0;
    sc_out< sc_lv<6> > C_3_address1;
    sc_out< sc_logic > C_3_ce1;
    sc_out< sc_lv<32> > C_3_d1;
    sc_in< sc_lv<32> > C_3_q1;
    sc_out< sc_logic > C_3_we1;
    sc_out< sc_lv<6> > C_4_address0;
    sc_out< sc_logic > C_4_ce0;
    sc_out< sc_lv<32> > C_4_d0;
    sc_in< sc_lv<32> > C_4_q0;
    sc_out< sc_logic > C_4_we0;
    sc_out< sc_lv<6> > C_4_address1;
    sc_out< sc_logic > C_4_ce1;
    sc_out< sc_lv<32> > C_4_d1;
    sc_in< sc_lv<32> > C_4_q1;
    sc_out< sc_logic > C_4_we1;
    sc_out< sc_lv<6> > C_5_address0;
    sc_out< sc_logic > C_5_ce0;
    sc_out< sc_lv<32> > C_5_d0;
    sc_in< sc_lv<32> > C_5_q0;
    sc_out< sc_logic > C_5_we0;
    sc_out< sc_lv<6> > C_5_address1;
    sc_out< sc_logic > C_5_ce1;
    sc_out< sc_lv<32> > C_5_d1;
    sc_in< sc_lv<32> > C_5_q1;
    sc_out< sc_logic > C_5_we1;
    sc_out< sc_lv<6> > C_6_address0;
    sc_out< sc_logic > C_6_ce0;
    sc_out< sc_lv<32> > C_6_d0;
    sc_in< sc_lv<32> > C_6_q0;
    sc_out< sc_logic > C_6_we0;
    sc_out< sc_lv<6> > C_6_address1;
    sc_out< sc_logic > C_6_ce1;
    sc_out< sc_lv<32> > C_6_d1;
    sc_in< sc_lv<32> > C_6_q1;
    sc_out< sc_logic > C_6_we1;
    sc_out< sc_lv<6> > C_7_address0;
    sc_out< sc_logic > C_7_ce0;
    sc_out< sc_lv<32> > C_7_d0;
    sc_in< sc_lv<32> > C_7_q0;
    sc_out< sc_logic > C_7_we0;
    sc_out< sc_lv<6> > C_7_address1;
    sc_out< sc_logic > C_7_ce1;
    sc_out< sc_lv<32> > C_7_d1;
    sc_in< sc_lv<32> > C_7_q1;
    sc_out< sc_logic > C_7_we1;
    sc_out< sc_lv<9> > D_address0;
    sc_out< sc_logic > D_ce0;
    sc_out< sc_lv<32> > D_d0;
    sc_in< sc_lv<32> > D_q0;
    sc_out< sc_logic > D_we0;
    sc_out< sc_lv<9> > D_address1;
    sc_out< sc_logic > D_ce1;
    sc_out< sc_lv<32> > D_d1;
    sc_in< sc_lv<32> > D_q1;
    sc_out< sc_logic > D_we1;
    sc_out< sc_lv<9> > D_output_address0;
    sc_out< sc_logic > D_output_ce0;
    sc_out< sc_lv<32> > D_output_d0;
    sc_in< sc_lv<32> > D_output_q0;
    sc_out< sc_logic > D_output_we0;
    sc_out< sc_lv<9> > D_output_address1;
    sc_out< sc_logic > D_output_ce1;
    sc_out< sc_lv<32> > D_output_d1;
    sc_in< sc_lv<32> > D_output_q1;
    sc_out< sc_logic > D_output_we1;
    sc_in< sc_logic > A_0_empty_n;
    sc_out< sc_logic > A_0_read;
    sc_in< sc_logic > A_1_empty_n;
    sc_out< sc_logic > A_1_read;
    sc_in< sc_logic > B_0_empty_n;
    sc_out< sc_logic > B_0_read;
    sc_in< sc_logic > B_1_empty_n;
    sc_out< sc_logic > B_1_read;
    sc_in< sc_logic > C_0_empty_n;
    sc_out< sc_logic > C_0_read;
    sc_in< sc_logic > C_1_empty_n;
    sc_out< sc_logic > C_1_read;
    sc_in< sc_logic > C_2_empty_n;
    sc_out< sc_logic > C_2_read;
    sc_in< sc_logic > C_3_empty_n;
    sc_out< sc_logic > C_3_read;
    sc_in< sc_logic > C_4_empty_n;
    sc_out< sc_logic > C_4_read;
    sc_in< sc_logic > C_5_empty_n;
    sc_out< sc_logic > C_5_read;
    sc_in< sc_logic > C_6_empty_n;
    sc_out< sc_logic > C_6_read;
    sc_in< sc_logic > C_7_empty_n;
    sc_out< sc_logic > C_7_read;
    sc_in< sc_logic > D_empty_n;
    sc_out< sc_logic > D_read;
    sc_in< sc_logic > D_output_full_n;
    sc_out< sc_logic > D_output_write;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > ap_idle;
    sc_in< sc_logic > ap_continue;
    sc_signal< sc_logic > ap_var_for_const2;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<32> > ap_var_for_const1;


    // Module declarations
    kernel_2mm(sc_module_name name);
    SC_HAS_PROCESS(kernel_2mm);

    ~kernel_2mm();

    sc_trace_file* mVcdFile;

    kernel_2mm_D_mid* D_mid_U;
    kernel_2mm_C_mid_0* C_mid_0_U;
    kernel_2mm_C_mid_0* C_mid_1_U;
    kernel_2mm_C_mid_2* C_mid_2_U;
    kernel_2mm_C_mid_2* C_mid_3_U;
    kernel_2mm_C_mid_2* C_mid_4_U;
    kernel_2mm_C_mid_2* C_mid_5_U;
    kernel_2mm_C_mid_2* C_mid_6_U;
    kernel_2mm_C_mid_2* C_mid_7_U;
    kernel_2mm_C_mid_2* tmp_mid_0_U;
    kernel_2mm_C_mid_2* tmp_mid_1_U;
    kernel_2mm_tmp_mig8j* tmp_mid_2_U;
    kernel_2mm_tmp_mig8j* tmp_mid_3_U;
    kernel_2mm_tmp_mig8j* tmp_mid_4_U;
    kernel_2mm_tmp_mig8j* tmp_mid_5_U;
    kernel_2mm_tmp_mig8j* tmp_mid_6_U;
    kernel_2mm_tmp_mig8j* tmp_mid_7_U;
    func15* func15_U0;
    func24* func24_U0;
    sc_signal< sc_lv<32> > D_mid_i_q0;
    sc_signal< sc_lv<32> > D_mid_t_q0;
    sc_signal< sc_lv<32> > C_mid_0_i_q0;
    sc_signal< sc_lv<32> > C_mid_0_t_q0;
    sc_signal< sc_lv<32> > C_mid_1_i_q0;
    sc_signal< sc_lv<32> > C_mid_1_t_q0;
    sc_signal< sc_lv<32> > C_mid_2_i_q0;
    sc_signal< sc_lv<32> > C_mid_2_t_q0;
    sc_signal< sc_lv<32> > C_mid_3_i_q0;
    sc_signal< sc_lv<32> > C_mid_3_t_q0;
    sc_signal< sc_lv<32> > C_mid_4_i_q0;
    sc_signal< sc_lv<32> > C_mid_4_t_q0;
    sc_signal< sc_lv<32> > C_mid_5_i_q0;
    sc_signal< sc_lv<32> > C_mid_5_t_q0;
    sc_signal< sc_lv<32> > C_mid_6_i_q0;
    sc_signal< sc_lv<32> > C_mid_6_t_q0;
    sc_signal< sc_lv<32> > C_mid_7_i_q0;
    sc_signal< sc_lv<32> > C_mid_7_t_q0;
    sc_signal< sc_lv<32> > tmp_mid_0_i_q0;
    sc_signal< sc_lv<32> > tmp_mid_0_t_q0;
    sc_signal< sc_lv<32> > tmp_mid_1_i_q0;
    sc_signal< sc_lv<32> > tmp_mid_1_t_q0;
    sc_signal< sc_lv<32> > tmp_mid_2_i_q0;
    sc_signal< sc_lv<32> > tmp_mid_2_t_q0;
    sc_signal< sc_lv<32> > tmp_mid_3_i_q0;
    sc_signal< sc_lv<32> > tmp_mid_3_t_q0;
    sc_signal< sc_lv<32> > tmp_mid_4_i_q0;
    sc_signal< sc_lv<32> > tmp_mid_4_t_q0;
    sc_signal< sc_lv<32> > tmp_mid_5_i_q0;
    sc_signal< sc_lv<32> > tmp_mid_5_t_q0;
    sc_signal< sc_lv<32> > tmp_mid_6_i_q0;
    sc_signal< sc_lv<32> > tmp_mid_6_t_q0;
    sc_signal< sc_lv<32> > tmp_mid_7_i_q0;
    sc_signal< sc_lv<32> > tmp_mid_7_t_q0;
    sc_signal< sc_logic > func15_U0_ap_start;
    sc_signal< sc_logic > func15_U0_ap_done;
    sc_signal< sc_logic > func15_U0_ap_continue;
    sc_signal< sc_logic > func15_U0_ap_idle;
    sc_signal< sc_logic > func15_U0_ap_ready;
    sc_signal< sc_lv<8> > func15_U0_A_0_address0;
    sc_signal< sc_logic > func15_U0_A_0_ce0;
    sc_signal< sc_lv<8> > func15_U0_A_1_address0;
    sc_signal< sc_logic > func15_U0_A_1_ce0;
    sc_signal< sc_lv<8> > func15_U0_B_0_address0;
    sc_signal< sc_logic > func15_U0_B_0_ce0;
    sc_signal< sc_lv<8> > func15_U0_B_1_address0;
    sc_signal< sc_logic > func15_U0_B_1_ce0;
    sc_signal< sc_lv<7> > func15_U0_C_0_address0;
    sc_signal< sc_logic > func15_U0_C_0_ce0;
    sc_signal< sc_lv<7> > func15_U0_C_1_address0;
    sc_signal< sc_logic > func15_U0_C_1_ce0;
    sc_signal< sc_lv<6> > func15_U0_C_2_address0;
    sc_signal< sc_logic > func15_U0_C_2_ce0;
    sc_signal< sc_lv<6> > func15_U0_C_3_address0;
    sc_signal< sc_logic > func15_U0_C_3_ce0;
    sc_signal< sc_lv<6> > func15_U0_C_4_address0;
    sc_signal< sc_logic > func15_U0_C_4_ce0;
    sc_signal< sc_lv<6> > func15_U0_C_5_address0;
    sc_signal< sc_logic > func15_U0_C_5_ce0;
    sc_signal< sc_lv<6> > func15_U0_C_6_address0;
    sc_signal< sc_logic > func15_U0_C_6_ce0;
    sc_signal< sc_lv<6> > func15_U0_C_7_address0;
    sc_signal< sc_logic > func15_U0_C_7_ce0;
    sc_signal< sc_lv<9> > func15_U0_D_address0;
    sc_signal< sc_logic > func15_U0_D_ce0;
    sc_signal< sc_lv<6> > func15_U0_tmp_0_address0;
    sc_signal< sc_logic > func15_U0_tmp_0_ce0;
    sc_signal< sc_logic > func15_U0_tmp_0_we0;
    sc_signal< sc_lv<32> > func15_U0_tmp_0_d0;
    sc_signal< sc_lv<6> > func15_U0_tmp_1_address0;
    sc_signal< sc_logic > func15_U0_tmp_1_ce0;
    sc_signal< sc_logic > func15_U0_tmp_1_we0;
    sc_signal< sc_lv<32> > func15_U0_tmp_1_d0;
    sc_signal< sc_lv<5> > func15_U0_tmp_2_address0;
    sc_signal< sc_logic > func15_U0_tmp_2_ce0;
    sc_signal< sc_logic > func15_U0_tmp_2_we0;
    sc_signal< sc_lv<32> > func15_U0_tmp_2_d0;
    sc_signal< sc_lv<5> > func15_U0_tmp_3_address0;
    sc_signal< sc_logic > func15_U0_tmp_3_ce0;
    sc_signal< sc_logic > func15_U0_tmp_3_we0;
    sc_signal< sc_lv<32> > func15_U0_tmp_3_d0;
    sc_signal< sc_lv<5> > func15_U0_tmp_4_address0;
    sc_signal< sc_logic > func15_U0_tmp_4_ce0;
    sc_signal< sc_logic > func15_U0_tmp_4_we0;
    sc_signal< sc_lv<32> > func15_U0_tmp_4_d0;
    sc_signal< sc_lv<5> > func15_U0_tmp_5_address0;
    sc_signal< sc_logic > func15_U0_tmp_5_ce0;
    sc_signal< sc_logic > func15_U0_tmp_5_we0;
    sc_signal< sc_lv<32> > func15_U0_tmp_5_d0;
    sc_signal< sc_lv<5> > func15_U0_tmp_6_address0;
    sc_signal< sc_logic > func15_U0_tmp_6_ce0;
    sc_signal< sc_logic > func15_U0_tmp_6_we0;
    sc_signal< sc_lv<32> > func15_U0_tmp_6_d0;
    sc_signal< sc_lv<5> > func15_U0_tmp_7_address0;
    sc_signal< sc_logic > func15_U0_tmp_7_ce0;
    sc_signal< sc_logic > func15_U0_tmp_7_we0;
    sc_signal< sc_lv<32> > func15_U0_tmp_7_d0;
    sc_signal< sc_lv<7> > func15_U0_C_mid_0_address0;
    sc_signal< sc_logic > func15_U0_C_mid_0_ce0;
    sc_signal< sc_logic > func15_U0_C_mid_0_we0;
    sc_signal< sc_lv<32> > func15_U0_C_mid_0_d0;
    sc_signal< sc_lv<7> > func15_U0_C_mid_1_address0;
    sc_signal< sc_logic > func15_U0_C_mid_1_ce0;
    sc_signal< sc_logic > func15_U0_C_mid_1_we0;
    sc_signal< sc_lv<32> > func15_U0_C_mid_1_d0;
    sc_signal< sc_lv<6> > func15_U0_C_mid_2_address0;
    sc_signal< sc_logic > func15_U0_C_mid_2_ce0;
    sc_signal< sc_logic > func15_U0_C_mid_2_we0;
    sc_signal< sc_lv<32> > func15_U0_C_mid_2_d0;
    sc_signal< sc_lv<6> > func15_U0_C_mid_3_address0;
    sc_signal< sc_logic > func15_U0_C_mid_3_ce0;
    sc_signal< sc_logic > func15_U0_C_mid_3_we0;
    sc_signal< sc_lv<32> > func15_U0_C_mid_3_d0;
    sc_signal< sc_lv<6> > func15_U0_C_mid_4_address0;
    sc_signal< sc_logic > func15_U0_C_mid_4_ce0;
    sc_signal< sc_logic > func15_U0_C_mid_4_we0;
    sc_signal< sc_lv<32> > func15_U0_C_mid_4_d0;
    sc_signal< sc_lv<6> > func15_U0_C_mid_5_address0;
    sc_signal< sc_logic > func15_U0_C_mid_5_ce0;
    sc_signal< sc_logic > func15_U0_C_mid_5_we0;
    sc_signal< sc_lv<32> > func15_U0_C_mid_5_d0;
    sc_signal< sc_lv<6> > func15_U0_C_mid_6_address0;
    sc_signal< sc_logic > func15_U0_C_mid_6_ce0;
    sc_signal< sc_logic > func15_U0_C_mid_6_we0;
    sc_signal< sc_lv<32> > func15_U0_C_mid_6_d0;
    sc_signal< sc_lv<6> > func15_U0_C_mid_7_address0;
    sc_signal< sc_logic > func15_U0_C_mid_7_ce0;
    sc_signal< sc_logic > func15_U0_C_mid_7_we0;
    sc_signal< sc_lv<32> > func15_U0_C_mid_7_d0;
    sc_signal< sc_lv<9> > func15_U0_D_mid_address0;
    sc_signal< sc_logic > func15_U0_D_mid_ce0;
    sc_signal< sc_logic > func15_U0_D_mid_we0;
    sc_signal< sc_lv<32> > func15_U0_D_mid_d0;
    sc_signal< sc_logic > func15_U0_A_0_full_n;
    sc_signal< sc_logic > func15_U0_A_0_write;
    sc_signal< sc_logic > func15_U0_A_1_full_n;
    sc_signal< sc_logic > func15_U0_A_1_write;
    sc_signal< sc_logic > func15_U0_B_0_full_n;
    sc_signal< sc_logic > func15_U0_B_0_write;
    sc_signal< sc_logic > func15_U0_B_1_full_n;
    sc_signal< sc_logic > func15_U0_B_1_write;
    sc_signal< sc_logic > func15_U0_C_0_full_n;
    sc_signal< sc_logic > func15_U0_C_0_write;
    sc_signal< sc_logic > func15_U0_C_1_full_n;
    sc_signal< sc_logic > func15_U0_C_1_write;
    sc_signal< sc_logic > func15_U0_C_2_full_n;
    sc_signal< sc_logic > func15_U0_C_2_write;
    sc_signal< sc_logic > func15_U0_C_3_full_n;
    sc_signal< sc_logic > func15_U0_C_3_write;
    sc_signal< sc_logic > func15_U0_C_4_full_n;
    sc_signal< sc_logic > func15_U0_C_4_write;
    sc_signal< sc_logic > func15_U0_C_5_full_n;
    sc_signal< sc_logic > func15_U0_C_5_write;
    sc_signal< sc_logic > func15_U0_C_6_full_n;
    sc_signal< sc_logic > func15_U0_C_6_write;
    sc_signal< sc_logic > func15_U0_C_7_full_n;
    sc_signal< sc_logic > func15_U0_C_7_write;
    sc_signal< sc_logic > func15_U0_D_full_n;
    sc_signal< sc_logic > func15_U0_D_write;
    sc_signal< sc_logic > ap_channel_done_D_mid;
    sc_signal< sc_logic > func15_U0_D_mid_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_D_mid;
    sc_signal< sc_logic > ap_sync_channel_write_D_mid;
    sc_signal< sc_logic > ap_channel_done_C_mid_7;
    sc_signal< sc_logic > func15_U0_C_mid_7_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_C_mid_7;
    sc_signal< sc_logic > ap_sync_channel_write_C_mid_7;
    sc_signal< sc_logic > ap_channel_done_C_mid_6;
    sc_signal< sc_logic > func15_U0_C_mid_6_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_C_mid_6;
    sc_signal< sc_logic > ap_sync_channel_write_C_mid_6;
    sc_signal< sc_logic > ap_channel_done_C_mid_5;
    sc_signal< sc_logic > func15_U0_C_mid_5_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_C_mid_5;
    sc_signal< sc_logic > ap_sync_channel_write_C_mid_5;
    sc_signal< sc_logic > ap_channel_done_C_mid_4;
    sc_signal< sc_logic > func15_U0_C_mid_4_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_C_mid_4;
    sc_signal< sc_logic > ap_sync_channel_write_C_mid_4;
    sc_signal< sc_logic > ap_channel_done_C_mid_3;
    sc_signal< sc_logic > func15_U0_C_mid_3_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_C_mid_3;
    sc_signal< sc_logic > ap_sync_channel_write_C_mid_3;
    sc_signal< sc_logic > ap_channel_done_C_mid_2;
    sc_signal< sc_logic > func15_U0_C_mid_2_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_C_mid_2;
    sc_signal< sc_logic > ap_sync_channel_write_C_mid_2;
    sc_signal< sc_logic > ap_channel_done_C_mid_1;
    sc_signal< sc_logic > func15_U0_C_mid_1_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_C_mid_1;
    sc_signal< sc_logic > ap_sync_channel_write_C_mid_1;
    sc_signal< sc_logic > ap_channel_done_C_mid_0;
    sc_signal< sc_logic > func15_U0_C_mid_0_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_C_mid_0;
    sc_signal< sc_logic > ap_sync_channel_write_C_mid_0;
    sc_signal< sc_logic > ap_channel_done_tmp_mid_7;
    sc_signal< sc_logic > func15_U0_tmp_7_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_tmp_mid_7;
    sc_signal< sc_logic > ap_sync_channel_write_tmp_mid_7;
    sc_signal< sc_logic > ap_channel_done_tmp_mid_6;
    sc_signal< sc_logic > func15_U0_tmp_6_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_tmp_mid_6;
    sc_signal< sc_logic > ap_sync_channel_write_tmp_mid_6;
    sc_signal< sc_logic > ap_channel_done_tmp_mid_5;
    sc_signal< sc_logic > func15_U0_tmp_5_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_tmp_mid_5;
    sc_signal< sc_logic > ap_sync_channel_write_tmp_mid_5;
    sc_signal< sc_logic > ap_channel_done_tmp_mid_4;
    sc_signal< sc_logic > func15_U0_tmp_4_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_tmp_mid_4;
    sc_signal< sc_logic > ap_sync_channel_write_tmp_mid_4;
    sc_signal< sc_logic > ap_channel_done_tmp_mid_3;
    sc_signal< sc_logic > func15_U0_tmp_3_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_tmp_mid_3;
    sc_signal< sc_logic > ap_sync_channel_write_tmp_mid_3;
    sc_signal< sc_logic > ap_channel_done_tmp_mid_2;
    sc_signal< sc_logic > func15_U0_tmp_2_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_tmp_mid_2;
    sc_signal< sc_logic > ap_sync_channel_write_tmp_mid_2;
    sc_signal< sc_logic > ap_channel_done_tmp_mid_1;
    sc_signal< sc_logic > func15_U0_tmp_1_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_tmp_mid_1;
    sc_signal< sc_logic > ap_sync_channel_write_tmp_mid_1;
    sc_signal< sc_logic > ap_channel_done_tmp_mid_0;
    sc_signal< sc_logic > func15_U0_tmp_0_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_tmp_mid_0;
    sc_signal< sc_logic > ap_sync_channel_write_tmp_mid_0;
    sc_signal< sc_logic > func24_U0_ap_start;
    sc_signal< sc_logic > func24_U0_ap_done;
    sc_signal< sc_logic > func24_U0_ap_continue;
    sc_signal< sc_logic > func24_U0_ap_idle;
    sc_signal< sc_logic > func24_U0_ap_ready;
    sc_signal< sc_lv<7> > func24_U0_C_0_address0;
    sc_signal< sc_logic > func24_U0_C_0_ce0;
    sc_signal< sc_lv<7> > func24_U0_C_1_address0;
    sc_signal< sc_logic > func24_U0_C_1_ce0;
    sc_signal< sc_lv<6> > func24_U0_C_2_address0;
    sc_signal< sc_logic > func24_U0_C_2_ce0;
    sc_signal< sc_lv<6> > func24_U0_C_3_address0;
    sc_signal< sc_logic > func24_U0_C_3_ce0;
    sc_signal< sc_lv<6> > func24_U0_C_4_address0;
    sc_signal< sc_logic > func24_U0_C_4_ce0;
    sc_signal< sc_lv<6> > func24_U0_C_5_address0;
    sc_signal< sc_logic > func24_U0_C_5_ce0;
    sc_signal< sc_lv<6> > func24_U0_C_6_address0;
    sc_signal< sc_logic > func24_U0_C_6_ce0;
    sc_signal< sc_lv<6> > func24_U0_C_7_address0;
    sc_signal< sc_logic > func24_U0_C_7_ce0;
    sc_signal< sc_lv<9> > func24_U0_D_address0;
    sc_signal< sc_logic > func24_U0_D_ce0;
    sc_signal< sc_lv<6> > func24_U0_tmp_0_address0;
    sc_signal< sc_logic > func24_U0_tmp_0_ce0;
    sc_signal< sc_lv<6> > func24_U0_tmp_1_address0;
    sc_signal< sc_logic > func24_U0_tmp_1_ce0;
    sc_signal< sc_lv<5> > func24_U0_tmp_2_address0;
    sc_signal< sc_logic > func24_U0_tmp_2_ce0;
    sc_signal< sc_lv<5> > func24_U0_tmp_3_address0;
    sc_signal< sc_logic > func24_U0_tmp_3_ce0;
    sc_signal< sc_lv<5> > func24_U0_tmp_4_address0;
    sc_signal< sc_logic > func24_U0_tmp_4_ce0;
    sc_signal< sc_lv<5> > func24_U0_tmp_5_address0;
    sc_signal< sc_logic > func24_U0_tmp_5_ce0;
    sc_signal< sc_lv<5> > func24_U0_tmp_6_address0;
    sc_signal< sc_logic > func24_U0_tmp_6_ce0;
    sc_signal< sc_lv<5> > func24_U0_tmp_7_address0;
    sc_signal< sc_logic > func24_U0_tmp_7_ce0;
    sc_signal< sc_lv<9> > func24_U0_D_output_address0;
    sc_signal< sc_logic > func24_U0_D_output_ce0;
    sc_signal< sc_logic > func24_U0_D_output_we0;
    sc_signal< sc_lv<32> > func24_U0_D_output_d0;
    sc_signal< sc_logic > func24_U0_D_output_full_n;
    sc_signal< sc_logic > func24_U0_D_output_write;
    sc_signal< sc_logic > ap_sync_continue;
    sc_signal< sc_logic > tmp_mid_0_i_full_n;
    sc_signal< sc_logic > tmp_mid_0_t_empty_n;
    sc_signal< sc_logic > tmp_mid_1_i_full_n;
    sc_signal< sc_logic > tmp_mid_1_t_empty_n;
    sc_signal< sc_logic > tmp_mid_2_i_full_n;
    sc_signal< sc_logic > tmp_mid_2_t_empty_n;
    sc_signal< sc_logic > tmp_mid_3_i_full_n;
    sc_signal< sc_logic > tmp_mid_3_t_empty_n;
    sc_signal< sc_logic > tmp_mid_4_i_full_n;
    sc_signal< sc_logic > tmp_mid_4_t_empty_n;
    sc_signal< sc_logic > tmp_mid_5_i_full_n;
    sc_signal< sc_logic > tmp_mid_5_t_empty_n;
    sc_signal< sc_logic > tmp_mid_6_i_full_n;
    sc_signal< sc_logic > tmp_mid_6_t_empty_n;
    sc_signal< sc_logic > tmp_mid_7_i_full_n;
    sc_signal< sc_logic > tmp_mid_7_t_empty_n;
    sc_signal< sc_logic > C_mid_0_i_full_n;
    sc_signal< sc_logic > C_mid_0_t_empty_n;
    sc_signal< sc_logic > C_mid_1_i_full_n;
    sc_signal< sc_logic > C_mid_1_t_empty_n;
    sc_signal< sc_logic > C_mid_2_i_full_n;
    sc_signal< sc_logic > C_mid_2_t_empty_n;
    sc_signal< sc_logic > C_mid_3_i_full_n;
    sc_signal< sc_logic > C_mid_3_t_empty_n;
    sc_signal< sc_logic > C_mid_4_i_full_n;
    sc_signal< sc_logic > C_mid_4_t_empty_n;
    sc_signal< sc_logic > C_mid_5_i_full_n;
    sc_signal< sc_logic > C_mid_5_t_empty_n;
    sc_signal< sc_logic > C_mid_6_i_full_n;
    sc_signal< sc_logic > C_mid_6_t_empty_n;
    sc_signal< sc_logic > C_mid_7_i_full_n;
    sc_signal< sc_logic > C_mid_7_t_empty_n;
    sc_signal< sc_logic > D_mid_i_full_n;
    sc_signal< sc_logic > D_mid_t_empty_n;
    sc_signal< sc_logic > ap_sync_done;
    sc_signal< sc_logic > ap_sync_ready;
    sc_signal< sc_logic > func15_U0_start_full_n;
    sc_signal< sc_logic > func15_U0_start_write;
    sc_signal< sc_logic > func24_U0_start_full_n;
    sc_signal< sc_logic > func24_U0_start_write;
    static const sc_logic ap_const_logic_1;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<9> ap_const_lv9_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_A_0_address0();
    void thread_A_0_address1();
    void thread_A_0_ce0();
    void thread_A_0_ce1();
    void thread_A_0_d0();
    void thread_A_0_d1();
    void thread_A_0_read();
    void thread_A_0_we0();
    void thread_A_0_we1();
    void thread_A_1_address0();
    void thread_A_1_address1();
    void thread_A_1_ce0();
    void thread_A_1_ce1();
    void thread_A_1_d0();
    void thread_A_1_d1();
    void thread_A_1_read();
    void thread_A_1_we0();
    void thread_A_1_we1();
    void thread_B_0_address0();
    void thread_B_0_address1();
    void thread_B_0_ce0();
    void thread_B_0_ce1();
    void thread_B_0_d0();
    void thread_B_0_d1();
    void thread_B_0_read();
    void thread_B_0_we0();
    void thread_B_0_we1();
    void thread_B_1_address0();
    void thread_B_1_address1();
    void thread_B_1_ce0();
    void thread_B_1_ce1();
    void thread_B_1_d0();
    void thread_B_1_d1();
    void thread_B_1_read();
    void thread_B_1_we0();
    void thread_B_1_we1();
    void thread_C_0_address0();
    void thread_C_0_address1();
    void thread_C_0_ce0();
    void thread_C_0_ce1();
    void thread_C_0_d0();
    void thread_C_0_d1();
    void thread_C_0_read();
    void thread_C_0_we0();
    void thread_C_0_we1();
    void thread_C_1_address0();
    void thread_C_1_address1();
    void thread_C_1_ce0();
    void thread_C_1_ce1();
    void thread_C_1_d0();
    void thread_C_1_d1();
    void thread_C_1_read();
    void thread_C_1_we0();
    void thread_C_1_we1();
    void thread_C_2_address0();
    void thread_C_2_address1();
    void thread_C_2_ce0();
    void thread_C_2_ce1();
    void thread_C_2_d0();
    void thread_C_2_d1();
    void thread_C_2_read();
    void thread_C_2_we0();
    void thread_C_2_we1();
    void thread_C_3_address0();
    void thread_C_3_address1();
    void thread_C_3_ce0();
    void thread_C_3_ce1();
    void thread_C_3_d0();
    void thread_C_3_d1();
    void thread_C_3_read();
    void thread_C_3_we0();
    void thread_C_3_we1();
    void thread_C_4_address0();
    void thread_C_4_address1();
    void thread_C_4_ce0();
    void thread_C_4_ce1();
    void thread_C_4_d0();
    void thread_C_4_d1();
    void thread_C_4_read();
    void thread_C_4_we0();
    void thread_C_4_we1();
    void thread_C_5_address0();
    void thread_C_5_address1();
    void thread_C_5_ce0();
    void thread_C_5_ce1();
    void thread_C_5_d0();
    void thread_C_5_d1();
    void thread_C_5_read();
    void thread_C_5_we0();
    void thread_C_5_we1();
    void thread_C_6_address0();
    void thread_C_6_address1();
    void thread_C_6_ce0();
    void thread_C_6_ce1();
    void thread_C_6_d0();
    void thread_C_6_d1();
    void thread_C_6_read();
    void thread_C_6_we0();
    void thread_C_6_we1();
    void thread_C_7_address0();
    void thread_C_7_address1();
    void thread_C_7_ce0();
    void thread_C_7_ce1();
    void thread_C_7_d0();
    void thread_C_7_d1();
    void thread_C_7_read();
    void thread_C_7_we0();
    void thread_C_7_we1();
    void thread_D_address0();
    void thread_D_address1();
    void thread_D_ce0();
    void thread_D_ce1();
    void thread_D_d0();
    void thread_D_d1();
    void thread_D_output_address0();
    void thread_D_output_address1();
    void thread_D_output_ce0();
    void thread_D_output_ce1();
    void thread_D_output_d0();
    void thread_D_output_d1();
    void thread_D_output_we0();
    void thread_D_output_we1();
    void thread_D_output_write();
    void thread_D_read();
    void thread_D_we0();
    void thread_D_we1();
    void thread_ap_channel_done_C_mid_0();
    void thread_ap_channel_done_C_mid_1();
    void thread_ap_channel_done_C_mid_2();
    void thread_ap_channel_done_C_mid_3();
    void thread_ap_channel_done_C_mid_4();
    void thread_ap_channel_done_C_mid_5();
    void thread_ap_channel_done_C_mid_6();
    void thread_ap_channel_done_C_mid_7();
    void thread_ap_channel_done_D_mid();
    void thread_ap_channel_done_tmp_mid_0();
    void thread_ap_channel_done_tmp_mid_1();
    void thread_ap_channel_done_tmp_mid_2();
    void thread_ap_channel_done_tmp_mid_3();
    void thread_ap_channel_done_tmp_mid_4();
    void thread_ap_channel_done_tmp_mid_5();
    void thread_ap_channel_done_tmp_mid_6();
    void thread_ap_channel_done_tmp_mid_7();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sync_channel_write_C_mid_0();
    void thread_ap_sync_channel_write_C_mid_1();
    void thread_ap_sync_channel_write_C_mid_2();
    void thread_ap_sync_channel_write_C_mid_3();
    void thread_ap_sync_channel_write_C_mid_4();
    void thread_ap_sync_channel_write_C_mid_5();
    void thread_ap_sync_channel_write_C_mid_6();
    void thread_ap_sync_channel_write_C_mid_7();
    void thread_ap_sync_channel_write_D_mid();
    void thread_ap_sync_channel_write_tmp_mid_0();
    void thread_ap_sync_channel_write_tmp_mid_1();
    void thread_ap_sync_channel_write_tmp_mid_2();
    void thread_ap_sync_channel_write_tmp_mid_3();
    void thread_ap_sync_channel_write_tmp_mid_4();
    void thread_ap_sync_channel_write_tmp_mid_5();
    void thread_ap_sync_channel_write_tmp_mid_6();
    void thread_ap_sync_channel_write_tmp_mid_7();
    void thread_ap_sync_continue();
    void thread_ap_sync_done();
    void thread_ap_sync_ready();
    void thread_func15_U0_A_0_full_n();
    void thread_func15_U0_A_0_write();
    void thread_func15_U0_A_1_full_n();
    void thread_func15_U0_A_1_write();
    void thread_func15_U0_B_0_full_n();
    void thread_func15_U0_B_0_write();
    void thread_func15_U0_B_1_full_n();
    void thread_func15_U0_B_1_write();
    void thread_func15_U0_C_0_full_n();
    void thread_func15_U0_C_0_write();
    void thread_func15_U0_C_1_full_n();
    void thread_func15_U0_C_1_write();
    void thread_func15_U0_C_2_full_n();
    void thread_func15_U0_C_2_write();
    void thread_func15_U0_C_3_full_n();
    void thread_func15_U0_C_3_write();
    void thread_func15_U0_C_4_full_n();
    void thread_func15_U0_C_4_write();
    void thread_func15_U0_C_5_full_n();
    void thread_func15_U0_C_5_write();
    void thread_func15_U0_C_6_full_n();
    void thread_func15_U0_C_6_write();
    void thread_func15_U0_C_7_full_n();
    void thread_func15_U0_C_7_write();
    void thread_func15_U0_C_mid_0_full_n();
    void thread_func15_U0_C_mid_1_full_n();
    void thread_func15_U0_C_mid_2_full_n();
    void thread_func15_U0_C_mid_3_full_n();
    void thread_func15_U0_C_mid_4_full_n();
    void thread_func15_U0_C_mid_5_full_n();
    void thread_func15_U0_C_mid_6_full_n();
    void thread_func15_U0_C_mid_7_full_n();
    void thread_func15_U0_D_full_n();
    void thread_func15_U0_D_mid_full_n();
    void thread_func15_U0_D_write();
    void thread_func15_U0_ap_continue();
    void thread_func15_U0_ap_start();
    void thread_func15_U0_start_full_n();
    void thread_func15_U0_start_write();
    void thread_func15_U0_tmp_0_full_n();
    void thread_func15_U0_tmp_1_full_n();
    void thread_func15_U0_tmp_2_full_n();
    void thread_func15_U0_tmp_3_full_n();
    void thread_func15_U0_tmp_4_full_n();
    void thread_func15_U0_tmp_5_full_n();
    void thread_func15_U0_tmp_6_full_n();
    void thread_func15_U0_tmp_7_full_n();
    void thread_func24_U0_D_output_full_n();
    void thread_func24_U0_D_output_write();
    void thread_func24_U0_ap_continue();
    void thread_func24_U0_ap_start();
    void thread_func24_U0_start_full_n();
    void thread_func24_U0_start_write();
};

}

using namespace ap_rtl;

#endif
