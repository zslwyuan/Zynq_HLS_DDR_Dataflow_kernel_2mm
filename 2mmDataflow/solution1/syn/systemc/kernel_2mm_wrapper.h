// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _kernel_2mm_wrapper_HH_
#define _kernel_2mm_wrapper_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "readData32.h"
#include "kernel_2mm.h"
#include "writeData.h"
#include "kernel_2mm_wrappemb6.h"
#include "kernel_2mm_wrappeocq.h"
#include "kernel_2mm_wrappeqcK.h"
#include "kernel_2mm_wrappesc4.h"
#include "kernel_2mm_wrappeyd2.h"
#include "fifo_w32_d3_A.h"
#include "kernel_2mm_wrapper_for_control_s_axi.h"
#include "kernel_2mm_wrapper_gmem0_m_axi.h"
#include "kernel_2mm_wrapper_gmem1_m_axi.h"
#include "kernel_2mm_wrapper_gmem2_m_axi.h"
#include "kernel_2mm_wrapper_gmem3_m_axi.h"
#include "kernel_2mm_wrapper_gmem4_m_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_FOR_CONTROL_ADDR_WIDTH = 6,
         unsigned int C_S_AXI_FOR_CONTROL_DATA_WIDTH = 32,
         unsigned int C_M_AXI_GMEM0_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_GMEM0_ID_WIDTH = 1,
         unsigned int C_M_AXI_GMEM0_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM0_DATA_WIDTH = 32,
         unsigned int C_M_AXI_GMEM0_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM0_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM0_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM0_BUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM1_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_GMEM1_ID_WIDTH = 1,
         unsigned int C_M_AXI_GMEM1_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM1_DATA_WIDTH = 32,
         unsigned int C_M_AXI_GMEM1_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM1_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM1_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM1_BUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM2_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_GMEM2_ID_WIDTH = 1,
         unsigned int C_M_AXI_GMEM2_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM2_DATA_WIDTH = 32,
         unsigned int C_M_AXI_GMEM2_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM2_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM2_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM2_BUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM3_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_GMEM3_ID_WIDTH = 1,
         unsigned int C_M_AXI_GMEM3_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM3_DATA_WIDTH = 32,
         unsigned int C_M_AXI_GMEM3_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM3_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM3_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM3_BUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM4_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_GMEM4_ID_WIDTH = 1,
         unsigned int C_M_AXI_GMEM4_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM4_DATA_WIDTH = 32,
         unsigned int C_M_AXI_GMEM4_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM4_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM4_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM4_BUSER_WIDTH = 1>
struct kernel_2mm_wrapper : public sc_module {
    // Port declarations 245
    sc_in< sc_logic > s_axi_for_control_AWVALID;
    sc_out< sc_logic > s_axi_for_control_AWREADY;
    sc_in< sc_uint<C_S_AXI_FOR_CONTROL_ADDR_WIDTH> > s_axi_for_control_AWADDR;
    sc_in< sc_logic > s_axi_for_control_WVALID;
    sc_out< sc_logic > s_axi_for_control_WREADY;
    sc_in< sc_uint<C_S_AXI_FOR_CONTROL_DATA_WIDTH> > s_axi_for_control_WDATA;
    sc_in< sc_uint<C_S_AXI_FOR_CONTROL_DATA_WIDTH/8> > s_axi_for_control_WSTRB;
    sc_in< sc_logic > s_axi_for_control_ARVALID;
    sc_out< sc_logic > s_axi_for_control_ARREADY;
    sc_in< sc_uint<C_S_AXI_FOR_CONTROL_ADDR_WIDTH> > s_axi_for_control_ARADDR;
    sc_out< sc_logic > s_axi_for_control_RVALID;
    sc_in< sc_logic > s_axi_for_control_RREADY;
    sc_out< sc_uint<C_S_AXI_FOR_CONTROL_DATA_WIDTH> > s_axi_for_control_RDATA;
    sc_out< sc_lv<2> > s_axi_for_control_RRESP;
    sc_out< sc_logic > s_axi_for_control_BVALID;
    sc_in< sc_logic > s_axi_for_control_BREADY;
    sc_out< sc_lv<2> > s_axi_for_control_BRESP;
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_out< sc_logic > interrupt;
    sc_out< sc_logic > m_axi_gmem0_AWVALID;
    sc_in< sc_logic > m_axi_gmem0_AWREADY;
    sc_out< sc_uint<C_M_AXI_GMEM0_ADDR_WIDTH> > m_axi_gmem0_AWADDR;
    sc_out< sc_uint<C_M_AXI_GMEM0_ID_WIDTH> > m_axi_gmem0_AWID;
    sc_out< sc_lv<8> > m_axi_gmem0_AWLEN;
    sc_out< sc_lv<3> > m_axi_gmem0_AWSIZE;
    sc_out< sc_lv<2> > m_axi_gmem0_AWBURST;
    sc_out< sc_lv<2> > m_axi_gmem0_AWLOCK;
    sc_out< sc_lv<4> > m_axi_gmem0_AWCACHE;
    sc_out< sc_lv<3> > m_axi_gmem0_AWPROT;
    sc_out< sc_lv<4> > m_axi_gmem0_AWQOS;
    sc_out< sc_lv<4> > m_axi_gmem0_AWREGION;
    sc_out< sc_uint<C_M_AXI_GMEM0_AWUSER_WIDTH> > m_axi_gmem0_AWUSER;
    sc_out< sc_logic > m_axi_gmem0_WVALID;
    sc_in< sc_logic > m_axi_gmem0_WREADY;
    sc_out< sc_uint<C_M_AXI_GMEM0_DATA_WIDTH> > m_axi_gmem0_WDATA;
    sc_out< sc_uint<C_M_AXI_GMEM0_DATA_WIDTH/8> > m_axi_gmem0_WSTRB;
    sc_out< sc_logic > m_axi_gmem0_WLAST;
    sc_out< sc_uint<C_M_AXI_GMEM0_ID_WIDTH> > m_axi_gmem0_WID;
    sc_out< sc_uint<C_M_AXI_GMEM0_WUSER_WIDTH> > m_axi_gmem0_WUSER;
    sc_out< sc_logic > m_axi_gmem0_ARVALID;
    sc_in< sc_logic > m_axi_gmem0_ARREADY;
    sc_out< sc_uint<C_M_AXI_GMEM0_ADDR_WIDTH> > m_axi_gmem0_ARADDR;
    sc_out< sc_uint<C_M_AXI_GMEM0_ID_WIDTH> > m_axi_gmem0_ARID;
    sc_out< sc_lv<8> > m_axi_gmem0_ARLEN;
    sc_out< sc_lv<3> > m_axi_gmem0_ARSIZE;
    sc_out< sc_lv<2> > m_axi_gmem0_ARBURST;
    sc_out< sc_lv<2> > m_axi_gmem0_ARLOCK;
    sc_out< sc_lv<4> > m_axi_gmem0_ARCACHE;
    sc_out< sc_lv<3> > m_axi_gmem0_ARPROT;
    sc_out< sc_lv<4> > m_axi_gmem0_ARQOS;
    sc_out< sc_lv<4> > m_axi_gmem0_ARREGION;
    sc_out< sc_uint<C_M_AXI_GMEM0_ARUSER_WIDTH> > m_axi_gmem0_ARUSER;
    sc_in< sc_logic > m_axi_gmem0_RVALID;
    sc_out< sc_logic > m_axi_gmem0_RREADY;
    sc_in< sc_uint<C_M_AXI_GMEM0_DATA_WIDTH> > m_axi_gmem0_RDATA;
    sc_in< sc_logic > m_axi_gmem0_RLAST;
    sc_in< sc_uint<C_M_AXI_GMEM0_ID_WIDTH> > m_axi_gmem0_RID;
    sc_in< sc_uint<C_M_AXI_GMEM0_RUSER_WIDTH> > m_axi_gmem0_RUSER;
    sc_in< sc_lv<2> > m_axi_gmem0_RRESP;
    sc_in< sc_logic > m_axi_gmem0_BVALID;
    sc_out< sc_logic > m_axi_gmem0_BREADY;
    sc_in< sc_lv<2> > m_axi_gmem0_BRESP;
    sc_in< sc_uint<C_M_AXI_GMEM0_ID_WIDTH> > m_axi_gmem0_BID;
    sc_in< sc_uint<C_M_AXI_GMEM0_BUSER_WIDTH> > m_axi_gmem0_BUSER;
    sc_out< sc_logic > m_axi_gmem1_AWVALID;
    sc_in< sc_logic > m_axi_gmem1_AWREADY;
    sc_out< sc_uint<C_M_AXI_GMEM1_ADDR_WIDTH> > m_axi_gmem1_AWADDR;
    sc_out< sc_uint<C_M_AXI_GMEM1_ID_WIDTH> > m_axi_gmem1_AWID;
    sc_out< sc_lv<8> > m_axi_gmem1_AWLEN;
    sc_out< sc_lv<3> > m_axi_gmem1_AWSIZE;
    sc_out< sc_lv<2> > m_axi_gmem1_AWBURST;
    sc_out< sc_lv<2> > m_axi_gmem1_AWLOCK;
    sc_out< sc_lv<4> > m_axi_gmem1_AWCACHE;
    sc_out< sc_lv<3> > m_axi_gmem1_AWPROT;
    sc_out< sc_lv<4> > m_axi_gmem1_AWQOS;
    sc_out< sc_lv<4> > m_axi_gmem1_AWREGION;
    sc_out< sc_uint<C_M_AXI_GMEM1_AWUSER_WIDTH> > m_axi_gmem1_AWUSER;
    sc_out< sc_logic > m_axi_gmem1_WVALID;
    sc_in< sc_logic > m_axi_gmem1_WREADY;
    sc_out< sc_uint<C_M_AXI_GMEM1_DATA_WIDTH> > m_axi_gmem1_WDATA;
    sc_out< sc_uint<C_M_AXI_GMEM1_DATA_WIDTH/8> > m_axi_gmem1_WSTRB;
    sc_out< sc_logic > m_axi_gmem1_WLAST;
    sc_out< sc_uint<C_M_AXI_GMEM1_ID_WIDTH> > m_axi_gmem1_WID;
    sc_out< sc_uint<C_M_AXI_GMEM1_WUSER_WIDTH> > m_axi_gmem1_WUSER;
    sc_out< sc_logic > m_axi_gmem1_ARVALID;
    sc_in< sc_logic > m_axi_gmem1_ARREADY;
    sc_out< sc_uint<C_M_AXI_GMEM1_ADDR_WIDTH> > m_axi_gmem1_ARADDR;
    sc_out< sc_uint<C_M_AXI_GMEM1_ID_WIDTH> > m_axi_gmem1_ARID;
    sc_out< sc_lv<8> > m_axi_gmem1_ARLEN;
    sc_out< sc_lv<3> > m_axi_gmem1_ARSIZE;
    sc_out< sc_lv<2> > m_axi_gmem1_ARBURST;
    sc_out< sc_lv<2> > m_axi_gmem1_ARLOCK;
    sc_out< sc_lv<4> > m_axi_gmem1_ARCACHE;
    sc_out< sc_lv<3> > m_axi_gmem1_ARPROT;
    sc_out< sc_lv<4> > m_axi_gmem1_ARQOS;
    sc_out< sc_lv<4> > m_axi_gmem1_ARREGION;
    sc_out< sc_uint<C_M_AXI_GMEM1_ARUSER_WIDTH> > m_axi_gmem1_ARUSER;
    sc_in< sc_logic > m_axi_gmem1_RVALID;
    sc_out< sc_logic > m_axi_gmem1_RREADY;
    sc_in< sc_uint<C_M_AXI_GMEM1_DATA_WIDTH> > m_axi_gmem1_RDATA;
    sc_in< sc_logic > m_axi_gmem1_RLAST;
    sc_in< sc_uint<C_M_AXI_GMEM1_ID_WIDTH> > m_axi_gmem1_RID;
    sc_in< sc_uint<C_M_AXI_GMEM1_RUSER_WIDTH> > m_axi_gmem1_RUSER;
    sc_in< sc_lv<2> > m_axi_gmem1_RRESP;
    sc_in< sc_logic > m_axi_gmem1_BVALID;
    sc_out< sc_logic > m_axi_gmem1_BREADY;
    sc_in< sc_lv<2> > m_axi_gmem1_BRESP;
    sc_in< sc_uint<C_M_AXI_GMEM1_ID_WIDTH> > m_axi_gmem1_BID;
    sc_in< sc_uint<C_M_AXI_GMEM1_BUSER_WIDTH> > m_axi_gmem1_BUSER;
    sc_out< sc_logic > m_axi_gmem2_AWVALID;
    sc_in< sc_logic > m_axi_gmem2_AWREADY;
    sc_out< sc_uint<C_M_AXI_GMEM2_ADDR_WIDTH> > m_axi_gmem2_AWADDR;
    sc_out< sc_uint<C_M_AXI_GMEM2_ID_WIDTH> > m_axi_gmem2_AWID;
    sc_out< sc_lv<8> > m_axi_gmem2_AWLEN;
    sc_out< sc_lv<3> > m_axi_gmem2_AWSIZE;
    sc_out< sc_lv<2> > m_axi_gmem2_AWBURST;
    sc_out< sc_lv<2> > m_axi_gmem2_AWLOCK;
    sc_out< sc_lv<4> > m_axi_gmem2_AWCACHE;
    sc_out< sc_lv<3> > m_axi_gmem2_AWPROT;
    sc_out< sc_lv<4> > m_axi_gmem2_AWQOS;
    sc_out< sc_lv<4> > m_axi_gmem2_AWREGION;
    sc_out< sc_uint<C_M_AXI_GMEM2_AWUSER_WIDTH> > m_axi_gmem2_AWUSER;
    sc_out< sc_logic > m_axi_gmem2_WVALID;
    sc_in< sc_logic > m_axi_gmem2_WREADY;
    sc_out< sc_uint<C_M_AXI_GMEM2_DATA_WIDTH> > m_axi_gmem2_WDATA;
    sc_out< sc_uint<C_M_AXI_GMEM2_DATA_WIDTH/8> > m_axi_gmem2_WSTRB;
    sc_out< sc_logic > m_axi_gmem2_WLAST;
    sc_out< sc_uint<C_M_AXI_GMEM2_ID_WIDTH> > m_axi_gmem2_WID;
    sc_out< sc_uint<C_M_AXI_GMEM2_WUSER_WIDTH> > m_axi_gmem2_WUSER;
    sc_out< sc_logic > m_axi_gmem2_ARVALID;
    sc_in< sc_logic > m_axi_gmem2_ARREADY;
    sc_out< sc_uint<C_M_AXI_GMEM2_ADDR_WIDTH> > m_axi_gmem2_ARADDR;
    sc_out< sc_uint<C_M_AXI_GMEM2_ID_WIDTH> > m_axi_gmem2_ARID;
    sc_out< sc_lv<8> > m_axi_gmem2_ARLEN;
    sc_out< sc_lv<3> > m_axi_gmem2_ARSIZE;
    sc_out< sc_lv<2> > m_axi_gmem2_ARBURST;
    sc_out< sc_lv<2> > m_axi_gmem2_ARLOCK;
    sc_out< sc_lv<4> > m_axi_gmem2_ARCACHE;
    sc_out< sc_lv<3> > m_axi_gmem2_ARPROT;
    sc_out< sc_lv<4> > m_axi_gmem2_ARQOS;
    sc_out< sc_lv<4> > m_axi_gmem2_ARREGION;
    sc_out< sc_uint<C_M_AXI_GMEM2_ARUSER_WIDTH> > m_axi_gmem2_ARUSER;
    sc_in< sc_logic > m_axi_gmem2_RVALID;
    sc_out< sc_logic > m_axi_gmem2_RREADY;
    sc_in< sc_uint<C_M_AXI_GMEM2_DATA_WIDTH> > m_axi_gmem2_RDATA;
    sc_in< sc_logic > m_axi_gmem2_RLAST;
    sc_in< sc_uint<C_M_AXI_GMEM2_ID_WIDTH> > m_axi_gmem2_RID;
    sc_in< sc_uint<C_M_AXI_GMEM2_RUSER_WIDTH> > m_axi_gmem2_RUSER;
    sc_in< sc_lv<2> > m_axi_gmem2_RRESP;
    sc_in< sc_logic > m_axi_gmem2_BVALID;
    sc_out< sc_logic > m_axi_gmem2_BREADY;
    sc_in< sc_lv<2> > m_axi_gmem2_BRESP;
    sc_in< sc_uint<C_M_AXI_GMEM2_ID_WIDTH> > m_axi_gmem2_BID;
    sc_in< sc_uint<C_M_AXI_GMEM2_BUSER_WIDTH> > m_axi_gmem2_BUSER;
    sc_out< sc_logic > m_axi_gmem3_AWVALID;
    sc_in< sc_logic > m_axi_gmem3_AWREADY;
    sc_out< sc_uint<C_M_AXI_GMEM3_ADDR_WIDTH> > m_axi_gmem3_AWADDR;
    sc_out< sc_uint<C_M_AXI_GMEM3_ID_WIDTH> > m_axi_gmem3_AWID;
    sc_out< sc_lv<8> > m_axi_gmem3_AWLEN;
    sc_out< sc_lv<3> > m_axi_gmem3_AWSIZE;
    sc_out< sc_lv<2> > m_axi_gmem3_AWBURST;
    sc_out< sc_lv<2> > m_axi_gmem3_AWLOCK;
    sc_out< sc_lv<4> > m_axi_gmem3_AWCACHE;
    sc_out< sc_lv<3> > m_axi_gmem3_AWPROT;
    sc_out< sc_lv<4> > m_axi_gmem3_AWQOS;
    sc_out< sc_lv<4> > m_axi_gmem3_AWREGION;
    sc_out< sc_uint<C_M_AXI_GMEM3_AWUSER_WIDTH> > m_axi_gmem3_AWUSER;
    sc_out< sc_logic > m_axi_gmem3_WVALID;
    sc_in< sc_logic > m_axi_gmem3_WREADY;
    sc_out< sc_uint<C_M_AXI_GMEM3_DATA_WIDTH> > m_axi_gmem3_WDATA;
    sc_out< sc_uint<C_M_AXI_GMEM3_DATA_WIDTH/8> > m_axi_gmem3_WSTRB;
    sc_out< sc_logic > m_axi_gmem3_WLAST;
    sc_out< sc_uint<C_M_AXI_GMEM3_ID_WIDTH> > m_axi_gmem3_WID;
    sc_out< sc_uint<C_M_AXI_GMEM3_WUSER_WIDTH> > m_axi_gmem3_WUSER;
    sc_out< sc_logic > m_axi_gmem3_ARVALID;
    sc_in< sc_logic > m_axi_gmem3_ARREADY;
    sc_out< sc_uint<C_M_AXI_GMEM3_ADDR_WIDTH> > m_axi_gmem3_ARADDR;
    sc_out< sc_uint<C_M_AXI_GMEM3_ID_WIDTH> > m_axi_gmem3_ARID;
    sc_out< sc_lv<8> > m_axi_gmem3_ARLEN;
    sc_out< sc_lv<3> > m_axi_gmem3_ARSIZE;
    sc_out< sc_lv<2> > m_axi_gmem3_ARBURST;
    sc_out< sc_lv<2> > m_axi_gmem3_ARLOCK;
    sc_out< sc_lv<4> > m_axi_gmem3_ARCACHE;
    sc_out< sc_lv<3> > m_axi_gmem3_ARPROT;
    sc_out< sc_lv<4> > m_axi_gmem3_ARQOS;
    sc_out< sc_lv<4> > m_axi_gmem3_ARREGION;
    sc_out< sc_uint<C_M_AXI_GMEM3_ARUSER_WIDTH> > m_axi_gmem3_ARUSER;
    sc_in< sc_logic > m_axi_gmem3_RVALID;
    sc_out< sc_logic > m_axi_gmem3_RREADY;
    sc_in< sc_uint<C_M_AXI_GMEM3_DATA_WIDTH> > m_axi_gmem3_RDATA;
    sc_in< sc_logic > m_axi_gmem3_RLAST;
    sc_in< sc_uint<C_M_AXI_GMEM3_ID_WIDTH> > m_axi_gmem3_RID;
    sc_in< sc_uint<C_M_AXI_GMEM3_RUSER_WIDTH> > m_axi_gmem3_RUSER;
    sc_in< sc_lv<2> > m_axi_gmem3_RRESP;
    sc_in< sc_logic > m_axi_gmem3_BVALID;
    sc_out< sc_logic > m_axi_gmem3_BREADY;
    sc_in< sc_lv<2> > m_axi_gmem3_BRESP;
    sc_in< sc_uint<C_M_AXI_GMEM3_ID_WIDTH> > m_axi_gmem3_BID;
    sc_in< sc_uint<C_M_AXI_GMEM3_BUSER_WIDTH> > m_axi_gmem3_BUSER;
    sc_out< sc_logic > m_axi_gmem4_AWVALID;
    sc_in< sc_logic > m_axi_gmem4_AWREADY;
    sc_out< sc_uint<C_M_AXI_GMEM4_ADDR_WIDTH> > m_axi_gmem4_AWADDR;
    sc_out< sc_uint<C_M_AXI_GMEM4_ID_WIDTH> > m_axi_gmem4_AWID;
    sc_out< sc_lv<8> > m_axi_gmem4_AWLEN;
    sc_out< sc_lv<3> > m_axi_gmem4_AWSIZE;
    sc_out< sc_lv<2> > m_axi_gmem4_AWBURST;
    sc_out< sc_lv<2> > m_axi_gmem4_AWLOCK;
    sc_out< sc_lv<4> > m_axi_gmem4_AWCACHE;
    sc_out< sc_lv<3> > m_axi_gmem4_AWPROT;
    sc_out< sc_lv<4> > m_axi_gmem4_AWQOS;
    sc_out< sc_lv<4> > m_axi_gmem4_AWREGION;
    sc_out< sc_uint<C_M_AXI_GMEM4_AWUSER_WIDTH> > m_axi_gmem4_AWUSER;
    sc_out< sc_logic > m_axi_gmem4_WVALID;
    sc_in< sc_logic > m_axi_gmem4_WREADY;
    sc_out< sc_uint<C_M_AXI_GMEM4_DATA_WIDTH> > m_axi_gmem4_WDATA;
    sc_out< sc_uint<C_M_AXI_GMEM4_DATA_WIDTH/8> > m_axi_gmem4_WSTRB;
    sc_out< sc_logic > m_axi_gmem4_WLAST;
    sc_out< sc_uint<C_M_AXI_GMEM4_ID_WIDTH> > m_axi_gmem4_WID;
    sc_out< sc_uint<C_M_AXI_GMEM4_WUSER_WIDTH> > m_axi_gmem4_WUSER;
    sc_out< sc_logic > m_axi_gmem4_ARVALID;
    sc_in< sc_logic > m_axi_gmem4_ARREADY;
    sc_out< sc_uint<C_M_AXI_GMEM4_ADDR_WIDTH> > m_axi_gmem4_ARADDR;
    sc_out< sc_uint<C_M_AXI_GMEM4_ID_WIDTH> > m_axi_gmem4_ARID;
    sc_out< sc_lv<8> > m_axi_gmem4_ARLEN;
    sc_out< sc_lv<3> > m_axi_gmem4_ARSIZE;
    sc_out< sc_lv<2> > m_axi_gmem4_ARBURST;
    sc_out< sc_lv<2> > m_axi_gmem4_ARLOCK;
    sc_out< sc_lv<4> > m_axi_gmem4_ARCACHE;
    sc_out< sc_lv<3> > m_axi_gmem4_ARPROT;
    sc_out< sc_lv<4> > m_axi_gmem4_ARQOS;
    sc_out< sc_lv<4> > m_axi_gmem4_ARREGION;
    sc_out< sc_uint<C_M_AXI_GMEM4_ARUSER_WIDTH> > m_axi_gmem4_ARUSER;
    sc_in< sc_logic > m_axi_gmem4_RVALID;
    sc_out< sc_logic > m_axi_gmem4_RREADY;
    sc_in< sc_uint<C_M_AXI_GMEM4_DATA_WIDTH> > m_axi_gmem4_RDATA;
    sc_in< sc_logic > m_axi_gmem4_RLAST;
    sc_in< sc_uint<C_M_AXI_GMEM4_ID_WIDTH> > m_axi_gmem4_RID;
    sc_in< sc_uint<C_M_AXI_GMEM4_RUSER_WIDTH> > m_axi_gmem4_RUSER;
    sc_in< sc_lv<2> > m_axi_gmem4_RRESP;
    sc_in< sc_logic > m_axi_gmem4_BVALID;
    sc_out< sc_logic > m_axi_gmem4_BREADY;
    sc_in< sc_lv<2> > m_axi_gmem4_BRESP;
    sc_in< sc_uint<C_M_AXI_GMEM4_ID_WIDTH> > m_axi_gmem4_BID;
    sc_in< sc_uint<C_M_AXI_GMEM4_BUSER_WIDTH> > m_axi_gmem4_BUSER;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_logic > ap_var_for_const1;
    sc_signal< sc_lv<32> > ap_var_for_const2;
    sc_signal< sc_lv<1> > ap_var_for_const3;
    sc_signal< sc_lv<3> > ap_var_for_const4;
    sc_signal< sc_lv<2> > ap_var_for_const5;
    sc_signal< sc_lv<4> > ap_var_for_const6;


    // Module declarations
    kernel_2mm_wrapper(sc_module_name name);
    SC_HAS_PROCESS(kernel_2mm_wrapper);

    ~kernel_2mm_wrapper();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    kernel_2mm_wrapper_for_control_s_axi<C_S_AXI_FOR_CONTROL_ADDR_WIDTH,C_S_AXI_FOR_CONTROL_DATA_WIDTH>* kernel_2mm_wrapper_for_control_s_axi_U;
    kernel_2mm_wrapper_gmem0_m_axi<0,32,32,5,16,16,16,16,C_M_AXI_GMEM0_ID_WIDTH,C_M_AXI_GMEM0_ADDR_WIDTH,C_M_AXI_GMEM0_DATA_WIDTH,C_M_AXI_GMEM0_AWUSER_WIDTH,C_M_AXI_GMEM0_ARUSER_WIDTH,C_M_AXI_GMEM0_WUSER_WIDTH,C_M_AXI_GMEM0_RUSER_WIDTH,C_M_AXI_GMEM0_BUSER_WIDTH,C_M_AXI_GMEM0_USER_VALUE,C_M_AXI_GMEM0_PROT_VALUE,C_M_AXI_GMEM0_CACHE_VALUE>* kernel_2mm_wrapper_gmem0_m_axi_U;
    kernel_2mm_wrapper_gmem1_m_axi<0,32,32,5,16,16,16,16,C_M_AXI_GMEM1_ID_WIDTH,C_M_AXI_GMEM1_ADDR_WIDTH,C_M_AXI_GMEM1_DATA_WIDTH,C_M_AXI_GMEM1_AWUSER_WIDTH,C_M_AXI_GMEM1_ARUSER_WIDTH,C_M_AXI_GMEM1_WUSER_WIDTH,C_M_AXI_GMEM1_RUSER_WIDTH,C_M_AXI_GMEM1_BUSER_WIDTH,C_M_AXI_GMEM1_USER_VALUE,C_M_AXI_GMEM1_PROT_VALUE,C_M_AXI_GMEM1_CACHE_VALUE>* kernel_2mm_wrapper_gmem1_m_axi_U;
    kernel_2mm_wrapper_gmem2_m_axi<0,32,32,5,16,16,16,16,C_M_AXI_GMEM2_ID_WIDTH,C_M_AXI_GMEM2_ADDR_WIDTH,C_M_AXI_GMEM2_DATA_WIDTH,C_M_AXI_GMEM2_AWUSER_WIDTH,C_M_AXI_GMEM2_ARUSER_WIDTH,C_M_AXI_GMEM2_WUSER_WIDTH,C_M_AXI_GMEM2_RUSER_WIDTH,C_M_AXI_GMEM2_BUSER_WIDTH,C_M_AXI_GMEM2_USER_VALUE,C_M_AXI_GMEM2_PROT_VALUE,C_M_AXI_GMEM2_CACHE_VALUE>* kernel_2mm_wrapper_gmem2_m_axi_U;
    kernel_2mm_wrapper_gmem3_m_axi<0,32,32,5,16,16,16,16,C_M_AXI_GMEM3_ID_WIDTH,C_M_AXI_GMEM3_ADDR_WIDTH,C_M_AXI_GMEM3_DATA_WIDTH,C_M_AXI_GMEM3_AWUSER_WIDTH,C_M_AXI_GMEM3_ARUSER_WIDTH,C_M_AXI_GMEM3_WUSER_WIDTH,C_M_AXI_GMEM3_RUSER_WIDTH,C_M_AXI_GMEM3_BUSER_WIDTH,C_M_AXI_GMEM3_USER_VALUE,C_M_AXI_GMEM3_PROT_VALUE,C_M_AXI_GMEM3_CACHE_VALUE>* kernel_2mm_wrapper_gmem3_m_axi_U;
    kernel_2mm_wrapper_gmem4_m_axi<0,32,32,5,16,16,16,16,C_M_AXI_GMEM4_ID_WIDTH,C_M_AXI_GMEM4_ADDR_WIDTH,C_M_AXI_GMEM4_DATA_WIDTH,C_M_AXI_GMEM4_AWUSER_WIDTH,C_M_AXI_GMEM4_ARUSER_WIDTH,C_M_AXI_GMEM4_WUSER_WIDTH,C_M_AXI_GMEM4_RUSER_WIDTH,C_M_AXI_GMEM4_BUSER_WIDTH,C_M_AXI_GMEM4_USER_VALUE,C_M_AXI_GMEM4_PROT_VALUE,C_M_AXI_GMEM4_CACHE_VALUE>* kernel_2mm_wrapper_gmem4_m_axi_U;
    kernel_2mm_wrappemb6* A_0_U;
    kernel_2mm_wrappemb6* A_1_U;
    kernel_2mm_wrappeocq* B_0_U;
    kernel_2mm_wrappeocq* B_1_U;
    kernel_2mm_wrappeqcK* C_0_U;
    kernel_2mm_wrappeqcK* C_1_U;
    kernel_2mm_wrappesc4* C_2_U;
    kernel_2mm_wrappesc4* C_3_U;
    kernel_2mm_wrappesc4* C_4_U;
    kernel_2mm_wrappesc4* C_5_U;
    kernel_2mm_wrappesc4* C_6_U;
    kernel_2mm_wrappesc4* C_7_U;
    kernel_2mm_wrappeyd2* D_U;
    kernel_2mm_wrappeyd2* D_output_U;
    readData32* readData32_U0;
    kernel_2mm* kernel_2mm_U0;
    writeData* writeData_U0;
    fifo_w32_d3_A* D_output_AXI_c_U;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<32> > A_AXI;
    sc_signal< sc_lv<32> > B_AXI;
    sc_signal< sc_lv<32> > C_AXI;
    sc_signal< sc_lv<32> > D_input_AXI;
    sc_signal< sc_lv<32> > D_output_AXI;
    sc_signal< sc_logic > gmem0_AWREADY;
    sc_signal< sc_logic > gmem0_WREADY;
    sc_signal< sc_logic > gmem0_ARREADY;
    sc_signal< sc_logic > gmem0_RVALID;
    sc_signal< sc_lv<32> > gmem0_RDATA;
    sc_signal< sc_logic > gmem0_RLAST;
    sc_signal< sc_lv<1> > gmem0_RID;
    sc_signal< sc_lv<1> > gmem0_RUSER;
    sc_signal< sc_lv<2> > gmem0_RRESP;
    sc_signal< sc_logic > gmem0_BVALID;
    sc_signal< sc_lv<2> > gmem0_BRESP;
    sc_signal< sc_lv<1> > gmem0_BID;
    sc_signal< sc_lv<1> > gmem0_BUSER;
    sc_signal< sc_logic > gmem1_AWREADY;
    sc_signal< sc_logic > gmem1_WREADY;
    sc_signal< sc_logic > gmem1_ARREADY;
    sc_signal< sc_logic > gmem1_RVALID;
    sc_signal< sc_lv<32> > gmem1_RDATA;
    sc_signal< sc_logic > gmem1_RLAST;
    sc_signal< sc_lv<1> > gmem1_RID;
    sc_signal< sc_lv<1> > gmem1_RUSER;
    sc_signal< sc_lv<2> > gmem1_RRESP;
    sc_signal< sc_logic > gmem1_BVALID;
    sc_signal< sc_lv<2> > gmem1_BRESP;
    sc_signal< sc_lv<1> > gmem1_BID;
    sc_signal< sc_lv<1> > gmem1_BUSER;
    sc_signal< sc_logic > gmem2_AWREADY;
    sc_signal< sc_logic > gmem2_WREADY;
    sc_signal< sc_logic > gmem2_ARREADY;
    sc_signal< sc_logic > gmem2_RVALID;
    sc_signal< sc_lv<32> > gmem2_RDATA;
    sc_signal< sc_logic > gmem2_RLAST;
    sc_signal< sc_lv<1> > gmem2_RID;
    sc_signal< sc_lv<1> > gmem2_RUSER;
    sc_signal< sc_lv<2> > gmem2_RRESP;
    sc_signal< sc_logic > gmem2_BVALID;
    sc_signal< sc_lv<2> > gmem2_BRESP;
    sc_signal< sc_lv<1> > gmem2_BID;
    sc_signal< sc_lv<1> > gmem2_BUSER;
    sc_signal< sc_logic > gmem3_AWREADY;
    sc_signal< sc_logic > gmem3_WREADY;
    sc_signal< sc_logic > gmem3_ARREADY;
    sc_signal< sc_logic > gmem3_RVALID;
    sc_signal< sc_lv<32> > gmem3_RDATA;
    sc_signal< sc_logic > gmem3_RLAST;
    sc_signal< sc_lv<1> > gmem3_RID;
    sc_signal< sc_lv<1> > gmem3_RUSER;
    sc_signal< sc_lv<2> > gmem3_RRESP;
    sc_signal< sc_logic > gmem3_BVALID;
    sc_signal< sc_lv<2> > gmem3_BRESP;
    sc_signal< sc_lv<1> > gmem3_BID;
    sc_signal< sc_lv<1> > gmem3_BUSER;
    sc_signal< sc_logic > gmem4_AWREADY;
    sc_signal< sc_logic > gmem4_WREADY;
    sc_signal< sc_logic > gmem4_ARREADY;
    sc_signal< sc_logic > gmem4_RVALID;
    sc_signal< sc_lv<32> > gmem4_RDATA;
    sc_signal< sc_logic > gmem4_RLAST;
    sc_signal< sc_lv<1> > gmem4_RID;
    sc_signal< sc_lv<1> > gmem4_RUSER;
    sc_signal< sc_lv<2> > gmem4_RRESP;
    sc_signal< sc_logic > gmem4_BVALID;
    sc_signal< sc_lv<2> > gmem4_BRESP;
    sc_signal< sc_lv<1> > gmem4_BID;
    sc_signal< sc_lv<1> > gmem4_BUSER;
    sc_signal< sc_lv<32> > A_0_i_q0;
    sc_signal< sc_lv<32> > A_0_t_q0;
    sc_signal< sc_lv<32> > A_1_i_q0;
    sc_signal< sc_lv<32> > A_1_t_q0;
    sc_signal< sc_lv<32> > B_0_i_q0;
    sc_signal< sc_lv<32> > B_0_t_q0;
    sc_signal< sc_lv<32> > B_1_i_q0;
    sc_signal< sc_lv<32> > B_1_t_q0;
    sc_signal< sc_lv<32> > C_0_i_q0;
    sc_signal< sc_lv<32> > C_0_t_q0;
    sc_signal< sc_lv<32> > C_1_i_q0;
    sc_signal< sc_lv<32> > C_1_t_q0;
    sc_signal< sc_lv<32> > C_2_i_q0;
    sc_signal< sc_lv<32> > C_2_t_q0;
    sc_signal< sc_lv<32> > C_3_i_q0;
    sc_signal< sc_lv<32> > C_3_t_q0;
    sc_signal< sc_lv<32> > C_4_i_q0;
    sc_signal< sc_lv<32> > C_4_t_q0;
    sc_signal< sc_lv<32> > C_5_i_q0;
    sc_signal< sc_lv<32> > C_5_t_q0;
    sc_signal< sc_lv<32> > C_6_i_q0;
    sc_signal< sc_lv<32> > C_6_t_q0;
    sc_signal< sc_lv<32> > C_7_i_q0;
    sc_signal< sc_lv<32> > C_7_t_q0;
    sc_signal< sc_lv<32> > D_i_q0;
    sc_signal< sc_lv<32> > D_t_q0;
    sc_signal< sc_lv<32> > D_output_i_q0;
    sc_signal< sc_lv<32> > D_output_t_q0;
    sc_signal< sc_logic > readData32_U0_ap_start;
    sc_signal< sc_logic > readData32_U0_ap_done;
    sc_signal< sc_logic > readData32_U0_ap_continue;
    sc_signal< sc_logic > readData32_U0_ap_idle;
    sc_signal< sc_logic > readData32_U0_ap_ready;
    sc_signal< sc_logic > readData32_U0_m_axi_A_AXI_AWVALID;
    sc_signal< sc_lv<32> > readData32_U0_m_axi_A_AXI_AWADDR;
    sc_signal< sc_lv<1> > readData32_U0_m_axi_A_AXI_AWID;
    sc_signal< sc_lv<32> > readData32_U0_m_axi_A_AXI_AWLEN;
    sc_signal< sc_lv<3> > readData32_U0_m_axi_A_AXI_AWSIZE;
    sc_signal< sc_lv<2> > readData32_U0_m_axi_A_AXI_AWBURST;
    sc_signal< sc_lv<2> > readData32_U0_m_axi_A_AXI_AWLOCK;
    sc_signal< sc_lv<4> > readData32_U0_m_axi_A_AXI_AWCACHE;
    sc_signal< sc_lv<3> > readData32_U0_m_axi_A_AXI_AWPROT;
    sc_signal< sc_lv<4> > readData32_U0_m_axi_A_AXI_AWQOS;
    sc_signal< sc_lv<4> > readData32_U0_m_axi_A_AXI_AWREGION;
    sc_signal< sc_lv<1> > readData32_U0_m_axi_A_AXI_AWUSER;
    sc_signal< sc_logic > readData32_U0_m_axi_A_AXI_WVALID;
    sc_signal< sc_lv<32> > readData32_U0_m_axi_A_AXI_WDATA;
    sc_signal< sc_lv<4> > readData32_U0_m_axi_A_AXI_WSTRB;
    sc_signal< sc_logic > readData32_U0_m_axi_A_AXI_WLAST;
    sc_signal< sc_lv<1> > readData32_U0_m_axi_A_AXI_WID;
    sc_signal< sc_lv<1> > readData32_U0_m_axi_A_AXI_WUSER;
    sc_signal< sc_logic > readData32_U0_m_axi_A_AXI_ARVALID;
    sc_signal< sc_lv<32> > readData32_U0_m_axi_A_AXI_ARADDR;
    sc_signal< sc_lv<1> > readData32_U0_m_axi_A_AXI_ARID;
    sc_signal< sc_lv<32> > readData32_U0_m_axi_A_AXI_ARLEN;
    sc_signal< sc_lv<3> > readData32_U0_m_axi_A_AXI_ARSIZE;
    sc_signal< sc_lv<2> > readData32_U0_m_axi_A_AXI_ARBURST;
    sc_signal< sc_lv<2> > readData32_U0_m_axi_A_AXI_ARLOCK;
    sc_signal< sc_lv<4> > readData32_U0_m_axi_A_AXI_ARCACHE;
    sc_signal< sc_lv<3> > readData32_U0_m_axi_A_AXI_ARPROT;
    sc_signal< sc_lv<4> > readData32_U0_m_axi_A_AXI_ARQOS;
    sc_signal< sc_lv<4> > readData32_U0_m_axi_A_AXI_ARREGION;
    sc_signal< sc_lv<1> > readData32_U0_m_axi_A_AXI_ARUSER;
    sc_signal< sc_logic > readData32_U0_m_axi_A_AXI_RREADY;
    sc_signal< sc_logic > readData32_U0_m_axi_A_AXI_BREADY;
    sc_signal< sc_logic > readData32_U0_m_axi_B_AXI_AWVALID;
    sc_signal< sc_lv<32> > readData32_U0_m_axi_B_AXI_AWADDR;
    sc_signal< sc_lv<1> > readData32_U0_m_axi_B_AXI_AWID;
    sc_signal< sc_lv<32> > readData32_U0_m_axi_B_AXI_AWLEN;
    sc_signal< sc_lv<3> > readData32_U0_m_axi_B_AXI_AWSIZE;
    sc_signal< sc_lv<2> > readData32_U0_m_axi_B_AXI_AWBURST;
    sc_signal< sc_lv<2> > readData32_U0_m_axi_B_AXI_AWLOCK;
    sc_signal< sc_lv<4> > readData32_U0_m_axi_B_AXI_AWCACHE;
    sc_signal< sc_lv<3> > readData32_U0_m_axi_B_AXI_AWPROT;
    sc_signal< sc_lv<4> > readData32_U0_m_axi_B_AXI_AWQOS;
    sc_signal< sc_lv<4> > readData32_U0_m_axi_B_AXI_AWREGION;
    sc_signal< sc_lv<1> > readData32_U0_m_axi_B_AXI_AWUSER;
    sc_signal< sc_logic > readData32_U0_m_axi_B_AXI_WVALID;
    sc_signal< sc_lv<32> > readData32_U0_m_axi_B_AXI_WDATA;
    sc_signal< sc_lv<4> > readData32_U0_m_axi_B_AXI_WSTRB;
    sc_signal< sc_logic > readData32_U0_m_axi_B_AXI_WLAST;
    sc_signal< sc_lv<1> > readData32_U0_m_axi_B_AXI_WID;
    sc_signal< sc_lv<1> > readData32_U0_m_axi_B_AXI_WUSER;
    sc_signal< sc_logic > readData32_U0_m_axi_B_AXI_ARVALID;
    sc_signal< sc_lv<32> > readData32_U0_m_axi_B_AXI_ARADDR;
    sc_signal< sc_lv<1> > readData32_U0_m_axi_B_AXI_ARID;
    sc_signal< sc_lv<32> > readData32_U0_m_axi_B_AXI_ARLEN;
    sc_signal< sc_lv<3> > readData32_U0_m_axi_B_AXI_ARSIZE;
    sc_signal< sc_lv<2> > readData32_U0_m_axi_B_AXI_ARBURST;
    sc_signal< sc_lv<2> > readData32_U0_m_axi_B_AXI_ARLOCK;
    sc_signal< sc_lv<4> > readData32_U0_m_axi_B_AXI_ARCACHE;
    sc_signal< sc_lv<3> > readData32_U0_m_axi_B_AXI_ARPROT;
    sc_signal< sc_lv<4> > readData32_U0_m_axi_B_AXI_ARQOS;
    sc_signal< sc_lv<4> > readData32_U0_m_axi_B_AXI_ARREGION;
    sc_signal< sc_lv<1> > readData32_U0_m_axi_B_AXI_ARUSER;
    sc_signal< sc_logic > readData32_U0_m_axi_B_AXI_RREADY;
    sc_signal< sc_logic > readData32_U0_m_axi_B_AXI_BREADY;
    sc_signal< sc_logic > readData32_U0_m_axi_C_AXI_AWVALID;
    sc_signal< sc_lv<32> > readData32_U0_m_axi_C_AXI_AWADDR;
    sc_signal< sc_lv<1> > readData32_U0_m_axi_C_AXI_AWID;
    sc_signal< sc_lv<32> > readData32_U0_m_axi_C_AXI_AWLEN;
    sc_signal< sc_lv<3> > readData32_U0_m_axi_C_AXI_AWSIZE;
    sc_signal< sc_lv<2> > readData32_U0_m_axi_C_AXI_AWBURST;
    sc_signal< sc_lv<2> > readData32_U0_m_axi_C_AXI_AWLOCK;
    sc_signal< sc_lv<4> > readData32_U0_m_axi_C_AXI_AWCACHE;
    sc_signal< sc_lv<3> > readData32_U0_m_axi_C_AXI_AWPROT;
    sc_signal< sc_lv<4> > readData32_U0_m_axi_C_AXI_AWQOS;
    sc_signal< sc_lv<4> > readData32_U0_m_axi_C_AXI_AWREGION;
    sc_signal< sc_lv<1> > readData32_U0_m_axi_C_AXI_AWUSER;
    sc_signal< sc_logic > readData32_U0_m_axi_C_AXI_WVALID;
    sc_signal< sc_lv<32> > readData32_U0_m_axi_C_AXI_WDATA;
    sc_signal< sc_lv<4> > readData32_U0_m_axi_C_AXI_WSTRB;
    sc_signal< sc_logic > readData32_U0_m_axi_C_AXI_WLAST;
    sc_signal< sc_lv<1> > readData32_U0_m_axi_C_AXI_WID;
    sc_signal< sc_lv<1> > readData32_U0_m_axi_C_AXI_WUSER;
    sc_signal< sc_logic > readData32_U0_m_axi_C_AXI_ARVALID;
    sc_signal< sc_lv<32> > readData32_U0_m_axi_C_AXI_ARADDR;
    sc_signal< sc_lv<1> > readData32_U0_m_axi_C_AXI_ARID;
    sc_signal< sc_lv<32> > readData32_U0_m_axi_C_AXI_ARLEN;
    sc_signal< sc_lv<3> > readData32_U0_m_axi_C_AXI_ARSIZE;
    sc_signal< sc_lv<2> > readData32_U0_m_axi_C_AXI_ARBURST;
    sc_signal< sc_lv<2> > readData32_U0_m_axi_C_AXI_ARLOCK;
    sc_signal< sc_lv<4> > readData32_U0_m_axi_C_AXI_ARCACHE;
    sc_signal< sc_lv<3> > readData32_U0_m_axi_C_AXI_ARPROT;
    sc_signal< sc_lv<4> > readData32_U0_m_axi_C_AXI_ARQOS;
    sc_signal< sc_lv<4> > readData32_U0_m_axi_C_AXI_ARREGION;
    sc_signal< sc_lv<1> > readData32_U0_m_axi_C_AXI_ARUSER;
    sc_signal< sc_logic > readData32_U0_m_axi_C_AXI_RREADY;
    sc_signal< sc_logic > readData32_U0_m_axi_C_AXI_BREADY;
    sc_signal< sc_logic > readData32_U0_m_axi_D_input_AXI_AWVALID;
    sc_signal< sc_lv<32> > readData32_U0_m_axi_D_input_AXI_AWADDR;
    sc_signal< sc_lv<1> > readData32_U0_m_axi_D_input_AXI_AWID;
    sc_signal< sc_lv<32> > readData32_U0_m_axi_D_input_AXI_AWLEN;
    sc_signal< sc_lv<3> > readData32_U0_m_axi_D_input_AXI_AWSIZE;
    sc_signal< sc_lv<2> > readData32_U0_m_axi_D_input_AXI_AWBURST;
    sc_signal< sc_lv<2> > readData32_U0_m_axi_D_input_AXI_AWLOCK;
    sc_signal< sc_lv<4> > readData32_U0_m_axi_D_input_AXI_AWCACHE;
    sc_signal< sc_lv<3> > readData32_U0_m_axi_D_input_AXI_AWPROT;
    sc_signal< sc_lv<4> > readData32_U0_m_axi_D_input_AXI_AWQOS;
    sc_signal< sc_lv<4> > readData32_U0_m_axi_D_input_AXI_AWREGION;
    sc_signal< sc_lv<1> > readData32_U0_m_axi_D_input_AXI_AWUSER;
    sc_signal< sc_logic > readData32_U0_m_axi_D_input_AXI_WVALID;
    sc_signal< sc_lv<32> > readData32_U0_m_axi_D_input_AXI_WDATA;
    sc_signal< sc_lv<4> > readData32_U0_m_axi_D_input_AXI_WSTRB;
    sc_signal< sc_logic > readData32_U0_m_axi_D_input_AXI_WLAST;
    sc_signal< sc_lv<1> > readData32_U0_m_axi_D_input_AXI_WID;
    sc_signal< sc_lv<1> > readData32_U0_m_axi_D_input_AXI_WUSER;
    sc_signal< sc_logic > readData32_U0_m_axi_D_input_AXI_ARVALID;
    sc_signal< sc_lv<32> > readData32_U0_m_axi_D_input_AXI_ARADDR;
    sc_signal< sc_lv<1> > readData32_U0_m_axi_D_input_AXI_ARID;
    sc_signal< sc_lv<32> > readData32_U0_m_axi_D_input_AXI_ARLEN;
    sc_signal< sc_lv<3> > readData32_U0_m_axi_D_input_AXI_ARSIZE;
    sc_signal< sc_lv<2> > readData32_U0_m_axi_D_input_AXI_ARBURST;
    sc_signal< sc_lv<2> > readData32_U0_m_axi_D_input_AXI_ARLOCK;
    sc_signal< sc_lv<4> > readData32_U0_m_axi_D_input_AXI_ARCACHE;
    sc_signal< sc_lv<3> > readData32_U0_m_axi_D_input_AXI_ARPROT;
    sc_signal< sc_lv<4> > readData32_U0_m_axi_D_input_AXI_ARQOS;
    sc_signal< sc_lv<4> > readData32_U0_m_axi_D_input_AXI_ARREGION;
    sc_signal< sc_lv<1> > readData32_U0_m_axi_D_input_AXI_ARUSER;
    sc_signal< sc_logic > readData32_U0_m_axi_D_input_AXI_RREADY;
    sc_signal< sc_logic > readData32_U0_m_axi_D_input_AXI_BREADY;
    sc_signal< sc_lv<8> > readData32_U0_A_0_address0;
    sc_signal< sc_logic > readData32_U0_A_0_ce0;
    sc_signal< sc_logic > readData32_U0_A_0_we0;
    sc_signal< sc_lv<32> > readData32_U0_A_0_d0;
    sc_signal< sc_lv<8> > readData32_U0_A_1_address0;
    sc_signal< sc_logic > readData32_U0_A_1_ce0;
    sc_signal< sc_logic > readData32_U0_A_1_we0;
    sc_signal< sc_lv<32> > readData32_U0_A_1_d0;
    sc_signal< sc_lv<8> > readData32_U0_B_0_address0;
    sc_signal< sc_logic > readData32_U0_B_0_ce0;
    sc_signal< sc_logic > readData32_U0_B_0_we0;
    sc_signal< sc_lv<32> > readData32_U0_B_0_d0;
    sc_signal< sc_lv<8> > readData32_U0_B_1_address0;
    sc_signal< sc_logic > readData32_U0_B_1_ce0;
    sc_signal< sc_logic > readData32_U0_B_1_we0;
    sc_signal< sc_lv<32> > readData32_U0_B_1_d0;
    sc_signal< sc_lv<7> > readData32_U0_C_0_address0;
    sc_signal< sc_logic > readData32_U0_C_0_ce0;
    sc_signal< sc_logic > readData32_U0_C_0_we0;
    sc_signal< sc_lv<32> > readData32_U0_C_0_d0;
    sc_signal< sc_lv<7> > readData32_U0_C_1_address0;
    sc_signal< sc_logic > readData32_U0_C_1_ce0;
    sc_signal< sc_logic > readData32_U0_C_1_we0;
    sc_signal< sc_lv<32> > readData32_U0_C_1_d0;
    sc_signal< sc_lv<6> > readData32_U0_C_2_address0;
    sc_signal< sc_logic > readData32_U0_C_2_ce0;
    sc_signal< sc_logic > readData32_U0_C_2_we0;
    sc_signal< sc_lv<32> > readData32_U0_C_2_d0;
    sc_signal< sc_lv<6> > readData32_U0_C_3_address0;
    sc_signal< sc_logic > readData32_U0_C_3_ce0;
    sc_signal< sc_logic > readData32_U0_C_3_we0;
    sc_signal< sc_lv<32> > readData32_U0_C_3_d0;
    sc_signal< sc_lv<6> > readData32_U0_C_4_address0;
    sc_signal< sc_logic > readData32_U0_C_4_ce0;
    sc_signal< sc_logic > readData32_U0_C_4_we0;
    sc_signal< sc_lv<32> > readData32_U0_C_4_d0;
    sc_signal< sc_lv<6> > readData32_U0_C_5_address0;
    sc_signal< sc_logic > readData32_U0_C_5_ce0;
    sc_signal< sc_logic > readData32_U0_C_5_we0;
    sc_signal< sc_lv<32> > readData32_U0_C_5_d0;
    sc_signal< sc_lv<6> > readData32_U0_C_6_address0;
    sc_signal< sc_logic > readData32_U0_C_6_ce0;
    sc_signal< sc_logic > readData32_U0_C_6_we0;
    sc_signal< sc_lv<32> > readData32_U0_C_6_d0;
    sc_signal< sc_lv<6> > readData32_U0_C_7_address0;
    sc_signal< sc_logic > readData32_U0_C_7_ce0;
    sc_signal< sc_logic > readData32_U0_C_7_we0;
    sc_signal< sc_lv<32> > readData32_U0_C_7_d0;
    sc_signal< sc_lv<9> > readData32_U0_D_address0;
    sc_signal< sc_logic > readData32_U0_D_ce0;
    sc_signal< sc_logic > readData32_U0_D_we0;
    sc_signal< sc_lv<32> > readData32_U0_D_d0;
    sc_signal< sc_lv<32> > readData32_U0_D_output_AXI_out_din;
    sc_signal< sc_logic > readData32_U0_D_output_AXI_out_write;
    sc_signal< sc_logic > ap_channel_done_D;
    sc_signal< sc_logic > readData32_U0_D_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_D;
    sc_signal< sc_logic > ap_sync_channel_write_D;
    sc_signal< sc_logic > ap_channel_done_C_7;
    sc_signal< sc_logic > readData32_U0_C_7_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_C_7;
    sc_signal< sc_logic > ap_sync_channel_write_C_7;
    sc_signal< sc_logic > ap_channel_done_C_6;
    sc_signal< sc_logic > readData32_U0_C_6_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_C_6;
    sc_signal< sc_logic > ap_sync_channel_write_C_6;
    sc_signal< sc_logic > ap_channel_done_C_5;
    sc_signal< sc_logic > readData32_U0_C_5_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_C_5;
    sc_signal< sc_logic > ap_sync_channel_write_C_5;
    sc_signal< sc_logic > ap_channel_done_C_4;
    sc_signal< sc_logic > readData32_U0_C_4_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_C_4;
    sc_signal< sc_logic > ap_sync_channel_write_C_4;
    sc_signal< sc_logic > ap_channel_done_C_3;
    sc_signal< sc_logic > readData32_U0_C_3_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_C_3;
    sc_signal< sc_logic > ap_sync_channel_write_C_3;
    sc_signal< sc_logic > ap_channel_done_C_2;
    sc_signal< sc_logic > readData32_U0_C_2_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_C_2;
    sc_signal< sc_logic > ap_sync_channel_write_C_2;
    sc_signal< sc_logic > ap_channel_done_C_1;
    sc_signal< sc_logic > readData32_U0_C_1_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_C_1;
    sc_signal< sc_logic > ap_sync_channel_write_C_1;
    sc_signal< sc_logic > ap_channel_done_C_0;
    sc_signal< sc_logic > readData32_U0_C_0_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_C_0;
    sc_signal< sc_logic > ap_sync_channel_write_C_0;
    sc_signal< sc_logic > ap_channel_done_B_1;
    sc_signal< sc_logic > readData32_U0_B_1_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_B_1;
    sc_signal< sc_logic > ap_sync_channel_write_B_1;
    sc_signal< sc_logic > ap_channel_done_B_0;
    sc_signal< sc_logic > readData32_U0_B_0_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_B_0;
    sc_signal< sc_logic > ap_sync_channel_write_B_0;
    sc_signal< sc_logic > ap_channel_done_A_1;
    sc_signal< sc_logic > readData32_U0_A_1_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_A_1;
    sc_signal< sc_logic > ap_sync_channel_write_A_1;
    sc_signal< sc_logic > ap_channel_done_A_0;
    sc_signal< sc_logic > readData32_U0_A_0_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_A_0;
    sc_signal< sc_logic > ap_sync_channel_write_A_0;
    sc_signal< sc_lv<8> > kernel_2mm_U0_A_0_address0;
    sc_signal< sc_logic > kernel_2mm_U0_A_0_ce0;
    sc_signal< sc_lv<32> > kernel_2mm_U0_A_0_d0;
    sc_signal< sc_logic > kernel_2mm_U0_A_0_we0;
    sc_signal< sc_lv<8> > kernel_2mm_U0_A_0_address1;
    sc_signal< sc_logic > kernel_2mm_U0_A_0_ce1;
    sc_signal< sc_lv<32> > kernel_2mm_U0_A_0_d1;
    sc_signal< sc_logic > kernel_2mm_U0_A_0_we1;
    sc_signal< sc_lv<8> > kernel_2mm_U0_A_1_address0;
    sc_signal< sc_logic > kernel_2mm_U0_A_1_ce0;
    sc_signal< sc_lv<32> > kernel_2mm_U0_A_1_d0;
    sc_signal< sc_logic > kernel_2mm_U0_A_1_we0;
    sc_signal< sc_lv<8> > kernel_2mm_U0_A_1_address1;
    sc_signal< sc_logic > kernel_2mm_U0_A_1_ce1;
    sc_signal< sc_lv<32> > kernel_2mm_U0_A_1_d1;
    sc_signal< sc_logic > kernel_2mm_U0_A_1_we1;
    sc_signal< sc_lv<8> > kernel_2mm_U0_B_0_address0;
    sc_signal< sc_logic > kernel_2mm_U0_B_0_ce0;
    sc_signal< sc_lv<32> > kernel_2mm_U0_B_0_d0;
    sc_signal< sc_logic > kernel_2mm_U0_B_0_we0;
    sc_signal< sc_lv<8> > kernel_2mm_U0_B_0_address1;
    sc_signal< sc_logic > kernel_2mm_U0_B_0_ce1;
    sc_signal< sc_lv<32> > kernel_2mm_U0_B_0_d1;
    sc_signal< sc_logic > kernel_2mm_U0_B_0_we1;
    sc_signal< sc_lv<8> > kernel_2mm_U0_B_1_address0;
    sc_signal< sc_logic > kernel_2mm_U0_B_1_ce0;
    sc_signal< sc_lv<32> > kernel_2mm_U0_B_1_d0;
    sc_signal< sc_logic > kernel_2mm_U0_B_1_we0;
    sc_signal< sc_lv<8> > kernel_2mm_U0_B_1_address1;
    sc_signal< sc_logic > kernel_2mm_U0_B_1_ce1;
    sc_signal< sc_lv<32> > kernel_2mm_U0_B_1_d1;
    sc_signal< sc_logic > kernel_2mm_U0_B_1_we1;
    sc_signal< sc_lv<7> > kernel_2mm_U0_C_0_address0;
    sc_signal< sc_logic > kernel_2mm_U0_C_0_ce0;
    sc_signal< sc_lv<32> > kernel_2mm_U0_C_0_d0;
    sc_signal< sc_logic > kernel_2mm_U0_C_0_we0;
    sc_signal< sc_lv<7> > kernel_2mm_U0_C_0_address1;
    sc_signal< sc_logic > kernel_2mm_U0_C_0_ce1;
    sc_signal< sc_lv<32> > kernel_2mm_U0_C_0_d1;
    sc_signal< sc_logic > kernel_2mm_U0_C_0_we1;
    sc_signal< sc_lv<7> > kernel_2mm_U0_C_1_address0;
    sc_signal< sc_logic > kernel_2mm_U0_C_1_ce0;
    sc_signal< sc_lv<32> > kernel_2mm_U0_C_1_d0;
    sc_signal< sc_logic > kernel_2mm_U0_C_1_we0;
    sc_signal< sc_lv<7> > kernel_2mm_U0_C_1_address1;
    sc_signal< sc_logic > kernel_2mm_U0_C_1_ce1;
    sc_signal< sc_lv<32> > kernel_2mm_U0_C_1_d1;
    sc_signal< sc_logic > kernel_2mm_U0_C_1_we1;
    sc_signal< sc_lv<6> > kernel_2mm_U0_C_2_address0;
    sc_signal< sc_logic > kernel_2mm_U0_C_2_ce0;
    sc_signal< sc_lv<32> > kernel_2mm_U0_C_2_d0;
    sc_signal< sc_logic > kernel_2mm_U0_C_2_we0;
    sc_signal< sc_lv<6> > kernel_2mm_U0_C_2_address1;
    sc_signal< sc_logic > kernel_2mm_U0_C_2_ce1;
    sc_signal< sc_lv<32> > kernel_2mm_U0_C_2_d1;
    sc_signal< sc_logic > kernel_2mm_U0_C_2_we1;
    sc_signal< sc_lv<6> > kernel_2mm_U0_C_3_address0;
    sc_signal< sc_logic > kernel_2mm_U0_C_3_ce0;
    sc_signal< sc_lv<32> > kernel_2mm_U0_C_3_d0;
    sc_signal< sc_logic > kernel_2mm_U0_C_3_we0;
    sc_signal< sc_lv<6> > kernel_2mm_U0_C_3_address1;
    sc_signal< sc_logic > kernel_2mm_U0_C_3_ce1;
    sc_signal< sc_lv<32> > kernel_2mm_U0_C_3_d1;
    sc_signal< sc_logic > kernel_2mm_U0_C_3_we1;
    sc_signal< sc_lv<6> > kernel_2mm_U0_C_4_address0;
    sc_signal< sc_logic > kernel_2mm_U0_C_4_ce0;
    sc_signal< sc_lv<32> > kernel_2mm_U0_C_4_d0;
    sc_signal< sc_logic > kernel_2mm_U0_C_4_we0;
    sc_signal< sc_lv<6> > kernel_2mm_U0_C_4_address1;
    sc_signal< sc_logic > kernel_2mm_U0_C_4_ce1;
    sc_signal< sc_lv<32> > kernel_2mm_U0_C_4_d1;
    sc_signal< sc_logic > kernel_2mm_U0_C_4_we1;
    sc_signal< sc_lv<6> > kernel_2mm_U0_C_5_address0;
    sc_signal< sc_logic > kernel_2mm_U0_C_5_ce0;
    sc_signal< sc_lv<32> > kernel_2mm_U0_C_5_d0;
    sc_signal< sc_logic > kernel_2mm_U0_C_5_we0;
    sc_signal< sc_lv<6> > kernel_2mm_U0_C_5_address1;
    sc_signal< sc_logic > kernel_2mm_U0_C_5_ce1;
    sc_signal< sc_lv<32> > kernel_2mm_U0_C_5_d1;
    sc_signal< sc_logic > kernel_2mm_U0_C_5_we1;
    sc_signal< sc_lv<6> > kernel_2mm_U0_C_6_address0;
    sc_signal< sc_logic > kernel_2mm_U0_C_6_ce0;
    sc_signal< sc_lv<32> > kernel_2mm_U0_C_6_d0;
    sc_signal< sc_logic > kernel_2mm_U0_C_6_we0;
    sc_signal< sc_lv<6> > kernel_2mm_U0_C_6_address1;
    sc_signal< sc_logic > kernel_2mm_U0_C_6_ce1;
    sc_signal< sc_lv<32> > kernel_2mm_U0_C_6_d1;
    sc_signal< sc_logic > kernel_2mm_U0_C_6_we1;
    sc_signal< sc_lv<6> > kernel_2mm_U0_C_7_address0;
    sc_signal< sc_logic > kernel_2mm_U0_C_7_ce0;
    sc_signal< sc_lv<32> > kernel_2mm_U0_C_7_d0;
    sc_signal< sc_logic > kernel_2mm_U0_C_7_we0;
    sc_signal< sc_lv<6> > kernel_2mm_U0_C_7_address1;
    sc_signal< sc_logic > kernel_2mm_U0_C_7_ce1;
    sc_signal< sc_lv<32> > kernel_2mm_U0_C_7_d1;
    sc_signal< sc_logic > kernel_2mm_U0_C_7_we1;
    sc_signal< sc_lv<9> > kernel_2mm_U0_D_address0;
    sc_signal< sc_logic > kernel_2mm_U0_D_ce0;
    sc_signal< sc_lv<32> > kernel_2mm_U0_D_d0;
    sc_signal< sc_logic > kernel_2mm_U0_D_we0;
    sc_signal< sc_lv<9> > kernel_2mm_U0_D_address1;
    sc_signal< sc_logic > kernel_2mm_U0_D_ce1;
    sc_signal< sc_lv<32> > kernel_2mm_U0_D_d1;
    sc_signal< sc_logic > kernel_2mm_U0_D_we1;
    sc_signal< sc_lv<9> > kernel_2mm_U0_D_output_address0;
    sc_signal< sc_logic > kernel_2mm_U0_D_output_ce0;
    sc_signal< sc_lv<32> > kernel_2mm_U0_D_output_d0;
    sc_signal< sc_logic > kernel_2mm_U0_D_output_we0;
    sc_signal< sc_lv<9> > kernel_2mm_U0_D_output_address1;
    sc_signal< sc_logic > kernel_2mm_U0_D_output_ce1;
    sc_signal< sc_lv<32> > kernel_2mm_U0_D_output_d1;
    sc_signal< sc_logic > kernel_2mm_U0_D_output_we1;
    sc_signal< sc_logic > kernel_2mm_U0_A_0_read;
    sc_signal< sc_logic > kernel_2mm_U0_A_1_read;
    sc_signal< sc_logic > kernel_2mm_U0_B_0_read;
    sc_signal< sc_logic > kernel_2mm_U0_B_1_read;
    sc_signal< sc_logic > kernel_2mm_U0_C_0_read;
    sc_signal< sc_logic > kernel_2mm_U0_C_1_read;
    sc_signal< sc_logic > kernel_2mm_U0_C_2_read;
    sc_signal< sc_logic > kernel_2mm_U0_C_3_read;
    sc_signal< sc_logic > kernel_2mm_U0_C_4_read;
    sc_signal< sc_logic > kernel_2mm_U0_C_5_read;
    sc_signal< sc_logic > kernel_2mm_U0_C_6_read;
    sc_signal< sc_logic > kernel_2mm_U0_C_7_read;
    sc_signal< sc_logic > kernel_2mm_U0_D_read;
    sc_signal< sc_logic > kernel_2mm_U0_D_output_full_n;
    sc_signal< sc_logic > kernel_2mm_U0_D_output_write;
    sc_signal< sc_logic > kernel_2mm_U0_ap_done;
    sc_signal< sc_logic > kernel_2mm_U0_ap_start;
    sc_signal< sc_logic > kernel_2mm_U0_ap_ready;
    sc_signal< sc_logic > kernel_2mm_U0_ap_idle;
    sc_signal< sc_logic > kernel_2mm_U0_ap_continue;
    sc_signal< sc_logic > ap_channel_done_D_output;
    sc_signal< sc_logic > writeData_U0_ap_start;
    sc_signal< sc_logic > writeData_U0_ap_done;
    sc_signal< sc_logic > writeData_U0_ap_continue;
    sc_signal< sc_logic > writeData_U0_ap_idle;
    sc_signal< sc_logic > writeData_U0_ap_ready;
    sc_signal< sc_logic > writeData_U0_m_axi_D_output_AXI_AWVALID;
    sc_signal< sc_lv<32> > writeData_U0_m_axi_D_output_AXI_AWADDR;
    sc_signal< sc_lv<1> > writeData_U0_m_axi_D_output_AXI_AWID;
    sc_signal< sc_lv<32> > writeData_U0_m_axi_D_output_AXI_AWLEN;
    sc_signal< sc_lv<3> > writeData_U0_m_axi_D_output_AXI_AWSIZE;
    sc_signal< sc_lv<2> > writeData_U0_m_axi_D_output_AXI_AWBURST;
    sc_signal< sc_lv<2> > writeData_U0_m_axi_D_output_AXI_AWLOCK;
    sc_signal< sc_lv<4> > writeData_U0_m_axi_D_output_AXI_AWCACHE;
    sc_signal< sc_lv<3> > writeData_U0_m_axi_D_output_AXI_AWPROT;
    sc_signal< sc_lv<4> > writeData_U0_m_axi_D_output_AXI_AWQOS;
    sc_signal< sc_lv<4> > writeData_U0_m_axi_D_output_AXI_AWREGION;
    sc_signal< sc_lv<1> > writeData_U0_m_axi_D_output_AXI_AWUSER;
    sc_signal< sc_logic > writeData_U0_m_axi_D_output_AXI_WVALID;
    sc_signal< sc_lv<32> > writeData_U0_m_axi_D_output_AXI_WDATA;
    sc_signal< sc_lv<4> > writeData_U0_m_axi_D_output_AXI_WSTRB;
    sc_signal< sc_logic > writeData_U0_m_axi_D_output_AXI_WLAST;
    sc_signal< sc_lv<1> > writeData_U0_m_axi_D_output_AXI_WID;
    sc_signal< sc_lv<1> > writeData_U0_m_axi_D_output_AXI_WUSER;
    sc_signal< sc_logic > writeData_U0_m_axi_D_output_AXI_ARVALID;
    sc_signal< sc_lv<32> > writeData_U0_m_axi_D_output_AXI_ARADDR;
    sc_signal< sc_lv<1> > writeData_U0_m_axi_D_output_AXI_ARID;
    sc_signal< sc_lv<32> > writeData_U0_m_axi_D_output_AXI_ARLEN;
    sc_signal< sc_lv<3> > writeData_U0_m_axi_D_output_AXI_ARSIZE;
    sc_signal< sc_lv<2> > writeData_U0_m_axi_D_output_AXI_ARBURST;
    sc_signal< sc_lv<2> > writeData_U0_m_axi_D_output_AXI_ARLOCK;
    sc_signal< sc_lv<4> > writeData_U0_m_axi_D_output_AXI_ARCACHE;
    sc_signal< sc_lv<3> > writeData_U0_m_axi_D_output_AXI_ARPROT;
    sc_signal< sc_lv<4> > writeData_U0_m_axi_D_output_AXI_ARQOS;
    sc_signal< sc_lv<4> > writeData_U0_m_axi_D_output_AXI_ARREGION;
    sc_signal< sc_lv<1> > writeData_U0_m_axi_D_output_AXI_ARUSER;
    sc_signal< sc_logic > writeData_U0_m_axi_D_output_AXI_RREADY;
    sc_signal< sc_logic > writeData_U0_m_axi_D_output_AXI_BREADY;
    sc_signal< sc_logic > writeData_U0_D_output_AXI_offset_read;
    sc_signal< sc_lv<9> > writeData_U0_D_output_address0;
    sc_signal< sc_logic > writeData_U0_D_output_ce0;
    sc_signal< sc_logic > ap_sync_continue;
    sc_signal< sc_logic > A_0_i_full_n;
    sc_signal< sc_logic > A_0_t_empty_n;
    sc_signal< sc_logic > A_1_i_full_n;
    sc_signal< sc_logic > A_1_t_empty_n;
    sc_signal< sc_logic > B_0_i_full_n;
    sc_signal< sc_logic > B_0_t_empty_n;
    sc_signal< sc_logic > B_1_i_full_n;
    sc_signal< sc_logic > B_1_t_empty_n;
    sc_signal< sc_logic > C_0_i_full_n;
    sc_signal< sc_logic > C_0_t_empty_n;
    sc_signal< sc_logic > C_1_i_full_n;
    sc_signal< sc_logic > C_1_t_empty_n;
    sc_signal< sc_logic > C_2_i_full_n;
    sc_signal< sc_logic > C_2_t_empty_n;
    sc_signal< sc_logic > C_3_i_full_n;
    sc_signal< sc_logic > C_3_t_empty_n;
    sc_signal< sc_logic > C_4_i_full_n;
    sc_signal< sc_logic > C_4_t_empty_n;
    sc_signal< sc_logic > C_5_i_full_n;
    sc_signal< sc_logic > C_5_t_empty_n;
    sc_signal< sc_logic > C_6_i_full_n;
    sc_signal< sc_logic > C_6_t_empty_n;
    sc_signal< sc_logic > C_7_i_full_n;
    sc_signal< sc_logic > C_7_t_empty_n;
    sc_signal< sc_logic > D_i_full_n;
    sc_signal< sc_logic > D_t_empty_n;
    sc_signal< sc_logic > D_output_i_full_n;
    sc_signal< sc_logic > D_output_t_empty_n;
    sc_signal< sc_logic > D_output_AXI_c_full_n;
    sc_signal< sc_lv<32> > D_output_AXI_c_dout;
    sc_signal< sc_logic > D_output_AXI_c_empty_n;
    sc_signal< sc_logic > ap_sync_done;
    sc_signal< sc_logic > ap_sync_ready;
    sc_signal< sc_logic > readData32_U0_start_full_n;
    sc_signal< sc_logic > readData32_U0_start_write;
    sc_signal< sc_logic > kernel_2mm_U0_start_full_n;
    sc_signal< sc_logic > kernel_2mm_U0_start_write;
    sc_signal< sc_logic > writeData_U0_start_full_n;
    sc_signal< sc_logic > writeData_U0_start_write;
    static const int C_S_AXI_DATA_WIDTH;
    static const int C_S_AXI_WSTRB_WIDTH;
    static const int C_S_AXI_ADDR_WIDTH;
    static const sc_logic ap_const_logic_1;
    static const int C_M_AXI_GMEM0_USER_VALUE;
    static const int C_M_AXI_GMEM0_PROT_VALUE;
    static const int C_M_AXI_GMEM0_CACHE_VALUE;
    static const int C_M_AXI_ID_WIDTH;
    static const int C_M_AXI_ADDR_WIDTH;
    static const int C_M_AXI_DATA_WIDTH;
    static const int C_M_AXI_WSTRB_WIDTH;
    static const int C_M_AXI_AWUSER_WIDTH;
    static const int C_M_AXI_ARUSER_WIDTH;
    static const int C_M_AXI_WUSER_WIDTH;
    static const int C_M_AXI_RUSER_WIDTH;
    static const int C_M_AXI_BUSER_WIDTH;
    static const int C_M_AXI_GMEM1_USER_VALUE;
    static const int C_M_AXI_GMEM1_PROT_VALUE;
    static const int C_M_AXI_GMEM1_CACHE_VALUE;
    static const int C_M_AXI_GMEM2_USER_VALUE;
    static const int C_M_AXI_GMEM2_PROT_VALUE;
    static const int C_M_AXI_GMEM2_CACHE_VALUE;
    static const int C_M_AXI_GMEM3_USER_VALUE;
    static const int C_M_AXI_GMEM3_PROT_VALUE;
    static const int C_M_AXI_GMEM3_CACHE_VALUE;
    static const int C_M_AXI_GMEM4_USER_VALUE;
    static const int C_M_AXI_GMEM4_PROT_VALUE;
    static const int C_M_AXI_GMEM4_CACHE_VALUE;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<4> ap_const_lv4_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const3();
    void thread_ap_var_for_const4();
    void thread_ap_var_for_const5();
    void thread_ap_var_for_const6();
    void thread_ap_clk_no_reset_();
    void thread_ap_channel_done_A_0();
    void thread_ap_channel_done_A_1();
    void thread_ap_channel_done_B_0();
    void thread_ap_channel_done_B_1();
    void thread_ap_channel_done_C_0();
    void thread_ap_channel_done_C_1();
    void thread_ap_channel_done_C_2();
    void thread_ap_channel_done_C_3();
    void thread_ap_channel_done_C_4();
    void thread_ap_channel_done_C_5();
    void thread_ap_channel_done_C_6();
    void thread_ap_channel_done_C_7();
    void thread_ap_channel_done_D();
    void thread_ap_channel_done_D_output();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_ap_sync_channel_write_A_0();
    void thread_ap_sync_channel_write_A_1();
    void thread_ap_sync_channel_write_B_0();
    void thread_ap_sync_channel_write_B_1();
    void thread_ap_sync_channel_write_C_0();
    void thread_ap_sync_channel_write_C_1();
    void thread_ap_sync_channel_write_C_2();
    void thread_ap_sync_channel_write_C_3();
    void thread_ap_sync_channel_write_C_4();
    void thread_ap_sync_channel_write_C_5();
    void thread_ap_sync_channel_write_C_6();
    void thread_ap_sync_channel_write_C_7();
    void thread_ap_sync_channel_write_D();
    void thread_ap_sync_continue();
    void thread_ap_sync_done();
    void thread_ap_sync_ready();
    void thread_kernel_2mm_U0_D_output_full_n();
    void thread_kernel_2mm_U0_ap_continue();
    void thread_kernel_2mm_U0_ap_start();
    void thread_kernel_2mm_U0_start_full_n();
    void thread_kernel_2mm_U0_start_write();
    void thread_readData32_U0_A_0_full_n();
    void thread_readData32_U0_A_1_full_n();
    void thread_readData32_U0_B_0_full_n();
    void thread_readData32_U0_B_1_full_n();
    void thread_readData32_U0_C_0_full_n();
    void thread_readData32_U0_C_1_full_n();
    void thread_readData32_U0_C_2_full_n();
    void thread_readData32_U0_C_3_full_n();
    void thread_readData32_U0_C_4_full_n();
    void thread_readData32_U0_C_5_full_n();
    void thread_readData32_U0_C_6_full_n();
    void thread_readData32_U0_C_7_full_n();
    void thread_readData32_U0_D_full_n();
    void thread_readData32_U0_ap_continue();
    void thread_readData32_U0_ap_start();
    void thread_readData32_U0_start_full_n();
    void thread_readData32_U0_start_write();
    void thread_writeData_U0_ap_continue();
    void thread_writeData_U0_ap_start();
    void thread_writeData_U0_start_full_n();
    void thread_writeData_U0_start_write();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
