-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity func1_execute8 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    tmp_mid_execute_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    tmp_mid_execute_0_ce0 : OUT STD_LOGIC;
    tmp_mid_execute_0_we0 : OUT STD_LOGIC;
    tmp_mid_execute_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    tmp_mid_execute_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    tmp_mid_execute_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    tmp_mid_execute_1_ce0 : OUT STD_LOGIC;
    tmp_mid_execute_1_we0 : OUT STD_LOGIC;
    tmp_mid_execute_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    tmp_mid_execute_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    tmp_mid_execute_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    tmp_mid_execute_2_ce0 : OUT STD_LOGIC;
    tmp_mid_execute_2_we0 : OUT STD_LOGIC;
    tmp_mid_execute_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    tmp_mid_execute_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    tmp_mid_execute_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    tmp_mid_execute_3_ce0 : OUT STD_LOGIC;
    tmp_mid_execute_3_we0 : OUT STD_LOGIC;
    tmp_mid_execute_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    tmp_mid_execute_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    tmp_mid_execute_4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    tmp_mid_execute_4_ce0 : OUT STD_LOGIC;
    tmp_mid_execute_4_we0 : OUT STD_LOGIC;
    tmp_mid_execute_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    tmp_mid_execute_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    tmp_mid_execute_5_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    tmp_mid_execute_5_ce0 : OUT STD_LOGIC;
    tmp_mid_execute_5_we0 : OUT STD_LOGIC;
    tmp_mid_execute_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    tmp_mid_execute_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    tmp_mid_execute_6_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    tmp_mid_execute_6_ce0 : OUT STD_LOGIC;
    tmp_mid_execute_6_we0 : OUT STD_LOGIC;
    tmp_mid_execute_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    tmp_mid_execute_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    tmp_mid_execute_7_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    tmp_mid_execute_7_ce0 : OUT STD_LOGIC;
    tmp_mid_execute_7_we0 : OUT STD_LOGIC;
    tmp_mid_execute_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    tmp_mid_execute_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    A_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    A_0_ce0 : OUT STD_LOGIC;
    A_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    A_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    A_1_ce0 : OUT STD_LOGIC;
    A_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    B_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    B_0_ce0 : OUT STD_LOGIC;
    B_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    B_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    B_1_ce0 : OUT STD_LOGIC;
    B_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of func1_execute8 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (8 downto 0) := "000010000";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (8 downto 0) := "000100000";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (8 downto 0) := "001000000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv9_120 : STD_LOGIC_VECTOR (8 downto 0) := "100100000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_12 : STD_LOGIC_VECTOR (4 downto 0) := "10010";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv32_7B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111011";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal k_reg_295 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten_next_fu_334_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal indvar_flatten_next_reg_572 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal j_mid2_fu_352_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_mid2_reg_577 : STD_LOGIC_VECTOR (4 downto 0);
    signal exitcond_flatten_fu_328_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_mid2_v_fu_360_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_mid2_v_reg_583 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_8_fu_368_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_8_reg_592 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_10_reg_596 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_16_fu_420_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_16_reg_601 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_cast_fu_426_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_cast_reg_606 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_mid_execute_0_a_reg_611 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_mid_execute_1_a_reg_616 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_mid_execute_2_a_reg_621 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_mid_execute_3_a_reg_626 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_mid_execute_4_a_reg_631 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_mid_execute_5_a_reg_636 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_mid_execute_6_a_reg_641 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_mid_execute_7_a_reg_646 : STD_LOGIC_VECTOR (4 downto 0);
    signal exitcond_fu_460_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_651 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state5_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal exitcond_reg_651_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_651_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_651_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal newIndex8_fu_466_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal newIndex8_reg_655 : STD_LOGIC_VECTOR (3 downto 0);
    signal newIndex8_reg_655_pp0_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_23_fu_506_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_23_reg_660 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state6_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state10_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state14_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state18_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal B_1_addr_reg_670 : STD_LOGIC_VECTOR (7 downto 0);
    signal B_0_load_reg_675 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state7_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state11_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state15_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_state19_pp0_stage2_iter3 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal B_1_load_reg_680 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state8_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state12_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_state16_pp0_stage3_iter2 : BOOLEAN;
    signal ap_block_state20_pp0_stage3_iter3 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal k_9_1_fu_521_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal k_9_1_reg_685 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal A_1_addr_reg_695 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_516_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp1_reg_700 : STD_LOGIC_VECTOR (31 downto 0);
    signal A_0_load_reg_705 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_527_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp2_reg_710 : STD_LOGIC_VECTOR (31 downto 0);
    signal A_1_load_reg_715 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_546_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_reg_720 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal grp_fu_550_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_1_reg_765 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_1_fu_558_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_1_reg_770 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_2_fu_564_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state5 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal indvar_flatten_reg_262 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_reg_273 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_reg_284 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_phi_mux_k_phi_fu_299_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_reg_pp0_iter0_tmp_mid_execute_load_reg_307 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_tmp_mid_execute_load_reg_307 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter2_tmp_mid_execute_load_reg_307 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter3_tmp_mid_execute_load_reg_307 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_57_cast_fu_438_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_58_cast_fu_450_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_63_cast_fu_511_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal tmp_59_cast_fu_540_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal exitcond1_fu_346_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_2_fu_340_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_fu_385_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_mid2_cast_fu_382_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_14_fu_402_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_15_fu_413_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl2_cast_fu_392_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal newIndex7_cast_fu_429_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_s_fu_396_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_17_fu_432_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_53_cast_fu_409_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_18_fu_444_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_20_fu_476_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_21_fu_488_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_shl4_cast_fu_496_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl3_cast_fu_484_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_22_fu_500_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_516_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_527_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal newIndex9_cast_fu_532_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_19_fu_535_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp3_fu_554_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component kernel_2mm_wrappebkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component kernel_2mm_wrappecud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    kernel_2mm_wrappebkb_U42 : component kernel_2mm_wrappebkb
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => B_0_load_reg_675,
        din1 => grp_fu_516_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_516_p2);

    kernel_2mm_wrappebkb_U43 : component kernel_2mm_wrappebkb
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => B_1_load_reg_680,
        din1 => grp_fu_527_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_527_p2);

    kernel_2mm_wrappecud_U44 : component kernel_2mm_wrappecud
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => A_0_load_reg_705,
        din1 => tmp1_reg_700,
        ce => ap_const_logic_1,
        dout => grp_fu_546_p2);

    kernel_2mm_wrappecud_U45 : component kernel_2mm_wrappecud
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp2_reg_710,
        din1 => A_1_load_reg_715,
        ce => ap_const_logic_1,
        dout => grp_fu_550_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state5)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state5);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter3_tmp_mid_execute_load_reg_307_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (tmp_8_reg_592 = ap_const_lv3_7) and (exitcond_reg_651_pp0_iter3_reg = ap_const_lv1_0))) then 
                ap_phi_reg_pp0_iter3_tmp_mid_execute_load_reg_307 <= tmp_mid_execute_7_q0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (tmp_8_reg_592 = ap_const_lv3_6) and (exitcond_reg_651_pp0_iter3_reg = ap_const_lv1_0))) then 
                ap_phi_reg_pp0_iter3_tmp_mid_execute_load_reg_307 <= tmp_mid_execute_6_q0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (tmp_8_reg_592 = ap_const_lv3_5) and (exitcond_reg_651_pp0_iter3_reg = ap_const_lv1_0))) then 
                ap_phi_reg_pp0_iter3_tmp_mid_execute_load_reg_307 <= tmp_mid_execute_5_q0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (tmp_8_reg_592 = ap_const_lv3_4) and (exitcond_reg_651_pp0_iter3_reg = ap_const_lv1_0))) then 
                ap_phi_reg_pp0_iter3_tmp_mid_execute_load_reg_307 <= tmp_mid_execute_4_q0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (tmp_8_reg_592 = ap_const_lv3_3) and (exitcond_reg_651_pp0_iter3_reg = ap_const_lv1_0))) then 
                ap_phi_reg_pp0_iter3_tmp_mid_execute_load_reg_307 <= tmp_mid_execute_3_q0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (tmp_8_reg_592 = ap_const_lv3_2) and (exitcond_reg_651_pp0_iter3_reg = ap_const_lv1_0))) then 
                ap_phi_reg_pp0_iter3_tmp_mid_execute_load_reg_307 <= tmp_mid_execute_2_q0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (tmp_8_reg_592 = ap_const_lv3_1) and (exitcond_reg_651_pp0_iter3_reg = ap_const_lv1_0))) then 
                ap_phi_reg_pp0_iter3_tmp_mid_execute_load_reg_307 <= tmp_mid_execute_1_q0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (tmp_8_reg_592 = ap_const_lv3_0) and (exitcond_reg_651_pp0_iter3_reg = ap_const_lv1_0))) then 
                ap_phi_reg_pp0_iter3_tmp_mid_execute_load_reg_307 <= tmp_mid_execute_0_q0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                ap_phi_reg_pp0_iter3_tmp_mid_execute_load_reg_307 <= ap_phi_reg_pp0_iter2_tmp_mid_execute_load_reg_307;
            end if; 
        end if;
    end process;

    i_reg_273_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
                i_reg_273 <= tmp_mid2_v_reg_583;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_reg_273 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_262_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
                indvar_flatten_reg_262 <= indvar_flatten_next_reg_572;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten_reg_262 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    j_reg_284_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
                j_reg_284 <= j_2_fu_564_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                j_reg_284 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    k_reg_295_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_reg_651 = ap_const_lv1_0))) then 
                k_reg_295 <= k_9_1_reg_685;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                k_reg_295 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                A_0_load_reg_705 <= A_0_q0;
                exitcond_reg_651 <= exitcond_fu_460_p2;
                exitcond_reg_651_pp0_iter1_reg <= exitcond_reg_651;
                exitcond_reg_651_pp0_iter2_reg <= exitcond_reg_651_pp0_iter1_reg;
                exitcond_reg_651_pp0_iter3_reg <= exitcond_reg_651_pp0_iter2_reg;
                newIndex8_reg_655_pp0_iter1_reg <= newIndex8_reg_655;
                tmp2_reg_710 <= grp_fu_527_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                A_1_addr_reg_695 <= tmp_59_cast_fu_540_p1(8 - 1 downto 0);
                tmp1_reg_700 <= grp_fu_516_p2;
                tmp_10_1_reg_770 <= tmp_10_1_fu_558_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                A_1_load_reg_715 <= A_1_q0;
                tmp_9_reg_720 <= grp_fu_546_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (exitcond_reg_651 = ap_const_lv1_0))) then
                B_0_load_reg_675 <= B_0_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_reg_651 = ap_const_lv1_0))) then
                B_1_addr_reg_670 <= tmp_63_cast_fu_511_p1(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_reg_651 = ap_const_lv1_0))) then
                B_1_load_reg_680 <= B_1_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                ap_phi_reg_pp0_iter1_tmp_mid_execute_load_reg_307 <= ap_phi_reg_pp0_iter0_tmp_mid_execute_load_reg_307;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                ap_phi_reg_pp0_iter2_tmp_mid_execute_load_reg_307 <= ap_phi_reg_pp0_iter1_tmp_mid_execute_load_reg_307;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                indvar_flatten_next_reg_572 <= indvar_flatten_next_fu_334_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond_flatten_fu_328_p2 = ap_const_lv1_0))) then
                j_mid2_reg_577 <= j_mid2_fu_352_p3;
                tmp_10_reg_596 <= j_mid2_fu_352_p3(4 downto 3);
                tmp_8_reg_592 <= tmp_8_fu_368_p1;
                tmp_mid2_v_reg_583 <= tmp_mid2_v_fu_360_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_reg_651 = ap_const_lv1_0))) then
                k_9_1_reg_685 <= k_9_1_fu_521_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_fu_460_p2 = ap_const_lv1_0))) then
                newIndex8_reg_655 <= ap_phi_mux_k_phi_fu_299_p4(4 downto 1);
                tmp_23_reg_660 <= tmp_23_fu_506_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                    tmp_16_reg_601(8 downto 2) <= tmp_16_fu_420_p2(8 downto 2);
                    tmp_cast_reg_606(4 downto 0) <= tmp_cast_fu_426_p1(4 downto 0);
                tmp_mid_execute_0_a_reg_611 <= tmp_57_cast_fu_438_p1(6 - 1 downto 0);
                tmp_mid_execute_1_a_reg_616 <= tmp_57_cast_fu_438_p1(6 - 1 downto 0);
                tmp_mid_execute_2_a_reg_621 <= tmp_58_cast_fu_450_p1(5 - 1 downto 0);
                tmp_mid_execute_3_a_reg_626 <= tmp_58_cast_fu_450_p1(5 - 1 downto 0);
                tmp_mid_execute_4_a_reg_631 <= tmp_58_cast_fu_450_p1(5 - 1 downto 0);
                tmp_mid_execute_5_a_reg_636 <= tmp_58_cast_fu_450_p1(5 - 1 downto 0);
                tmp_mid_execute_6_a_reg_641 <= tmp_58_cast_fu_450_p1(5 - 1 downto 0);
                tmp_mid_execute_7_a_reg_646 <= tmp_58_cast_fu_450_p1(5 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                tmp_9_1_reg_765 <= grp_fu_550_p2;
            end if;
        end if;
    end process;
    tmp_16_reg_601(1 downto 0) <= "00";
    tmp_cast_reg_606(8 downto 5) <= "0000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, exitcond_flatten_fu_328_p2, exitcond_fu_460_p2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_block_pp0_stage3_subdone, ap_enable_reg_pp0_iter4, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond_flatten_fu_328_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_fu_460_p2 = ap_const_lv1_1))) and not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif ((((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_fu_460_p2 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXX";
        end case;
    end process;
    A_0_address0 <= tmp_59_cast_fu_540_p1(8 - 1 downto 0);

    A_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            A_0_ce0 <= ap_const_logic_1;
        else 
            A_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    A_1_address0 <= A_1_addr_reg_695;

    A_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            A_1_ce0 <= ap_const_logic_1;
        else 
            A_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    B_0_address0 <= tmp_63_cast_fu_511_p1(8 - 1 downto 0);

    B_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            B_0_ce0 <= ap_const_logic_1;
        else 
            B_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    B_1_address0 <= B_1_addr_reg_670;

    B_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            B_1_ce0 <= ap_const_logic_1;
        else 
            B_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(7);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state22 <= ap_CS_fsm(8);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage3_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state5_assign_proc : process(exitcond_fu_460_p2)
    begin
        if ((exitcond_fu_460_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state5 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, exitcond_flatten_fu_328_p2)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond_flatten_fu_328_p2 = ap_const_lv1_1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_k_phi_fu_299_p4_assign_proc : process(k_reg_295, exitcond_reg_651, ap_CS_fsm_pp0_stage0, k_9_1_reg_685, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_reg_651 = ap_const_lv1_0))) then 
            ap_phi_mux_k_phi_fu_299_p4 <= k_9_1_reg_685;
        else 
            ap_phi_mux_k_phi_fu_299_p4 <= k_reg_295;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_tmp_mid_execute_load_reg_307 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_ready_assign_proc : process(ap_CS_fsm_state2, exitcond_flatten_fu_328_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond_flatten_fu_328_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    exitcond1_fu_346_p2 <= "1" when (j_reg_284 = ap_const_lv5_12) else "0";
    exitcond_flatten_fu_328_p2 <= "1" when (indvar_flatten_reg_262 = ap_const_lv9_120) else "0";
    exitcond_fu_460_p2 <= "1" when (ap_phi_mux_k_phi_fu_299_p4 = ap_const_lv5_18) else "0";
    grp_fu_516_p1 <= ap_const_lv32_7B(8 - 1 downto 0);
    grp_fu_527_p1 <= ap_const_lv32_7B(8 - 1 downto 0);
    i_2_fu_340_p2 <= std_logic_vector(unsigned(ap_const_lv5_1) + unsigned(i_reg_273));
    indvar_flatten_next_fu_334_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_262) + unsigned(ap_const_lv9_1));
    j_2_fu_564_p2 <= std_logic_vector(unsigned(j_mid2_reg_577) + unsigned(ap_const_lv5_1));
    j_mid2_fu_352_p3 <= 
        ap_const_lv5_0 when (exitcond1_fu_346_p2(0) = '1') else 
        j_reg_284;
    k_9_1_fu_521_p2 <= std_logic_vector(unsigned(k_reg_295) + unsigned(ap_const_lv5_2));
    newIndex7_cast_fu_429_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_10_reg_596),7));
    newIndex8_fu_466_p4 <= ap_phi_mux_k_phi_fu_299_p4(4 downto 1);
    newIndex9_cast_fu_532_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newIndex8_reg_655_pp0_iter1_reg),9));
    p_shl2_cast_fu_392_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_385_p3),9));
    p_shl3_cast_fu_484_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_20_fu_476_p3),9));
    p_shl4_cast_fu_496_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_21_fu_488_p3),9));
    tmp3_fu_554_p2 <= std_logic_vector(unsigned(tmp_9_reg_720) + unsigned(tmp_9_1_reg_765));
    tmp_10_1_fu_558_p2 <= std_logic_vector(unsigned(tmp3_fu_554_p2) + unsigned(ap_phi_reg_pp0_iter3_tmp_mid_execute_load_reg_307));
    tmp_14_fu_402_p3 <= (tmp_mid2_v_reg_583 & ap_const_lv1_0);
    tmp_15_fu_413_p3 <= (tmp_mid2_v_reg_583 & ap_const_lv4_0);
    tmp_16_fu_420_p2 <= std_logic_vector(unsigned(tmp_15_fu_413_p3) - unsigned(p_shl2_cast_fu_392_p1));
    tmp_17_fu_432_p2 <= std_logic_vector(unsigned(newIndex7_cast_fu_429_p1) + unsigned(tmp_s_fu_396_p2));
    tmp_18_fu_444_p2 <= std_logic_vector(unsigned(newIndex7_cast_fu_429_p1) + unsigned(tmp_53_cast_fu_409_p1));
    tmp_19_fu_535_p2 <= std_logic_vector(unsigned(tmp_16_reg_601) + unsigned(newIndex9_cast_fu_532_p1));
    tmp_20_fu_476_p3 <= (newIndex8_fu_466_p4 & ap_const_lv4_0);
    tmp_21_fu_488_p3 <= (newIndex8_fu_466_p4 & ap_const_lv1_0);
    tmp_22_fu_500_p2 <= std_logic_vector(unsigned(p_shl4_cast_fu_496_p1) + unsigned(p_shl3_cast_fu_484_p1));
    tmp_23_fu_506_p2 <= std_logic_vector(unsigned(tmp_22_fu_500_p2) + unsigned(tmp_cast_reg_606));
    tmp_53_cast_fu_409_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_14_fu_402_p3),7));
        tmp_57_cast_fu_438_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_17_fu_432_p2),64));

    tmp_58_cast_fu_450_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_18_fu_444_p2),64));
        tmp_59_cast_fu_540_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_19_fu_535_p2),64));

    tmp_63_cast_fu_511_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_23_reg_660),64));
    tmp_8_fu_368_p1 <= j_mid2_fu_352_p3(3 - 1 downto 0);
    tmp_cast_fu_426_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_mid2_reg_577),9));
    tmp_fu_385_p3 <= (tmp_mid2_v_reg_583 & ap_const_lv2_0);
    tmp_mid2_cast_fu_382_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_mid2_v_reg_583),7));
    tmp_mid2_v_fu_360_p3 <= 
        i_2_fu_340_p2 when (exitcond1_fu_346_p2(0) = '1') else 
        i_reg_273;
    tmp_mid_execute_0_address0 <= tmp_mid_execute_0_a_reg_611;

    tmp_mid_execute_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter3, ap_CS_fsm_state4, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            tmp_mid_execute_0_ce0 <= ap_const_logic_1;
        else 
            tmp_mid_execute_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_mid_execute_0_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_10_1_reg_770, ap_CS_fsm_state4, ap_enable_reg_pp0_iter4, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tmp_mid_execute_0_d0 <= tmp_10_1_reg_770;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            tmp_mid_execute_0_d0 <= ap_const_lv32_0;
        else 
            tmp_mid_execute_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    tmp_mid_execute_0_we0_assign_proc : process(tmp_8_reg_592, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_state4, ap_enable_reg_pp0_iter4)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state4) and (tmp_8_reg_592 = ap_const_lv3_0)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_8_reg_592 = ap_const_lv3_0)))) then 
            tmp_mid_execute_0_we0 <= ap_const_logic_1;
        else 
            tmp_mid_execute_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_mid_execute_1_address0 <= tmp_mid_execute_1_a_reg_616;

    tmp_mid_execute_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter3, ap_CS_fsm_state4, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            tmp_mid_execute_1_ce0 <= ap_const_logic_1;
        else 
            tmp_mid_execute_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_mid_execute_1_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_10_1_reg_770, ap_CS_fsm_state4, ap_enable_reg_pp0_iter4, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tmp_mid_execute_1_d0 <= tmp_10_1_reg_770;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            tmp_mid_execute_1_d0 <= ap_const_lv32_0;
        else 
            tmp_mid_execute_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    tmp_mid_execute_1_we0_assign_proc : process(tmp_8_reg_592, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_state4, ap_enable_reg_pp0_iter4)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state4) and (tmp_8_reg_592 = ap_const_lv3_1)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_8_reg_592 = ap_const_lv3_1)))) then 
            tmp_mid_execute_1_we0 <= ap_const_logic_1;
        else 
            tmp_mid_execute_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_mid_execute_2_address0_assign_proc : process(ap_CS_fsm_state3, tmp_mid_execute_2_a_reg_621, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_block_pp0_stage0, tmp_58_cast_fu_450_p1, ap_block_pp0_stage1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            tmp_mid_execute_2_address0 <= tmp_mid_execute_2_a_reg_621;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            tmp_mid_execute_2_address0 <= tmp_58_cast_fu_450_p1(5 - 1 downto 0);
        else 
            tmp_mid_execute_2_address0 <= "XXXXX";
        end if; 
    end process;


    tmp_mid_execute_2_ce0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            tmp_mid_execute_2_ce0 <= ap_const_logic_1;
        else 
            tmp_mid_execute_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_mid_execute_2_d0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_pp0_stage0, tmp_10_1_reg_770, ap_enable_reg_pp0_iter4, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tmp_mid_execute_2_d0 <= tmp_10_1_reg_770;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            tmp_mid_execute_2_d0 <= ap_const_lv32_0;
        else 
            tmp_mid_execute_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    tmp_mid_execute_2_we0_assign_proc : process(tmp_8_reg_592, ap_CS_fsm_state3, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_8_reg_592 = ap_const_lv3_2)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_8_reg_592 = ap_const_lv3_2)))) then 
            tmp_mid_execute_2_we0 <= ap_const_logic_1;
        else 
            tmp_mid_execute_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_mid_execute_3_address0_assign_proc : process(ap_CS_fsm_state3, tmp_mid_execute_3_a_reg_626, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_block_pp0_stage0, tmp_58_cast_fu_450_p1, ap_block_pp0_stage1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            tmp_mid_execute_3_address0 <= tmp_mid_execute_3_a_reg_626;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            tmp_mid_execute_3_address0 <= tmp_58_cast_fu_450_p1(5 - 1 downto 0);
        else 
            tmp_mid_execute_3_address0 <= "XXXXX";
        end if; 
    end process;


    tmp_mid_execute_3_ce0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            tmp_mid_execute_3_ce0 <= ap_const_logic_1;
        else 
            tmp_mid_execute_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_mid_execute_3_d0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_pp0_stage0, tmp_10_1_reg_770, ap_enable_reg_pp0_iter4, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tmp_mid_execute_3_d0 <= tmp_10_1_reg_770;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            tmp_mid_execute_3_d0 <= ap_const_lv32_0;
        else 
            tmp_mid_execute_3_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    tmp_mid_execute_3_we0_assign_proc : process(tmp_8_reg_592, ap_CS_fsm_state3, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_8_reg_592 = ap_const_lv3_3)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_8_reg_592 = ap_const_lv3_3)))) then 
            tmp_mid_execute_3_we0 <= ap_const_logic_1;
        else 
            tmp_mid_execute_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_mid_execute_4_address0_assign_proc : process(ap_CS_fsm_state3, tmp_mid_execute_4_a_reg_631, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_block_pp0_stage0, tmp_58_cast_fu_450_p1, ap_block_pp0_stage1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            tmp_mid_execute_4_address0 <= tmp_mid_execute_4_a_reg_631;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            tmp_mid_execute_4_address0 <= tmp_58_cast_fu_450_p1(5 - 1 downto 0);
        else 
            tmp_mid_execute_4_address0 <= "XXXXX";
        end if; 
    end process;


    tmp_mid_execute_4_ce0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            tmp_mid_execute_4_ce0 <= ap_const_logic_1;
        else 
            tmp_mid_execute_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_mid_execute_4_d0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_pp0_stage0, tmp_10_1_reg_770, ap_enable_reg_pp0_iter4, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tmp_mid_execute_4_d0 <= tmp_10_1_reg_770;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            tmp_mid_execute_4_d0 <= ap_const_lv32_0;
        else 
            tmp_mid_execute_4_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    tmp_mid_execute_4_we0_assign_proc : process(tmp_8_reg_592, ap_CS_fsm_state3, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_8_reg_592 = ap_const_lv3_4)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_8_reg_592 = ap_const_lv3_4)))) then 
            tmp_mid_execute_4_we0 <= ap_const_logic_1;
        else 
            tmp_mid_execute_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_mid_execute_5_address0_assign_proc : process(ap_CS_fsm_state3, tmp_mid_execute_5_a_reg_636, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_block_pp0_stage0, tmp_58_cast_fu_450_p1, ap_block_pp0_stage1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            tmp_mid_execute_5_address0 <= tmp_mid_execute_5_a_reg_636;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            tmp_mid_execute_5_address0 <= tmp_58_cast_fu_450_p1(5 - 1 downto 0);
        else 
            tmp_mid_execute_5_address0 <= "XXXXX";
        end if; 
    end process;


    tmp_mid_execute_5_ce0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            tmp_mid_execute_5_ce0 <= ap_const_logic_1;
        else 
            tmp_mid_execute_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_mid_execute_5_d0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_pp0_stage0, tmp_10_1_reg_770, ap_enable_reg_pp0_iter4, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tmp_mid_execute_5_d0 <= tmp_10_1_reg_770;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            tmp_mid_execute_5_d0 <= ap_const_lv32_0;
        else 
            tmp_mid_execute_5_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    tmp_mid_execute_5_we0_assign_proc : process(tmp_8_reg_592, ap_CS_fsm_state3, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_8_reg_592 = ap_const_lv3_5)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_8_reg_592 = ap_const_lv3_5)))) then 
            tmp_mid_execute_5_we0 <= ap_const_logic_1;
        else 
            tmp_mid_execute_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_mid_execute_6_address0_assign_proc : process(ap_CS_fsm_state3, tmp_mid_execute_6_a_reg_641, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_block_pp0_stage0, tmp_58_cast_fu_450_p1, ap_block_pp0_stage1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            tmp_mid_execute_6_address0 <= tmp_mid_execute_6_a_reg_641;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            tmp_mid_execute_6_address0 <= tmp_58_cast_fu_450_p1(5 - 1 downto 0);
        else 
            tmp_mid_execute_6_address0 <= "XXXXX";
        end if; 
    end process;


    tmp_mid_execute_6_ce0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            tmp_mid_execute_6_ce0 <= ap_const_logic_1;
        else 
            tmp_mid_execute_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_mid_execute_6_d0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_pp0_stage0, tmp_10_1_reg_770, ap_enable_reg_pp0_iter4, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tmp_mid_execute_6_d0 <= tmp_10_1_reg_770;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            tmp_mid_execute_6_d0 <= ap_const_lv32_0;
        else 
            tmp_mid_execute_6_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    tmp_mid_execute_6_we0_assign_proc : process(tmp_8_reg_592, ap_CS_fsm_state3, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_8_reg_592 = ap_const_lv3_6)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_8_reg_592 = ap_const_lv3_6)))) then 
            tmp_mid_execute_6_we0 <= ap_const_logic_1;
        else 
            tmp_mid_execute_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_mid_execute_7_address0_assign_proc : process(ap_CS_fsm_state3, tmp_mid_execute_7_a_reg_646, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_block_pp0_stage0, tmp_58_cast_fu_450_p1, ap_block_pp0_stage1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            tmp_mid_execute_7_address0 <= tmp_mid_execute_7_a_reg_646;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            tmp_mid_execute_7_address0 <= tmp_58_cast_fu_450_p1(5 - 1 downto 0);
        else 
            tmp_mid_execute_7_address0 <= "XXXXX";
        end if; 
    end process;


    tmp_mid_execute_7_ce0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            tmp_mid_execute_7_ce0 <= ap_const_logic_1;
        else 
            tmp_mid_execute_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_mid_execute_7_d0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_pp0_stage0, tmp_10_1_reg_770, ap_enable_reg_pp0_iter4, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tmp_mid_execute_7_d0 <= tmp_10_1_reg_770;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            tmp_mid_execute_7_d0 <= ap_const_lv32_0;
        else 
            tmp_mid_execute_7_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    tmp_mid_execute_7_we0_assign_proc : process(tmp_8_reg_592, ap_CS_fsm_state3, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_8_reg_592 = ap_const_lv3_7)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_8_reg_592 = ap_const_lv3_7)))) then 
            tmp_mid_execute_7_we0 <= ap_const_logic_1;
        else 
            tmp_mid_execute_7_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_s_fu_396_p2 <= std_logic_vector(unsigned(tmp_fu_385_p3) - unsigned(tmp_mid2_cast_fu_382_p1));
end behav;
