

================================================================
== Vivado HLS Report for 'kernel_2mm'
================================================================
* Date:           Tue Sep  3 11:01:30 2019

* Version:        2018.2 (Build 2258646 on Thu Jun 14 20:25:20 MDT 2018)
* Project:        2mmDataflow
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   6.00|     5.079|        0.75|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-------+-------+-------+-------+----------+
    |    Latency    |    Interval   | Pipeline |
    |  min  |  max  |  min  |  max  |   Type   |
    +-------+-------+-------+-------+----------+
    |  39492|  39492|  20770|  20770| dataflow |
    +-------+-------+-------+-------+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 4
* Pipeline : 0
* Dataflow Pipeline: 1
  DF-Pipeline-0: Size = 4, States = { 1 2 3 4 }

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%D_mid = alloca [384 x i32], align 4" [2mmDataflow/2mm.cc:126]   --->   Operation 5 'alloca' 'D_mid' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%C_mid_0 = alloca [72 x i32], align 4" [2mmDataflow/2mm.cc:127]   --->   Operation 6 'alloca' 'C_mid_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%C_mid_1 = alloca [72 x i32], align 4" [2mmDataflow/2mm.cc:127]   --->   Operation 7 'alloca' 'C_mid_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%C_mid_2 = alloca [48 x i32], align 4" [2mmDataflow/2mm.cc:127]   --->   Operation 8 'alloca' 'C_mid_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%C_mid_3 = alloca [48 x i32], align 4" [2mmDataflow/2mm.cc:127]   --->   Operation 9 'alloca' 'C_mid_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%C_mid_4 = alloca [48 x i32], align 4" [2mmDataflow/2mm.cc:127]   --->   Operation 10 'alloca' 'C_mid_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%C_mid_5 = alloca [48 x i32], align 4" [2mmDataflow/2mm.cc:127]   --->   Operation 11 'alloca' 'C_mid_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%C_mid_6 = alloca [48 x i32], align 4" [2mmDataflow/2mm.cc:127]   --->   Operation 12 'alloca' 'C_mid_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%C_mid_7 = alloca [48 x i32], align 4" [2mmDataflow/2mm.cc:127]   --->   Operation 13 'alloca' 'C_mid_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%tmp_mid_0 = alloca [48 x i32], align 4" [2mmDataflow/2mm.cc:128]   --->   Operation 14 'alloca' 'tmp_mid_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%tmp_mid_1 = alloca [48 x i32], align 4" [2mmDataflow/2mm.cc:128]   --->   Operation 15 'alloca' 'tmp_mid_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%tmp_mid_2 = alloca [32 x i32], align 4" [2mmDataflow/2mm.cc:128]   --->   Operation 16 'alloca' 'tmp_mid_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%tmp_mid_3 = alloca [32 x i32], align 4" [2mmDataflow/2mm.cc:128]   --->   Operation 17 'alloca' 'tmp_mid_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%tmp_mid_4 = alloca [32 x i32], align 4" [2mmDataflow/2mm.cc:128]   --->   Operation 18 'alloca' 'tmp_mid_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%tmp_mid_5 = alloca [32 x i32], align 4" [2mmDataflow/2mm.cc:128]   --->   Operation 19 'alloca' 'tmp_mid_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%tmp_mid_6 = alloca [32 x i32], align 4" [2mmDataflow/2mm.cc:128]   --->   Operation 20 'alloca' 'tmp_mid_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%tmp_mid_7 = alloca [32 x i32], align 4" [2mmDataflow/2mm.cc:128]   --->   Operation 21 'alloca' 'tmp_mid_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [2/2] (0.00ns)   --->   "call fastcc void @func15([192 x i32]* %A_0, [192 x i32]* %A_1, [216 x i32]* %B_0, [216 x i32]* %B_1, [72 x i32]* %C_0, [72 x i32]* %C_1, [48 x i32]* %C_2, [48 x i32]* %C_3, [48 x i32]* %C_4, [48 x i32]* %C_5, [48 x i32]* %C_6, [48 x i32]* %C_7, [384 x i32]* %D, [48 x i32]* %tmp_mid_0, [48 x i32]* %tmp_mid_1, [32 x i32]* %tmp_mid_2, [32 x i32]* %tmp_mid_3, [32 x i32]* %tmp_mid_4, [32 x i32]* %tmp_mid_5, [32 x i32]* %tmp_mid_6, [32 x i32]* %tmp_mid_7, [72 x i32]* %C_mid_0, [72 x i32]* %C_mid_1, [48 x i32]* %C_mid_2, [48 x i32]* %C_mid_3, [48 x i32]* %C_mid_4, [48 x i32]* %C_mid_5, [48 x i32]* %C_mid_6, [48 x i32]* %C_mid_7, [384 x i32]* %D_mid)" [2mmDataflow/2mm.cc:133]   --->   Operation 22 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 2 <SV = 1> <Delay = 0.00>
ST_2 : Operation 23 [1/2] (0.00ns)   --->   "call fastcc void @func15([192 x i32]* %A_0, [192 x i32]* %A_1, [216 x i32]* %B_0, [216 x i32]* %B_1, [72 x i32]* %C_0, [72 x i32]* %C_1, [48 x i32]* %C_2, [48 x i32]* %C_3, [48 x i32]* %C_4, [48 x i32]* %C_5, [48 x i32]* %C_6, [48 x i32]* %C_7, [384 x i32]* %D, [48 x i32]* %tmp_mid_0, [48 x i32]* %tmp_mid_1, [32 x i32]* %tmp_mid_2, [32 x i32]* %tmp_mid_3, [32 x i32]* %tmp_mid_4, [32 x i32]* %tmp_mid_5, [32 x i32]* %tmp_mid_6, [32 x i32]* %tmp_mid_7, [72 x i32]* %C_mid_0, [72 x i32]* %C_mid_1, [48 x i32]* %C_mid_2, [48 x i32]* %C_mid_3, [48 x i32]* %C_mid_4, [48 x i32]* %C_mid_5, [48 x i32]* %C_mid_6, [48 x i32]* %C_mid_7, [384 x i32]* %D_mid)" [2mmDataflow/2mm.cc:133]   --->   Operation 23 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 3 <SV = 2> <Delay = 0.00>
ST_3 : Operation 24 [2/2] (0.00ns)   --->   "call fastcc void @func24([72 x i32]* %C_mid_0, [72 x i32]* %C_mid_1, [48 x i32]* %C_mid_2, [48 x i32]* %C_mid_3, [48 x i32]* %C_mid_4, [48 x i32]* %C_mid_5, [48 x i32]* %C_mid_6, [48 x i32]* %C_mid_7, [384 x i32]* %D_mid, [48 x i32]* %tmp_mid_0, [48 x i32]* %tmp_mid_1, [32 x i32]* %tmp_mid_2, [32 x i32]* %tmp_mid_3, [32 x i32]* %tmp_mid_4, [32 x i32]* %tmp_mid_5, [32 x i32]* %tmp_mid_6, [32 x i32]* %tmp_mid_7, [384 x i32]* %D_output)" [2mmDataflow/2mm.cc:142]   --->   Operation 24 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 4 <SV = 3> <Delay = 0.00>
ST_4 : Operation 25 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecDataflowPipeline(i32 -1, [1 x i8]* @p_str) nounwind" [2mmDataflow/2mm.cc:123]   --->   Operation 25 'specdataflowpipeline' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 26 [1/2] (0.00ns)   --->   "call fastcc void @func24([72 x i32]* %C_mid_0, [72 x i32]* %C_mid_1, [48 x i32]* %C_mid_2, [48 x i32]* %C_mid_3, [48 x i32]* %C_mid_4, [48 x i32]* %C_mid_5, [48 x i32]* %C_mid_6, [48 x i32]* %C_mid_7, [384 x i32]* %D_mid, [48 x i32]* %tmp_mid_0, [48 x i32]* %tmp_mid_1, [32 x i32]* %tmp_mid_2, [32 x i32]* %tmp_mid_3, [32 x i32]* %tmp_mid_4, [32 x i32]* %tmp_mid_5, [32 x i32]* %tmp_mid_6, [32 x i32]* %tmp_mid_7, [384 x i32]* %D_output)" [2mmDataflow/2mm.cc:142]   --->   Operation 26 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_4 : Operation 27 [1/1] (0.00ns)   --->   "ret void" [2mmDataflow/2mm.cc:150]   --->   Operation 27 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 6ns, clock uncertainty: 0.75ns.

 <State 1>: 0ns
The critical path consists of the following:

 <State 2>: 0ns
The critical path consists of the following:

 <State 3>: 0ns
The critical path consists of the following:

 <State 4>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
