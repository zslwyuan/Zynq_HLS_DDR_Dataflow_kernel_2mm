<profile>

<section name = "Vivado HLS Report for 'writeData'" level="0">
<item name = "Date">Mon Sep  2 22:41:20 2019
</item>
<item name = "Version">2018.2 (Build 2258646 on Thu Jun 14 20:25:20 MDT 2018)</item>
<item name = "Project">2mmDataflow</item>
<item name = "Solution">solution1</item>
<item name = "Product family">zynq</item>
<item name = "Target device">xc7z020clg484-1</item>
</section>

<section name = "Performance Estimates" level="0">
<item name = "Timing (ns)">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="4">Clock, Target, Estimated, Uncertainty</keys>
<column name="ap_clk">6.00, 5.250, 0.75</column>
</table>
</item>
</section>
</item>
<item name = "Latency (clock cycles)">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="6">, min, max, min, max, Type</keys>
<column name="">393, 393, 393, 393, none</column>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="0">
<keys size="7">Instance, Module, min, max, min, max, Type</keys>
</table>
</item>
<item name = "Loop"><table name="" hasTotal="0">
<keys size="8">Loop Name, min, max, Latency, achieved, target, Count, Pipelined</keys>
<column name="- Loop 1">391, 391, 9, 1, 1, 384, yes</column>
</table>
</item>
</section>
</item>
</section>
</item>
</section>

<section name = "Utilization Estimates" level="0">
<item name = "Summary"><table name="" hasTotal="1">
<keys size="5">Name, BRAM_18K, DSP48E, FF, LUT</keys>
<column name="DSP">-, -, -, -</column>
<column name="Expression">-, -, 0, 159</column>
<column name="FIFO">-, -, -, -</column>
<column name="Instance">-, -, -, -</column>
<column name="Memory">-, -, -, -</column>
<column name="Multiplexer">-, -, -, 138</column>
<column name="Register">0, -, 211, 32</column>
<specialColumn name="Available">280, 220, 106400, 53200</specialColumn>
<specialColumn name="Utilization (%)">0, 0, ~0, ~0</specialColumn>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="1">
<keys size="6">Instance, Module, BRAM_18K, DSP48E, FF, LUT</keys>
</table>
</item>
<item name = "DSP48"><table name="" hasTotal="0">
<keys size="3">Instance, Module, Expression</keys>
</table>
</item>
<item name = "Memory"><table name="" hasTotal="1">
<keys size="9">Memory, Module, BRAM_18K, FF, LUT, Words, Bits, Banks, W*Bits*Banks</keys>
</table>
</item>
<item name = "FIFO"><table name="" hasTotal="1">
<keys size="7">Name, BRAM_18K, FF, LUT, Depth, Bits, Size:D*B</keys>
</table>
</item>
<item name = "Expression"><table name="" hasTotal="1">
<keys size="7">Variable Name, Operation, DSP48E, FF, LUT, Bitwidth P0, Bitwidth P1</keys>
<column name="i_1_i_fu_168_p2">+, 0, 0, 15, 5, 1</column>
<column name="indvar_flatten_next_s_fu_162_p2">+, 0, 0, 15, 9, 1</column>
<column name="j_fu_226_p2">+, 0, 0, 15, 5, 1</column>
<column name="sum_i_fu_253_p2">+, 0, 0, 39, 32, 32</column>
<column name="tmp_5_i_fu_238_p2">+, 0, 0, 12, 12, 12</column>
<column name="tmp_4_i_fu_220_p2">-, 0, 0, 13, 11, 11</column>
<column name="ap_block_pp0_stage0_01001">and, 0, 0, 2, 1, 1</column>
<column name="ap_block_state10_pp0_stage0_iter8">and, 0, 0, 2, 1, 1</column>
<column name="ap_block_state4_io">and, 0, 0, 2, 1, 1</column>
<column name="ap_block_state5_io">and, 0, 0, 2, 1, 1</column>
<column name="exitcond9_i_fu_174_p2">icmp, 0, 0, 11, 5, 5</column>
<column name="exitcond_flatten_i_fu_156_p2">icmp, 0, 0, 13, 9, 9</column>
<column name="ap_block_pp0_stage0_11001">or, 0, 0, 2, 1, 1</column>
<column name="ap_block_state1">or, 0, 0, 2, 1, 1</column>
<column name="j_mid2_i_fu_180_p3">select, 0, 0, 5, 1, 1</column>
<column name="tmp_mid2_v_i_fu_188_p3">select, 0, 0, 5, 1, 5</column>
<column name="ap_enable_pp0">xor, 0, 0, 2, 1, 2</column>
<column name="ap_enable_reg_pp0_iter1">xor, 0, 0, 2, 2, 1</column>
</table>
</item>
<item name = "Multiplexer"><table name="" hasTotal="1">
<keys size="5">Name, LUT, Input Size, Bits, Total Bits</keys>
<column name="D_output_AXI_blk_n_AW">9, 2, 1, 2</column>
<column name="D_output_AXI_blk_n_B">9, 2, 1, 2</column>
<column name="D_output_AXI_blk_n_W">9, 2, 1, 2</column>
<column name="D_output_AXI_offset_blk_n">9, 2, 1, 2</column>
<column name="ap_NS_fsm">21, 4, 1, 4</column>
<column name="ap_done">9, 2, 1, 2</column>
<column name="ap_enable_reg_pp0_iter1">9, 2, 1, 2</column>
<column name="ap_enable_reg_pp0_iter8">9, 2, 1, 2</column>
<column name="ap_phi_mux_i_i_phi_fu_124_p4">9, 2, 5, 10</column>
<column name="ap_sig_ioackin_m_axi_D_output_AXI_AWREADY">9, 2, 1, 2</column>
<column name="ap_sig_ioackin_m_axi_D_output_AXI_WREADY">9, 2, 1, 2</column>
<column name="i_i_reg_120">9, 2, 5, 10</column>
<column name="indvar_flatten_i_reg_109">9, 2, 9, 18</column>
<column name="j_i_reg_131">9, 2, 5, 10</column>
</table>
</item>
<item name = "Register"><table name="" hasTotal="1">
<keys size="5">Name, FF, LUT, Bits, Const Bits</keys>
<column name="D_output_load_reg_318">32, 0, 32, 0</column>
<column name="ap_CS_fsm">3, 0, 3, 0</column>
<column name="ap_done_reg">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp0_iter0">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp0_iter1">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp0_iter2">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp0_iter3">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp0_iter4">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp0_iter5">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp0_iter6">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp0_iter7">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp0_iter8">1, 0, 1, 0</column>
<column name="ap_reg_ioackin_m_axi_D_output_AXI_AWREADY">1, 0, 1, 0</column>
<column name="ap_reg_ioackin_m_axi_D_output_AXI_WREADY">1, 0, 1, 0</column>
<column name="exitcond_flatten_i_reg_273">1, 0, 1, 0</column>
<column name="i_i_reg_120">5, 0, 5, 0</column>
<column name="indvar_flatten_i_reg_109">9, 0, 9, 0</column>
<column name="j_i_reg_131">5, 0, 5, 0</column>
<column name="j_mid2_i_reg_282">5, 0, 5, 0</column>
<column name="sext_cast_i_reg_268">30, 0, 32, 2</column>
<column name="sum_i_reg_302">32, 0, 32, 0</column>
<column name="tmp_4_i_reg_292">8, 0, 11, 3</column>
<column name="tmp_mid2_v_i_reg_287">5, 0, 5, 0</column>
<column name="exitcond_flatten_i_reg_273">64, 32, 1, 0</column>
</table>
</item>
</section>
</item>
</section>

<section name = "Interface" level="0">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="6">RTL Ports, Dir, Bits, Protocol, Source Object, C Type</keys>
<column name="ap_clk">in, 1, ap_ctrl_hs, writeData, return value</column>
<column name="ap_rst">in, 1, ap_ctrl_hs, writeData, return value</column>
<column name="ap_start">in, 1, ap_ctrl_hs, writeData, return value</column>
<column name="ap_done">out, 1, ap_ctrl_hs, writeData, return value</column>
<column name="ap_continue">in, 1, ap_ctrl_hs, writeData, return value</column>
<column name="ap_idle">out, 1, ap_ctrl_hs, writeData, return value</column>
<column name="ap_ready">out, 1, ap_ctrl_hs, writeData, return value</column>
<column name="m_axi_D_output_AXI_AWVALID">out, 1, m_axi, D_output_AXI, pointer</column>
<column name="m_axi_D_output_AXI_AWREADY">in, 1, m_axi, D_output_AXI, pointer</column>
<column name="m_axi_D_output_AXI_AWADDR">out, 32, m_axi, D_output_AXI, pointer</column>
<column name="m_axi_D_output_AXI_AWID">out, 1, m_axi, D_output_AXI, pointer</column>
<column name="m_axi_D_output_AXI_AWLEN">out, 32, m_axi, D_output_AXI, pointer</column>
<column name="m_axi_D_output_AXI_AWSIZE">out, 3, m_axi, D_output_AXI, pointer</column>
<column name="m_axi_D_output_AXI_AWBURST">out, 2, m_axi, D_output_AXI, pointer</column>
<column name="m_axi_D_output_AXI_AWLOCK">out, 2, m_axi, D_output_AXI, pointer</column>
<column name="m_axi_D_output_AXI_AWCACHE">out, 4, m_axi, D_output_AXI, pointer</column>
<column name="m_axi_D_output_AXI_AWPROT">out, 3, m_axi, D_output_AXI, pointer</column>
<column name="m_axi_D_output_AXI_AWQOS">out, 4, m_axi, D_output_AXI, pointer</column>
<column name="m_axi_D_output_AXI_AWREGION">out, 4, m_axi, D_output_AXI, pointer</column>
<column name="m_axi_D_output_AXI_AWUSER">out, 1, m_axi, D_output_AXI, pointer</column>
<column name="m_axi_D_output_AXI_WVALID">out, 1, m_axi, D_output_AXI, pointer</column>
<column name="m_axi_D_output_AXI_WREADY">in, 1, m_axi, D_output_AXI, pointer</column>
<column name="m_axi_D_output_AXI_WDATA">out, 32, m_axi, D_output_AXI, pointer</column>
<column name="m_axi_D_output_AXI_WSTRB">out, 4, m_axi, D_output_AXI, pointer</column>
<column name="m_axi_D_output_AXI_WLAST">out, 1, m_axi, D_output_AXI, pointer</column>
<column name="m_axi_D_output_AXI_WID">out, 1, m_axi, D_output_AXI, pointer</column>
<column name="m_axi_D_output_AXI_WUSER">out, 1, m_axi, D_output_AXI, pointer</column>
<column name="m_axi_D_output_AXI_ARVALID">out, 1, m_axi, D_output_AXI, pointer</column>
<column name="m_axi_D_output_AXI_ARREADY">in, 1, m_axi, D_output_AXI, pointer</column>
<column name="m_axi_D_output_AXI_ARADDR">out, 32, m_axi, D_output_AXI, pointer</column>
<column name="m_axi_D_output_AXI_ARID">out, 1, m_axi, D_output_AXI, pointer</column>
<column name="m_axi_D_output_AXI_ARLEN">out, 32, m_axi, D_output_AXI, pointer</column>
<column name="m_axi_D_output_AXI_ARSIZE">out, 3, m_axi, D_output_AXI, pointer</column>
<column name="m_axi_D_output_AXI_ARBURST">out, 2, m_axi, D_output_AXI, pointer</column>
<column name="m_axi_D_output_AXI_ARLOCK">out, 2, m_axi, D_output_AXI, pointer</column>
<column name="m_axi_D_output_AXI_ARCACHE">out, 4, m_axi, D_output_AXI, pointer</column>
<column name="m_axi_D_output_AXI_ARPROT">out, 3, m_axi, D_output_AXI, pointer</column>
<column name="m_axi_D_output_AXI_ARQOS">out, 4, m_axi, D_output_AXI, pointer</column>
<column name="m_axi_D_output_AXI_ARREGION">out, 4, m_axi, D_output_AXI, pointer</column>
<column name="m_axi_D_output_AXI_ARUSER">out, 1, m_axi, D_output_AXI, pointer</column>
<column name="m_axi_D_output_AXI_RVALID">in, 1, m_axi, D_output_AXI, pointer</column>
<column name="m_axi_D_output_AXI_RREADY">out, 1, m_axi, D_output_AXI, pointer</column>
<column name="m_axi_D_output_AXI_RDATA">in, 32, m_axi, D_output_AXI, pointer</column>
<column name="m_axi_D_output_AXI_RLAST">in, 1, m_axi, D_output_AXI, pointer</column>
<column name="m_axi_D_output_AXI_RID">in, 1, m_axi, D_output_AXI, pointer</column>
<column name="m_axi_D_output_AXI_RUSER">in, 1, m_axi, D_output_AXI, pointer</column>
<column name="m_axi_D_output_AXI_RRESP">in, 2, m_axi, D_output_AXI, pointer</column>
<column name="m_axi_D_output_AXI_BVALID">in, 1, m_axi, D_output_AXI, pointer</column>
<column name="m_axi_D_output_AXI_BREADY">out, 1, m_axi, D_output_AXI, pointer</column>
<column name="m_axi_D_output_AXI_BRESP">in, 2, m_axi, D_output_AXI, pointer</column>
<column name="m_axi_D_output_AXI_BID">in, 1, m_axi, D_output_AXI, pointer</column>
<column name="m_axi_D_output_AXI_BUSER">in, 1, m_axi, D_output_AXI, pointer</column>
<column name="D_output_AXI_offset_dout">in, 32, ap_fifo, D_output_AXI_offset, pointer</column>
<column name="D_output_AXI_offset_empty_n">in, 1, ap_fifo, D_output_AXI_offset, pointer</column>
<column name="D_output_AXI_offset_read">out, 1, ap_fifo, D_output_AXI_offset, pointer</column>
<column name="D_output_address0">out, 9, ap_memory, D_output, array</column>
<column name="D_output_ce0">out, 1, ap_memory, D_output, array</column>
<column name="D_output_q0">in, 32, ap_memory, D_output, array</column>
</table>
</item>
</section>
</profile>
