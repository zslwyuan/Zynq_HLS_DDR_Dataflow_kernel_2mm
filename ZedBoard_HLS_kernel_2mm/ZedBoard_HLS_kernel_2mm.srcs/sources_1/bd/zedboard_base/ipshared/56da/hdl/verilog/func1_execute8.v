// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module func1_execute8 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        tmp_mid_execute_0_address0,
        tmp_mid_execute_0_ce0,
        tmp_mid_execute_0_we0,
        tmp_mid_execute_0_d0,
        tmp_mid_execute_0_q0,
        tmp_mid_execute_1_address0,
        tmp_mid_execute_1_ce0,
        tmp_mid_execute_1_we0,
        tmp_mid_execute_1_d0,
        tmp_mid_execute_1_q0,
        tmp_mid_execute_2_address0,
        tmp_mid_execute_2_ce0,
        tmp_mid_execute_2_we0,
        tmp_mid_execute_2_d0,
        tmp_mid_execute_2_q0,
        tmp_mid_execute_3_address0,
        tmp_mid_execute_3_ce0,
        tmp_mid_execute_3_we0,
        tmp_mid_execute_3_d0,
        tmp_mid_execute_3_q0,
        tmp_mid_execute_4_address0,
        tmp_mid_execute_4_ce0,
        tmp_mid_execute_4_we0,
        tmp_mid_execute_4_d0,
        tmp_mid_execute_4_q0,
        tmp_mid_execute_5_address0,
        tmp_mid_execute_5_ce0,
        tmp_mid_execute_5_we0,
        tmp_mid_execute_5_d0,
        tmp_mid_execute_5_q0,
        tmp_mid_execute_6_address0,
        tmp_mid_execute_6_ce0,
        tmp_mid_execute_6_we0,
        tmp_mid_execute_6_d0,
        tmp_mid_execute_6_q0,
        tmp_mid_execute_7_address0,
        tmp_mid_execute_7_ce0,
        tmp_mid_execute_7_we0,
        tmp_mid_execute_7_d0,
        tmp_mid_execute_7_q0,
        A_0_address0,
        A_0_ce0,
        A_0_q0,
        A_1_address0,
        A_1_ce0,
        A_1_q0,
        B_0_address0,
        B_0_ce0,
        B_0_q0,
        B_1_address0,
        B_1_ce0,
        B_1_q0
);

parameter    ap_ST_fsm_state1 = 9'd1;
parameter    ap_ST_fsm_state2 = 9'd2;
parameter    ap_ST_fsm_state3 = 9'd4;
parameter    ap_ST_fsm_state4 = 9'd8;
parameter    ap_ST_fsm_pp0_stage0 = 9'd16;
parameter    ap_ST_fsm_pp0_stage1 = 9'd32;
parameter    ap_ST_fsm_pp0_stage2 = 9'd64;
parameter    ap_ST_fsm_pp0_stage3 = 9'd128;
parameter    ap_ST_fsm_state22 = 9'd256;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] tmp_mid_execute_0_address0;
output   tmp_mid_execute_0_ce0;
output   tmp_mid_execute_0_we0;
output  [31:0] tmp_mid_execute_0_d0;
input  [31:0] tmp_mid_execute_0_q0;
output  [5:0] tmp_mid_execute_1_address0;
output   tmp_mid_execute_1_ce0;
output   tmp_mid_execute_1_we0;
output  [31:0] tmp_mid_execute_1_d0;
input  [31:0] tmp_mid_execute_1_q0;
output  [4:0] tmp_mid_execute_2_address0;
output   tmp_mid_execute_2_ce0;
output   tmp_mid_execute_2_we0;
output  [31:0] tmp_mid_execute_2_d0;
input  [31:0] tmp_mid_execute_2_q0;
output  [4:0] tmp_mid_execute_3_address0;
output   tmp_mid_execute_3_ce0;
output   tmp_mid_execute_3_we0;
output  [31:0] tmp_mid_execute_3_d0;
input  [31:0] tmp_mid_execute_3_q0;
output  [4:0] tmp_mid_execute_4_address0;
output   tmp_mid_execute_4_ce0;
output   tmp_mid_execute_4_we0;
output  [31:0] tmp_mid_execute_4_d0;
input  [31:0] tmp_mid_execute_4_q0;
output  [4:0] tmp_mid_execute_5_address0;
output   tmp_mid_execute_5_ce0;
output   tmp_mid_execute_5_we0;
output  [31:0] tmp_mid_execute_5_d0;
input  [31:0] tmp_mid_execute_5_q0;
output  [4:0] tmp_mid_execute_6_address0;
output   tmp_mid_execute_6_ce0;
output   tmp_mid_execute_6_we0;
output  [31:0] tmp_mid_execute_6_d0;
input  [31:0] tmp_mid_execute_6_q0;
output  [4:0] tmp_mid_execute_7_address0;
output   tmp_mid_execute_7_ce0;
output   tmp_mid_execute_7_we0;
output  [31:0] tmp_mid_execute_7_d0;
input  [31:0] tmp_mid_execute_7_q0;
output  [7:0] A_0_address0;
output   A_0_ce0;
input  [31:0] A_0_q0;
output  [7:0] A_1_address0;
output   A_1_ce0;
input  [31:0] A_1_q0;
output  [7:0] B_0_address0;
output   B_0_ce0;
input  [31:0] B_0_q0;
output  [7:0] B_1_address0;
output   B_1_ce0;
input  [31:0] B_1_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg tmp_mid_execute_0_ce0;
reg tmp_mid_execute_0_we0;
reg[31:0] tmp_mid_execute_0_d0;
reg tmp_mid_execute_1_ce0;
reg tmp_mid_execute_1_we0;
reg[31:0] tmp_mid_execute_1_d0;
reg[4:0] tmp_mid_execute_2_address0;
reg tmp_mid_execute_2_ce0;
reg tmp_mid_execute_2_we0;
reg[31:0] tmp_mid_execute_2_d0;
reg[4:0] tmp_mid_execute_3_address0;
reg tmp_mid_execute_3_ce0;
reg tmp_mid_execute_3_we0;
reg[31:0] tmp_mid_execute_3_d0;
reg[4:0] tmp_mid_execute_4_address0;
reg tmp_mid_execute_4_ce0;
reg tmp_mid_execute_4_we0;
reg[31:0] tmp_mid_execute_4_d0;
reg[4:0] tmp_mid_execute_5_address0;
reg tmp_mid_execute_5_ce0;
reg tmp_mid_execute_5_we0;
reg[31:0] tmp_mid_execute_5_d0;
reg[4:0] tmp_mid_execute_6_address0;
reg tmp_mid_execute_6_ce0;
reg tmp_mid_execute_6_we0;
reg[31:0] tmp_mid_execute_6_d0;
reg[4:0] tmp_mid_execute_7_address0;
reg tmp_mid_execute_7_ce0;
reg tmp_mid_execute_7_we0;
reg[31:0] tmp_mid_execute_7_d0;
reg A_0_ce0;
reg A_1_ce0;
reg B_0_ce0;
reg B_1_ce0;

(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [4:0] k_reg_295;
wire   [8:0] indvar_flatten_next_fu_334_p2;
reg   [8:0] indvar_flatten_next_reg_572;
wire    ap_CS_fsm_state2;
wire   [4:0] j_mid2_fu_352_p3;
reg   [4:0] j_mid2_reg_577;
wire   [0:0] exitcond_flatten_fu_328_p2;
wire   [4:0] tmp_mid2_v_fu_360_p3;
reg   [4:0] tmp_mid2_v_reg_583;
wire   [2:0] tmp_8_fu_368_p1;
reg   [2:0] tmp_8_reg_592;
reg   [1:0] tmp_10_reg_596;
wire   [8:0] tmp_16_fu_420_p2;
reg   [8:0] tmp_16_reg_601;
wire    ap_CS_fsm_state3;
wire   [8:0] tmp_cast_fu_426_p1;
reg   [8:0] tmp_cast_reg_606;
reg   [5:0] tmp_mid_execute_0_a_reg_611;
reg   [5:0] tmp_mid_execute_1_a_reg_616;
reg   [4:0] tmp_mid_execute_2_a_reg_621;
reg   [4:0] tmp_mid_execute_3_a_reg_626;
reg   [4:0] tmp_mid_execute_4_a_reg_631;
reg   [4:0] tmp_mid_execute_5_a_reg_636;
reg   [4:0] tmp_mid_execute_6_a_reg_641;
reg   [4:0] tmp_mid_execute_7_a_reg_646;
wire   [0:0] exitcond_fu_460_p2;
reg   [0:0] exitcond_reg_651;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state5_pp0_stage0_iter0;
wire    ap_block_state9_pp0_stage0_iter1;
wire    ap_block_state13_pp0_stage0_iter2;
wire    ap_block_state17_pp0_stage0_iter3;
wire    ap_block_state21_pp0_stage0_iter4;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] exitcond_reg_651_pp0_iter1_reg;
reg   [0:0] exitcond_reg_651_pp0_iter2_reg;
reg   [0:0] exitcond_reg_651_pp0_iter3_reg;
wire   [3:0] newIndex8_fu_466_p4;
reg   [3:0] newIndex8_reg_655;
reg   [3:0] newIndex8_reg_655_pp0_iter1_reg;
wire   [8:0] tmp_23_fu_506_p2;
reg   [8:0] tmp_23_reg_660;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state6_pp0_stage1_iter0;
wire    ap_block_state10_pp0_stage1_iter1;
wire    ap_block_state14_pp0_stage1_iter2;
wire    ap_block_state18_pp0_stage1_iter3;
wire    ap_block_pp0_stage1_11001;
reg   [7:0] B_1_addr_reg_670;
reg  signed [31:0] B_0_load_reg_675;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state7_pp0_stage2_iter0;
wire    ap_block_state11_pp0_stage2_iter1;
wire    ap_block_state15_pp0_stage2_iter2;
wire    ap_block_state19_pp0_stage2_iter3;
wire    ap_block_pp0_stage2_11001;
reg  signed [31:0] B_1_load_reg_680;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state8_pp0_stage3_iter0;
wire    ap_block_state12_pp0_stage3_iter1;
wire    ap_block_state16_pp0_stage3_iter2;
wire    ap_block_state20_pp0_stage3_iter3;
wire    ap_block_pp0_stage3_11001;
wire   [4:0] k_9_1_fu_521_p2;
reg   [4:0] k_9_1_reg_685;
reg    ap_enable_reg_pp0_iter0;
reg   [7:0] A_1_addr_reg_695;
wire  signed [31:0] grp_fu_516_p2;
reg  signed [31:0] tmp1_reg_700;
reg  signed [31:0] A_0_load_reg_705;
wire  signed [31:0] grp_fu_527_p2;
reg  signed [31:0] tmp2_reg_710;
reg  signed [31:0] A_1_load_reg_715;
wire   [31:0] grp_fu_546_p2;
reg   [31:0] tmp_9_reg_720;
reg    ap_enable_reg_pp0_iter3;
wire   [31:0] grp_fu_550_p2;
reg   [31:0] tmp_9_1_reg_765;
wire   [31:0] tmp_10_1_fu_558_p2;
reg   [31:0] tmp_10_1_reg_770;
wire   [4:0] j_2_fu_564_p2;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state4;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state5;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage3_subdone;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter4;
reg   [8:0] indvar_flatten_reg_262;
reg   [4:0] i_reg_273;
reg   [4:0] j_reg_284;
reg   [4:0] ap_phi_mux_k_phi_fu_299_p4;
wire    ap_block_pp0_stage0;
wire   [31:0] ap_phi_reg_pp0_iter0_tmp_mid_execute_load_reg_307;
reg   [31:0] ap_phi_reg_pp0_iter1_tmp_mid_execute_load_reg_307;
reg   [31:0] ap_phi_reg_pp0_iter2_tmp_mid_execute_load_reg_307;
reg   [31:0] ap_phi_reg_pp0_iter3_tmp_mid_execute_load_reg_307;
wire  signed [63:0] tmp_57_cast_fu_438_p1;
wire   [63:0] tmp_58_cast_fu_450_p1;
wire   [63:0] tmp_63_cast_fu_511_p1;
wire    ap_block_pp0_stage1;
wire  signed [63:0] tmp_59_cast_fu_540_p1;
wire    ap_block_pp0_stage3;
wire    ap_block_pp0_stage2;
wire   [0:0] exitcond1_fu_346_p2;
wire   [4:0] i_2_fu_340_p2;
wire   [6:0] tmp_fu_385_p3;
wire   [6:0] tmp_mid2_cast_fu_382_p1;
wire   [5:0] tmp_14_fu_402_p3;
wire   [8:0] tmp_15_fu_413_p3;
wire   [8:0] p_shl2_cast_fu_392_p1;
wire   [6:0] newIndex7_cast_fu_429_p1;
wire   [6:0] tmp_s_fu_396_p2;
wire   [6:0] tmp_17_fu_432_p2;
wire   [6:0] tmp_53_cast_fu_409_p1;
wire   [6:0] tmp_18_fu_444_p2;
wire   [7:0] tmp_20_fu_476_p3;
wire   [4:0] tmp_21_fu_488_p3;
wire   [8:0] p_shl4_cast_fu_496_p1;
wire   [8:0] p_shl3_cast_fu_484_p1;
wire   [8:0] tmp_22_fu_500_p2;
wire   [7:0] grp_fu_516_p1;
wire   [7:0] grp_fu_527_p1;
wire   [8:0] newIndex9_cast_fu_532_p1;
wire   [8:0] tmp_19_fu_535_p2;
wire   [31:0] tmp3_fu_554_p2;
reg   [8:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 9'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
end

kernel_2mm_wrappebkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
kernel_2mm_wrappebkb_U42(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(B_0_load_reg_675),
    .din1(grp_fu_516_p1),
    .ce(1'b1),
    .dout(grp_fu_516_p2)
);

kernel_2mm_wrappebkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
kernel_2mm_wrappebkb_U43(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(B_1_load_reg_680),
    .din1(grp_fu_527_p1),
    .ce(1'b1),
    .dout(grp_fu_527_p2)
);

kernel_2mm_wrappecud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kernel_2mm_wrappecud_U44(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(A_0_load_reg_705),
    .din1(tmp1_reg_700),
    .ce(1'b1),
    .dout(grp_fu_546_p2)
);

kernel_2mm_wrappecud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kernel_2mm_wrappecud_U45(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp2_reg_710),
    .din1(A_1_load_reg_715),
    .ce(1'b1),
    .dout(grp_fu_550_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state5) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state5)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state5);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (tmp_8_reg_592 == 3'd7) & (exitcond_reg_651_pp0_iter3_reg == 1'd0))) begin
        ap_phi_reg_pp0_iter3_tmp_mid_execute_load_reg_307 <= tmp_mid_execute_7_q0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (tmp_8_reg_592 == 3'd6) & (exitcond_reg_651_pp0_iter3_reg == 1'd0))) begin
        ap_phi_reg_pp0_iter3_tmp_mid_execute_load_reg_307 <= tmp_mid_execute_6_q0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (tmp_8_reg_592 == 3'd5) & (exitcond_reg_651_pp0_iter3_reg == 1'd0))) begin
        ap_phi_reg_pp0_iter3_tmp_mid_execute_load_reg_307 <= tmp_mid_execute_5_q0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (tmp_8_reg_592 == 3'd4) & (exitcond_reg_651_pp0_iter3_reg == 1'd0))) begin
        ap_phi_reg_pp0_iter3_tmp_mid_execute_load_reg_307 <= tmp_mid_execute_4_q0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (tmp_8_reg_592 == 3'd3) & (exitcond_reg_651_pp0_iter3_reg == 1'd0))) begin
        ap_phi_reg_pp0_iter3_tmp_mid_execute_load_reg_307 <= tmp_mid_execute_3_q0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (tmp_8_reg_592 == 3'd2) & (exitcond_reg_651_pp0_iter3_reg == 1'd0))) begin
        ap_phi_reg_pp0_iter3_tmp_mid_execute_load_reg_307 <= tmp_mid_execute_2_q0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (tmp_8_reg_592 == 3'd1) & (exitcond_reg_651_pp0_iter3_reg == 1'd0))) begin
        ap_phi_reg_pp0_iter3_tmp_mid_execute_load_reg_307 <= tmp_mid_execute_1_q0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (tmp_8_reg_592 == 3'd0) & (exitcond_reg_651_pp0_iter3_reg == 1'd0))) begin
        ap_phi_reg_pp0_iter3_tmp_mid_execute_load_reg_307 <= tmp_mid_execute_0_q0;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_phi_reg_pp0_iter3_tmp_mid_execute_load_reg_307 <= ap_phi_reg_pp0_iter2_tmp_mid_execute_load_reg_307;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        i_reg_273 <= tmp_mid2_v_reg_583;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_reg_273 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        indvar_flatten_reg_262 <= indvar_flatten_next_reg_572;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_262 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        j_reg_284 <= j_2_fu_564_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        j_reg_284 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_reg_651 == 1'd0))) begin
        k_reg_295 <= k_9_1_reg_685;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        k_reg_295 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        A_0_load_reg_705 <= A_0_q0;
        exitcond_reg_651 <= exitcond_fu_460_p2;
        exitcond_reg_651_pp0_iter1_reg <= exitcond_reg_651;
        exitcond_reg_651_pp0_iter2_reg <= exitcond_reg_651_pp0_iter1_reg;
        exitcond_reg_651_pp0_iter3_reg <= exitcond_reg_651_pp0_iter2_reg;
        newIndex8_reg_655_pp0_iter1_reg <= newIndex8_reg_655;
        tmp2_reg_710 <= grp_fu_527_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        A_1_addr_reg_695 <= tmp_59_cast_fu_540_p1;
        tmp1_reg_700 <= grp_fu_516_p2;
        tmp_10_1_reg_770 <= tmp_10_1_fu_558_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        A_1_load_reg_715 <= A_1_q0;
        tmp_9_reg_720 <= grp_fu_546_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (exitcond_reg_651 == 1'd0))) begin
        B_0_load_reg_675 <= B_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_reg_651 == 1'd0))) begin
        B_1_addr_reg_670 <= tmp_63_cast_fu_511_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (exitcond_reg_651 == 1'd0))) begin
        B_1_load_reg_680 <= B_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_phi_reg_pp0_iter1_tmp_mid_execute_load_reg_307 <= ap_phi_reg_pp0_iter0_tmp_mid_execute_load_reg_307;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_phi_reg_pp0_iter2_tmp_mid_execute_load_reg_307 <= ap_phi_reg_pp0_iter1_tmp_mid_execute_load_reg_307;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        indvar_flatten_next_reg_572 <= indvar_flatten_next_fu_334_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond_flatten_fu_328_p2 == 1'd0))) begin
        j_mid2_reg_577 <= j_mid2_fu_352_p3;
        tmp_10_reg_596 <= {{j_mid2_fu_352_p3[4:3]}};
        tmp_8_reg_592 <= tmp_8_fu_368_p1;
        tmp_mid2_v_reg_583 <= tmp_mid2_v_fu_360_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (exitcond_reg_651 == 1'd0))) begin
        k_9_1_reg_685 <= k_9_1_fu_521_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_fu_460_p2 == 1'd0))) begin
        newIndex8_reg_655 <= {{ap_phi_mux_k_phi_fu_299_p4[4:1]}};
        tmp_23_reg_660 <= tmp_23_fu_506_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_16_reg_601[8 : 2] <= tmp_16_fu_420_p2[8 : 2];
        tmp_cast_reg_606[4 : 0] <= tmp_cast_fu_426_p1[4 : 0];
        tmp_mid_execute_0_a_reg_611 <= tmp_57_cast_fu_438_p1;
        tmp_mid_execute_1_a_reg_616 <= tmp_57_cast_fu_438_p1;
        tmp_mid_execute_2_a_reg_621 <= tmp_58_cast_fu_450_p1;
        tmp_mid_execute_3_a_reg_626 <= tmp_58_cast_fu_450_p1;
        tmp_mid_execute_4_a_reg_631 <= tmp_58_cast_fu_450_p1;
        tmp_mid_execute_5_a_reg_636 <= tmp_58_cast_fu_450_p1;
        tmp_mid_execute_6_a_reg_641 <= tmp_58_cast_fu_450_p1;
        tmp_mid_execute_7_a_reg_646 <= tmp_58_cast_fu_450_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_9_1_reg_765 <= grp_fu_550_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        A_0_ce0 = 1'b1;
    end else begin
        A_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        A_1_ce0 = 1'b1;
    end else begin
        A_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        B_0_ce0 = 1'b1;
    end else begin
        B_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        B_1_ce0 = 1'b1;
    end else begin
        B_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_fu_460_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state5 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state5 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state2) & (exitcond_flatten_fu_328_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_reg_651 == 1'd0))) begin
        ap_phi_mux_k_phi_fu_299_p4 = k_9_1_reg_685;
    end else begin
        ap_phi_mux_k_phi_fu_299_p4 = k_reg_295;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond_flatten_fu_328_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        tmp_mid_execute_0_ce0 = 1'b1;
    end else begin
        tmp_mid_execute_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_mid_execute_0_d0 = tmp_10_1_reg_770;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_mid_execute_0_d0 = 32'd0;
    end else begin
        tmp_mid_execute_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state4) & (tmp_8_reg_592 == 3'd0)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_8_reg_592 == 3'd0)))) begin
        tmp_mid_execute_0_we0 = 1'b1;
    end else begin
        tmp_mid_execute_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        tmp_mid_execute_1_ce0 = 1'b1;
    end else begin
        tmp_mid_execute_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_mid_execute_1_d0 = tmp_10_1_reg_770;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_mid_execute_1_d0 = 32'd0;
    end else begin
        tmp_mid_execute_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state4) & (tmp_8_reg_592 == 3'd1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_8_reg_592 == 3'd1)))) begin
        tmp_mid_execute_1_we0 = 1'b1;
    end else begin
        tmp_mid_execute_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        tmp_mid_execute_2_address0 = tmp_mid_execute_2_a_reg_621;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_mid_execute_2_address0 = tmp_58_cast_fu_450_p1;
    end else begin
        tmp_mid_execute_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        tmp_mid_execute_2_ce0 = 1'b1;
    end else begin
        tmp_mid_execute_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_mid_execute_2_d0 = tmp_10_1_reg_770;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_mid_execute_2_d0 = 32'd0;
    end else begin
        tmp_mid_execute_2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_8_reg_592 == 3'd2)) | ((1'b1 == ap_CS_fsm_state3) & (tmp_8_reg_592 == 3'd2)))) begin
        tmp_mid_execute_2_we0 = 1'b1;
    end else begin
        tmp_mid_execute_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        tmp_mid_execute_3_address0 = tmp_mid_execute_3_a_reg_626;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_mid_execute_3_address0 = tmp_58_cast_fu_450_p1;
    end else begin
        tmp_mid_execute_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        tmp_mid_execute_3_ce0 = 1'b1;
    end else begin
        tmp_mid_execute_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_mid_execute_3_d0 = tmp_10_1_reg_770;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_mid_execute_3_d0 = 32'd0;
    end else begin
        tmp_mid_execute_3_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_8_reg_592 == 3'd3)) | ((1'b1 == ap_CS_fsm_state3) & (tmp_8_reg_592 == 3'd3)))) begin
        tmp_mid_execute_3_we0 = 1'b1;
    end else begin
        tmp_mid_execute_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        tmp_mid_execute_4_address0 = tmp_mid_execute_4_a_reg_631;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_mid_execute_4_address0 = tmp_58_cast_fu_450_p1;
    end else begin
        tmp_mid_execute_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        tmp_mid_execute_4_ce0 = 1'b1;
    end else begin
        tmp_mid_execute_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_mid_execute_4_d0 = tmp_10_1_reg_770;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_mid_execute_4_d0 = 32'd0;
    end else begin
        tmp_mid_execute_4_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_8_reg_592 == 3'd4)) | ((1'b1 == ap_CS_fsm_state3) & (tmp_8_reg_592 == 3'd4)))) begin
        tmp_mid_execute_4_we0 = 1'b1;
    end else begin
        tmp_mid_execute_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        tmp_mid_execute_5_address0 = tmp_mid_execute_5_a_reg_636;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_mid_execute_5_address0 = tmp_58_cast_fu_450_p1;
    end else begin
        tmp_mid_execute_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        tmp_mid_execute_5_ce0 = 1'b1;
    end else begin
        tmp_mid_execute_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_mid_execute_5_d0 = tmp_10_1_reg_770;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_mid_execute_5_d0 = 32'd0;
    end else begin
        tmp_mid_execute_5_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_8_reg_592 == 3'd5)) | ((1'b1 == ap_CS_fsm_state3) & (tmp_8_reg_592 == 3'd5)))) begin
        tmp_mid_execute_5_we0 = 1'b1;
    end else begin
        tmp_mid_execute_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        tmp_mid_execute_6_address0 = tmp_mid_execute_6_a_reg_641;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_mid_execute_6_address0 = tmp_58_cast_fu_450_p1;
    end else begin
        tmp_mid_execute_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        tmp_mid_execute_6_ce0 = 1'b1;
    end else begin
        tmp_mid_execute_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_mid_execute_6_d0 = tmp_10_1_reg_770;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_mid_execute_6_d0 = 32'd0;
    end else begin
        tmp_mid_execute_6_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_8_reg_592 == 3'd6)) | ((1'b1 == ap_CS_fsm_state3) & (tmp_8_reg_592 == 3'd6)))) begin
        tmp_mid_execute_6_we0 = 1'b1;
    end else begin
        tmp_mid_execute_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        tmp_mid_execute_7_address0 = tmp_mid_execute_7_a_reg_646;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_mid_execute_7_address0 = tmp_58_cast_fu_450_p1;
    end else begin
        tmp_mid_execute_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        tmp_mid_execute_7_ce0 = 1'b1;
    end else begin
        tmp_mid_execute_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_mid_execute_7_d0 = tmp_10_1_reg_770;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_mid_execute_7_d0 = 32'd0;
    end else begin
        tmp_mid_execute_7_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_8_reg_592 == 3'd7)) | ((1'b1 == ap_CS_fsm_state3) & (tmp_8_reg_592 == 3'd7)))) begin
        tmp_mid_execute_7_we0 = 1'b1;
    end else begin
        tmp_mid_execute_7_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (exitcond_flatten_fu_328_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_fu_460_p2 == 1'd1)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if ((((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_fu_460_p2 == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A_0_address0 = tmp_59_cast_fu_540_p1;

assign A_1_address0 = A_1_addr_reg_695;

assign B_0_address0 = tmp_63_cast_fu_511_p1;

assign B_1_address0 = B_1_addr_reg_670;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_tmp_mid_execute_load_reg_307 = 'bx;

assign exitcond1_fu_346_p2 = ((j_reg_284 == 5'd18) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_328_p2 = ((indvar_flatten_reg_262 == 9'd288) ? 1'b1 : 1'b0);

assign exitcond_fu_460_p2 = ((ap_phi_mux_k_phi_fu_299_p4 == 5'd24) ? 1'b1 : 1'b0);

assign grp_fu_516_p1 = 32'd123;

assign grp_fu_527_p1 = 32'd123;

assign i_2_fu_340_p2 = (5'd1 + i_reg_273);

assign indvar_flatten_next_fu_334_p2 = (indvar_flatten_reg_262 + 9'd1);

assign j_2_fu_564_p2 = (j_mid2_reg_577 + 5'd1);

assign j_mid2_fu_352_p3 = ((exitcond1_fu_346_p2[0:0] === 1'b1) ? 5'd0 : j_reg_284);

assign k_9_1_fu_521_p2 = (k_reg_295 + 5'd2);

assign newIndex7_cast_fu_429_p1 = tmp_10_reg_596;

assign newIndex8_fu_466_p4 = {{ap_phi_mux_k_phi_fu_299_p4[4:1]}};

assign newIndex9_cast_fu_532_p1 = newIndex8_reg_655_pp0_iter1_reg;

assign p_shl2_cast_fu_392_p1 = tmp_fu_385_p3;

assign p_shl3_cast_fu_484_p1 = tmp_20_fu_476_p3;

assign p_shl4_cast_fu_496_p1 = tmp_21_fu_488_p3;

assign tmp3_fu_554_p2 = (tmp_9_reg_720 + tmp_9_1_reg_765);

assign tmp_10_1_fu_558_p2 = (tmp3_fu_554_p2 + ap_phi_reg_pp0_iter3_tmp_mid_execute_load_reg_307);

assign tmp_14_fu_402_p3 = {{tmp_mid2_v_reg_583}, {1'd0}};

assign tmp_15_fu_413_p3 = {{tmp_mid2_v_reg_583}, {4'd0}};

assign tmp_16_fu_420_p2 = (tmp_15_fu_413_p3 - p_shl2_cast_fu_392_p1);

assign tmp_17_fu_432_p2 = (newIndex7_cast_fu_429_p1 + tmp_s_fu_396_p2);

assign tmp_18_fu_444_p2 = (newIndex7_cast_fu_429_p1 + tmp_53_cast_fu_409_p1);

assign tmp_19_fu_535_p2 = (tmp_16_reg_601 + newIndex9_cast_fu_532_p1);

assign tmp_20_fu_476_p3 = {{newIndex8_fu_466_p4}, {4'd0}};

assign tmp_21_fu_488_p3 = {{newIndex8_fu_466_p4}, {1'd0}};

assign tmp_22_fu_500_p2 = (p_shl4_cast_fu_496_p1 + p_shl3_cast_fu_484_p1);

assign tmp_23_fu_506_p2 = (tmp_22_fu_500_p2 + tmp_cast_reg_606);

assign tmp_53_cast_fu_409_p1 = tmp_14_fu_402_p3;

assign tmp_57_cast_fu_438_p1 = $signed(tmp_17_fu_432_p2);

assign tmp_58_cast_fu_450_p1 = tmp_18_fu_444_p2;

assign tmp_59_cast_fu_540_p1 = $signed(tmp_19_fu_535_p2);

assign tmp_63_cast_fu_511_p1 = tmp_23_reg_660;

assign tmp_8_fu_368_p1 = j_mid2_fu_352_p3[2:0];

assign tmp_cast_fu_426_p1 = j_mid2_reg_577;

assign tmp_fu_385_p3 = {{tmp_mid2_v_reg_583}, {2'd0}};

assign tmp_mid2_cast_fu_382_p1 = tmp_mid2_v_reg_583;

assign tmp_mid2_v_fu_360_p3 = ((exitcond1_fu_346_p2[0:0] === 1'b1) ? i_2_fu_340_p2 : i_reg_273);

assign tmp_mid_execute_0_address0 = tmp_mid_execute_0_a_reg_611;

assign tmp_mid_execute_1_address0 = tmp_mid_execute_1_a_reg_616;

assign tmp_s_fu_396_p2 = (tmp_fu_385_p3 - tmp_mid2_cast_fu_382_p1);

always @ (posedge ap_clk) begin
    tmp_16_reg_601[1:0] <= 2'b00;
    tmp_cast_reg_606[8:5] <= 4'b0000;
end

endmodule //func1_execute8
