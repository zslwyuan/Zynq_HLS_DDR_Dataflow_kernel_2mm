// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module kernel_2mm (
        ap_clk,
        ap_rst,
        A_0_address0,
        A_0_ce0,
        A_0_d0,
        A_0_q0,
        A_0_we0,
        A_0_address1,
        A_0_ce1,
        A_0_d1,
        A_0_q1,
        A_0_we1,
        A_1_address0,
        A_1_ce0,
        A_1_d0,
        A_1_q0,
        A_1_we0,
        A_1_address1,
        A_1_ce1,
        A_1_d1,
        A_1_q1,
        A_1_we1,
        B_0_address0,
        B_0_ce0,
        B_0_d0,
        B_0_q0,
        B_0_we0,
        B_0_address1,
        B_0_ce1,
        B_0_d1,
        B_0_q1,
        B_0_we1,
        B_1_address0,
        B_1_ce0,
        B_1_d0,
        B_1_q0,
        B_1_we0,
        B_1_address1,
        B_1_ce1,
        B_1_d1,
        B_1_q1,
        B_1_we1,
        C_0_address0,
        C_0_ce0,
        C_0_d0,
        C_0_q0,
        C_0_we0,
        C_0_address1,
        C_0_ce1,
        C_0_d1,
        C_0_q1,
        C_0_we1,
        C_1_address0,
        C_1_ce0,
        C_1_d0,
        C_1_q0,
        C_1_we0,
        C_1_address1,
        C_1_ce1,
        C_1_d1,
        C_1_q1,
        C_1_we1,
        C_2_address0,
        C_2_ce0,
        C_2_d0,
        C_2_q0,
        C_2_we0,
        C_2_address1,
        C_2_ce1,
        C_2_d1,
        C_2_q1,
        C_2_we1,
        C_3_address0,
        C_3_ce0,
        C_3_d0,
        C_3_q0,
        C_3_we0,
        C_3_address1,
        C_3_ce1,
        C_3_d1,
        C_3_q1,
        C_3_we1,
        C_4_address0,
        C_4_ce0,
        C_4_d0,
        C_4_q0,
        C_4_we0,
        C_4_address1,
        C_4_ce1,
        C_4_d1,
        C_4_q1,
        C_4_we1,
        C_5_address0,
        C_5_ce0,
        C_5_d0,
        C_5_q0,
        C_5_we0,
        C_5_address1,
        C_5_ce1,
        C_5_d1,
        C_5_q1,
        C_5_we1,
        C_6_address0,
        C_6_ce0,
        C_6_d0,
        C_6_q0,
        C_6_we0,
        C_6_address1,
        C_6_ce1,
        C_6_d1,
        C_6_q1,
        C_6_we1,
        C_7_address0,
        C_7_ce0,
        C_7_d0,
        C_7_q0,
        C_7_we0,
        C_7_address1,
        C_7_ce1,
        C_7_d1,
        C_7_q1,
        C_7_we1,
        D_address0,
        D_ce0,
        D_d0,
        D_q0,
        D_we0,
        D_address1,
        D_ce1,
        D_d1,
        D_q1,
        D_we1,
        D_output_address0,
        D_output_ce0,
        D_output_d0,
        D_output_q0,
        D_output_we0,
        D_output_address1,
        D_output_ce1,
        D_output_d1,
        D_output_q1,
        D_output_we1,
        A_0_empty_n,
        A_0_read,
        A_1_empty_n,
        A_1_read,
        B_0_empty_n,
        B_0_read,
        B_1_empty_n,
        B_1_read,
        C_0_empty_n,
        C_0_read,
        C_1_empty_n,
        C_1_read,
        C_2_empty_n,
        C_2_read,
        C_3_empty_n,
        C_3_read,
        C_4_empty_n,
        C_4_read,
        C_5_empty_n,
        C_5_read,
        C_6_empty_n,
        C_6_read,
        C_7_empty_n,
        C_7_read,
        D_empty_n,
        D_read,
        D_output_full_n,
        D_output_write,
        ap_done,
        ap_start,
        ap_ready,
        ap_idle,
        ap_continue
);


input   ap_clk;
input   ap_rst;
output  [7:0] A_0_address0;
output   A_0_ce0;
output  [31:0] A_0_d0;
input  [31:0] A_0_q0;
output   A_0_we0;
output  [7:0] A_0_address1;
output   A_0_ce1;
output  [31:0] A_0_d1;
input  [31:0] A_0_q1;
output   A_0_we1;
output  [7:0] A_1_address0;
output   A_1_ce0;
output  [31:0] A_1_d0;
input  [31:0] A_1_q0;
output   A_1_we0;
output  [7:0] A_1_address1;
output   A_1_ce1;
output  [31:0] A_1_d1;
input  [31:0] A_1_q1;
output   A_1_we1;
output  [7:0] B_0_address0;
output   B_0_ce0;
output  [31:0] B_0_d0;
input  [31:0] B_0_q0;
output   B_0_we0;
output  [7:0] B_0_address1;
output   B_0_ce1;
output  [31:0] B_0_d1;
input  [31:0] B_0_q1;
output   B_0_we1;
output  [7:0] B_1_address0;
output   B_1_ce0;
output  [31:0] B_1_d0;
input  [31:0] B_1_q0;
output   B_1_we0;
output  [7:0] B_1_address1;
output   B_1_ce1;
output  [31:0] B_1_d1;
input  [31:0] B_1_q1;
output   B_1_we1;
output  [6:0] C_0_address0;
output   C_0_ce0;
output  [31:0] C_0_d0;
input  [31:0] C_0_q0;
output   C_0_we0;
output  [6:0] C_0_address1;
output   C_0_ce1;
output  [31:0] C_0_d1;
input  [31:0] C_0_q1;
output   C_0_we1;
output  [6:0] C_1_address0;
output   C_1_ce0;
output  [31:0] C_1_d0;
input  [31:0] C_1_q0;
output   C_1_we0;
output  [6:0] C_1_address1;
output   C_1_ce1;
output  [31:0] C_1_d1;
input  [31:0] C_1_q1;
output   C_1_we1;
output  [5:0] C_2_address0;
output   C_2_ce0;
output  [31:0] C_2_d0;
input  [31:0] C_2_q0;
output   C_2_we0;
output  [5:0] C_2_address1;
output   C_2_ce1;
output  [31:0] C_2_d1;
input  [31:0] C_2_q1;
output   C_2_we1;
output  [5:0] C_3_address0;
output   C_3_ce0;
output  [31:0] C_3_d0;
input  [31:0] C_3_q0;
output   C_3_we0;
output  [5:0] C_3_address1;
output   C_3_ce1;
output  [31:0] C_3_d1;
input  [31:0] C_3_q1;
output   C_3_we1;
output  [5:0] C_4_address0;
output   C_4_ce0;
output  [31:0] C_4_d0;
input  [31:0] C_4_q0;
output   C_4_we0;
output  [5:0] C_4_address1;
output   C_4_ce1;
output  [31:0] C_4_d1;
input  [31:0] C_4_q1;
output   C_4_we1;
output  [5:0] C_5_address0;
output   C_5_ce0;
output  [31:0] C_5_d0;
input  [31:0] C_5_q0;
output   C_5_we0;
output  [5:0] C_5_address1;
output   C_5_ce1;
output  [31:0] C_5_d1;
input  [31:0] C_5_q1;
output   C_5_we1;
output  [5:0] C_6_address0;
output   C_6_ce0;
output  [31:0] C_6_d0;
input  [31:0] C_6_q0;
output   C_6_we0;
output  [5:0] C_6_address1;
output   C_6_ce1;
output  [31:0] C_6_d1;
input  [31:0] C_6_q1;
output   C_6_we1;
output  [5:0] C_7_address0;
output   C_7_ce0;
output  [31:0] C_7_d0;
input  [31:0] C_7_q0;
output   C_7_we0;
output  [5:0] C_7_address1;
output   C_7_ce1;
output  [31:0] C_7_d1;
input  [31:0] C_7_q1;
output   C_7_we1;
output  [8:0] D_address0;
output   D_ce0;
output  [31:0] D_d0;
input  [31:0] D_q0;
output   D_we0;
output  [8:0] D_address1;
output   D_ce1;
output  [31:0] D_d1;
input  [31:0] D_q1;
output   D_we1;
output  [8:0] D_output_address0;
output   D_output_ce0;
output  [31:0] D_output_d0;
input  [31:0] D_output_q0;
output   D_output_we0;
output  [8:0] D_output_address1;
output   D_output_ce1;
output  [31:0] D_output_d1;
input  [31:0] D_output_q1;
output   D_output_we1;
input   A_0_empty_n;
output   A_0_read;
input   A_1_empty_n;
output   A_1_read;
input   B_0_empty_n;
output   B_0_read;
input   B_1_empty_n;
output   B_1_read;
input   C_0_empty_n;
output   C_0_read;
input   C_1_empty_n;
output   C_1_read;
input   C_2_empty_n;
output   C_2_read;
input   C_3_empty_n;
output   C_3_read;
input   C_4_empty_n;
output   C_4_read;
input   C_5_empty_n;
output   C_5_read;
input   C_6_empty_n;
output   C_6_read;
input   C_7_empty_n;
output   C_7_read;
input   D_empty_n;
output   D_read;
input   D_output_full_n;
output   D_output_write;
output   ap_done;
input   ap_start;
output   ap_ready;
output   ap_idle;
input   ap_continue;

wire   [31:0] D_mid_i_q0;
wire   [31:0] D_mid_t_q0;
wire   [31:0] C_mid_0_i_q0;
wire   [31:0] C_mid_0_t_q0;
wire   [31:0] C_mid_1_i_q0;
wire   [31:0] C_mid_1_t_q0;
wire   [31:0] C_mid_2_i_q0;
wire   [31:0] C_mid_2_t_q0;
wire   [31:0] C_mid_3_i_q0;
wire   [31:0] C_mid_3_t_q0;
wire   [31:0] C_mid_4_i_q0;
wire   [31:0] C_mid_4_t_q0;
wire   [31:0] C_mid_5_i_q0;
wire   [31:0] C_mid_5_t_q0;
wire   [31:0] C_mid_6_i_q0;
wire   [31:0] C_mid_6_t_q0;
wire   [31:0] C_mid_7_i_q0;
wire   [31:0] C_mid_7_t_q0;
wire   [31:0] tmp_mid_0_i_q0;
wire   [31:0] tmp_mid_0_t_q0;
wire   [31:0] tmp_mid_1_i_q0;
wire   [31:0] tmp_mid_1_t_q0;
wire   [31:0] tmp_mid_2_i_q0;
wire   [31:0] tmp_mid_2_t_q0;
wire   [31:0] tmp_mid_3_i_q0;
wire   [31:0] tmp_mid_3_t_q0;
wire   [31:0] tmp_mid_4_i_q0;
wire   [31:0] tmp_mid_4_t_q0;
wire   [31:0] tmp_mid_5_i_q0;
wire   [31:0] tmp_mid_5_t_q0;
wire   [31:0] tmp_mid_6_i_q0;
wire   [31:0] tmp_mid_6_t_q0;
wire   [31:0] tmp_mid_7_i_q0;
wire   [31:0] tmp_mid_7_t_q0;
wire    func15_U0_ap_start;
wire    func15_U0_ap_done;
wire    func15_U0_ap_continue;
wire    func15_U0_ap_idle;
wire    func15_U0_ap_ready;
wire   [7:0] func15_U0_A_0_address0;
wire    func15_U0_A_0_ce0;
wire   [7:0] func15_U0_A_1_address0;
wire    func15_U0_A_1_ce0;
wire   [7:0] func15_U0_B_0_address0;
wire    func15_U0_B_0_ce0;
wire   [7:0] func15_U0_B_1_address0;
wire    func15_U0_B_1_ce0;
wire   [6:0] func15_U0_C_0_address0;
wire    func15_U0_C_0_ce0;
wire   [6:0] func15_U0_C_1_address0;
wire    func15_U0_C_1_ce0;
wire   [5:0] func15_U0_C_2_address0;
wire    func15_U0_C_2_ce0;
wire   [5:0] func15_U0_C_3_address0;
wire    func15_U0_C_3_ce0;
wire   [5:0] func15_U0_C_4_address0;
wire    func15_U0_C_4_ce0;
wire   [5:0] func15_U0_C_5_address0;
wire    func15_U0_C_5_ce0;
wire   [5:0] func15_U0_C_6_address0;
wire    func15_U0_C_6_ce0;
wire   [5:0] func15_U0_C_7_address0;
wire    func15_U0_C_7_ce0;
wire   [8:0] func15_U0_D_address0;
wire    func15_U0_D_ce0;
wire   [5:0] func15_U0_tmp_0_address0;
wire    func15_U0_tmp_0_ce0;
wire    func15_U0_tmp_0_we0;
wire   [31:0] func15_U0_tmp_0_d0;
wire   [5:0] func15_U0_tmp_1_address0;
wire    func15_U0_tmp_1_ce0;
wire    func15_U0_tmp_1_we0;
wire   [31:0] func15_U0_tmp_1_d0;
wire   [4:0] func15_U0_tmp_2_address0;
wire    func15_U0_tmp_2_ce0;
wire    func15_U0_tmp_2_we0;
wire   [31:0] func15_U0_tmp_2_d0;
wire   [4:0] func15_U0_tmp_3_address0;
wire    func15_U0_tmp_3_ce0;
wire    func15_U0_tmp_3_we0;
wire   [31:0] func15_U0_tmp_3_d0;
wire   [4:0] func15_U0_tmp_4_address0;
wire    func15_U0_tmp_4_ce0;
wire    func15_U0_tmp_4_we0;
wire   [31:0] func15_U0_tmp_4_d0;
wire   [4:0] func15_U0_tmp_5_address0;
wire    func15_U0_tmp_5_ce0;
wire    func15_U0_tmp_5_we0;
wire   [31:0] func15_U0_tmp_5_d0;
wire   [4:0] func15_U0_tmp_6_address0;
wire    func15_U0_tmp_6_ce0;
wire    func15_U0_tmp_6_we0;
wire   [31:0] func15_U0_tmp_6_d0;
wire   [4:0] func15_U0_tmp_7_address0;
wire    func15_U0_tmp_7_ce0;
wire    func15_U0_tmp_7_we0;
wire   [31:0] func15_U0_tmp_7_d0;
wire   [6:0] func15_U0_C_mid_0_address0;
wire    func15_U0_C_mid_0_ce0;
wire    func15_U0_C_mid_0_we0;
wire   [31:0] func15_U0_C_mid_0_d0;
wire   [6:0] func15_U0_C_mid_1_address0;
wire    func15_U0_C_mid_1_ce0;
wire    func15_U0_C_mid_1_we0;
wire   [31:0] func15_U0_C_mid_1_d0;
wire   [5:0] func15_U0_C_mid_2_address0;
wire    func15_U0_C_mid_2_ce0;
wire    func15_U0_C_mid_2_we0;
wire   [31:0] func15_U0_C_mid_2_d0;
wire   [5:0] func15_U0_C_mid_3_address0;
wire    func15_U0_C_mid_3_ce0;
wire    func15_U0_C_mid_3_we0;
wire   [31:0] func15_U0_C_mid_3_d0;
wire   [5:0] func15_U0_C_mid_4_address0;
wire    func15_U0_C_mid_4_ce0;
wire    func15_U0_C_mid_4_we0;
wire   [31:0] func15_U0_C_mid_4_d0;
wire   [5:0] func15_U0_C_mid_5_address0;
wire    func15_U0_C_mid_5_ce0;
wire    func15_U0_C_mid_5_we0;
wire   [31:0] func15_U0_C_mid_5_d0;
wire   [5:0] func15_U0_C_mid_6_address0;
wire    func15_U0_C_mid_6_ce0;
wire    func15_U0_C_mid_6_we0;
wire   [31:0] func15_U0_C_mid_6_d0;
wire   [5:0] func15_U0_C_mid_7_address0;
wire    func15_U0_C_mid_7_ce0;
wire    func15_U0_C_mid_7_we0;
wire   [31:0] func15_U0_C_mid_7_d0;
wire   [8:0] func15_U0_D_mid_address0;
wire    func15_U0_D_mid_ce0;
wire    func15_U0_D_mid_we0;
wire   [31:0] func15_U0_D_mid_d0;
wire    func15_U0_A_0_full_n;
wire    func15_U0_A_0_write;
wire    func15_U0_A_1_full_n;
wire    func15_U0_A_1_write;
wire    func15_U0_B_0_full_n;
wire    func15_U0_B_0_write;
wire    func15_U0_B_1_full_n;
wire    func15_U0_B_1_write;
wire    func15_U0_C_0_full_n;
wire    func15_U0_C_0_write;
wire    func15_U0_C_1_full_n;
wire    func15_U0_C_1_write;
wire    func15_U0_C_2_full_n;
wire    func15_U0_C_2_write;
wire    func15_U0_C_3_full_n;
wire    func15_U0_C_3_write;
wire    func15_U0_C_4_full_n;
wire    func15_U0_C_4_write;
wire    func15_U0_C_5_full_n;
wire    func15_U0_C_5_write;
wire    func15_U0_C_6_full_n;
wire    func15_U0_C_6_write;
wire    func15_U0_C_7_full_n;
wire    func15_U0_C_7_write;
wire    func15_U0_D_full_n;
wire    func15_U0_D_write;
wire    ap_channel_done_D_mid;
wire    func15_U0_D_mid_full_n;
reg    ap_sync_reg_channel_write_D_mid;
wire    ap_sync_channel_write_D_mid;
wire    ap_channel_done_C_mid_7;
wire    func15_U0_C_mid_7_full_n;
reg    ap_sync_reg_channel_write_C_mid_7;
wire    ap_sync_channel_write_C_mid_7;
wire    ap_channel_done_C_mid_6;
wire    func15_U0_C_mid_6_full_n;
reg    ap_sync_reg_channel_write_C_mid_6;
wire    ap_sync_channel_write_C_mid_6;
wire    ap_channel_done_C_mid_5;
wire    func15_U0_C_mid_5_full_n;
reg    ap_sync_reg_channel_write_C_mid_5;
wire    ap_sync_channel_write_C_mid_5;
wire    ap_channel_done_C_mid_4;
wire    func15_U0_C_mid_4_full_n;
reg    ap_sync_reg_channel_write_C_mid_4;
wire    ap_sync_channel_write_C_mid_4;
wire    ap_channel_done_C_mid_3;
wire    func15_U0_C_mid_3_full_n;
reg    ap_sync_reg_channel_write_C_mid_3;
wire    ap_sync_channel_write_C_mid_3;
wire    ap_channel_done_C_mid_2;
wire    func15_U0_C_mid_2_full_n;
reg    ap_sync_reg_channel_write_C_mid_2;
wire    ap_sync_channel_write_C_mid_2;
wire    ap_channel_done_C_mid_1;
wire    func15_U0_C_mid_1_full_n;
reg    ap_sync_reg_channel_write_C_mid_1;
wire    ap_sync_channel_write_C_mid_1;
wire    ap_channel_done_C_mid_0;
wire    func15_U0_C_mid_0_full_n;
reg    ap_sync_reg_channel_write_C_mid_0;
wire    ap_sync_channel_write_C_mid_0;
wire    ap_channel_done_tmp_mid_7;
wire    func15_U0_tmp_7_full_n;
reg    ap_sync_reg_channel_write_tmp_mid_7;
wire    ap_sync_channel_write_tmp_mid_7;
wire    ap_channel_done_tmp_mid_6;
wire    func15_U0_tmp_6_full_n;
reg    ap_sync_reg_channel_write_tmp_mid_6;
wire    ap_sync_channel_write_tmp_mid_6;
wire    ap_channel_done_tmp_mid_5;
wire    func15_U0_tmp_5_full_n;
reg    ap_sync_reg_channel_write_tmp_mid_5;
wire    ap_sync_channel_write_tmp_mid_5;
wire    ap_channel_done_tmp_mid_4;
wire    func15_U0_tmp_4_full_n;
reg    ap_sync_reg_channel_write_tmp_mid_4;
wire    ap_sync_channel_write_tmp_mid_4;
wire    ap_channel_done_tmp_mid_3;
wire    func15_U0_tmp_3_full_n;
reg    ap_sync_reg_channel_write_tmp_mid_3;
wire    ap_sync_channel_write_tmp_mid_3;
wire    ap_channel_done_tmp_mid_2;
wire    func15_U0_tmp_2_full_n;
reg    ap_sync_reg_channel_write_tmp_mid_2;
wire    ap_sync_channel_write_tmp_mid_2;
wire    ap_channel_done_tmp_mid_1;
wire    func15_U0_tmp_1_full_n;
reg    ap_sync_reg_channel_write_tmp_mid_1;
wire    ap_sync_channel_write_tmp_mid_1;
wire    ap_channel_done_tmp_mid_0;
wire    func15_U0_tmp_0_full_n;
reg    ap_sync_reg_channel_write_tmp_mid_0;
wire    ap_sync_channel_write_tmp_mid_0;
wire    func24_U0_ap_start;
wire    func24_U0_ap_done;
wire    func24_U0_ap_continue;
wire    func24_U0_ap_idle;
wire    func24_U0_ap_ready;
wire   [6:0] func24_U0_C_0_address0;
wire    func24_U0_C_0_ce0;
wire   [6:0] func24_U0_C_1_address0;
wire    func24_U0_C_1_ce0;
wire   [5:0] func24_U0_C_2_address0;
wire    func24_U0_C_2_ce0;
wire   [5:0] func24_U0_C_3_address0;
wire    func24_U0_C_3_ce0;
wire   [5:0] func24_U0_C_4_address0;
wire    func24_U0_C_4_ce0;
wire   [5:0] func24_U0_C_5_address0;
wire    func24_U0_C_5_ce0;
wire   [5:0] func24_U0_C_6_address0;
wire    func24_U0_C_6_ce0;
wire   [5:0] func24_U0_C_7_address0;
wire    func24_U0_C_7_ce0;
wire   [8:0] func24_U0_D_address0;
wire    func24_U0_D_ce0;
wire   [5:0] func24_U0_tmp_0_address0;
wire    func24_U0_tmp_0_ce0;
wire   [5:0] func24_U0_tmp_1_address0;
wire    func24_U0_tmp_1_ce0;
wire   [4:0] func24_U0_tmp_2_address0;
wire    func24_U0_tmp_2_ce0;
wire   [4:0] func24_U0_tmp_3_address0;
wire    func24_U0_tmp_3_ce0;
wire   [4:0] func24_U0_tmp_4_address0;
wire    func24_U0_tmp_4_ce0;
wire   [4:0] func24_U0_tmp_5_address0;
wire    func24_U0_tmp_5_ce0;
wire   [4:0] func24_U0_tmp_6_address0;
wire    func24_U0_tmp_6_ce0;
wire   [4:0] func24_U0_tmp_7_address0;
wire    func24_U0_tmp_7_ce0;
wire   [8:0] func24_U0_D_output_address0;
wire    func24_U0_D_output_ce0;
wire    func24_U0_D_output_we0;
wire   [31:0] func24_U0_D_output_d0;
wire    func24_U0_D_output_full_n;
wire    func24_U0_D_output_write;
wire    ap_sync_continue;
wire    tmp_mid_0_i_full_n;
wire    tmp_mid_0_t_empty_n;
wire    tmp_mid_1_i_full_n;
wire    tmp_mid_1_t_empty_n;
wire    tmp_mid_2_i_full_n;
wire    tmp_mid_2_t_empty_n;
wire    tmp_mid_3_i_full_n;
wire    tmp_mid_3_t_empty_n;
wire    tmp_mid_4_i_full_n;
wire    tmp_mid_4_t_empty_n;
wire    tmp_mid_5_i_full_n;
wire    tmp_mid_5_t_empty_n;
wire    tmp_mid_6_i_full_n;
wire    tmp_mid_6_t_empty_n;
wire    tmp_mid_7_i_full_n;
wire    tmp_mid_7_t_empty_n;
wire    C_mid_0_i_full_n;
wire    C_mid_0_t_empty_n;
wire    C_mid_1_i_full_n;
wire    C_mid_1_t_empty_n;
wire    C_mid_2_i_full_n;
wire    C_mid_2_t_empty_n;
wire    C_mid_3_i_full_n;
wire    C_mid_3_t_empty_n;
wire    C_mid_4_i_full_n;
wire    C_mid_4_t_empty_n;
wire    C_mid_5_i_full_n;
wire    C_mid_5_t_empty_n;
wire    C_mid_6_i_full_n;
wire    C_mid_6_t_empty_n;
wire    C_mid_7_i_full_n;
wire    C_mid_7_t_empty_n;
wire    D_mid_i_full_n;
wire    D_mid_t_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
wire    func15_U0_start_full_n;
wire    func15_U0_start_write;
wire    func24_U0_start_full_n;
wire    func24_U0_start_write;

// power-on initialization
initial begin
#0 ap_sync_reg_channel_write_D_mid = 1'b0;
#0 ap_sync_reg_channel_write_C_mid_7 = 1'b0;
#0 ap_sync_reg_channel_write_C_mid_6 = 1'b0;
#0 ap_sync_reg_channel_write_C_mid_5 = 1'b0;
#0 ap_sync_reg_channel_write_C_mid_4 = 1'b0;
#0 ap_sync_reg_channel_write_C_mid_3 = 1'b0;
#0 ap_sync_reg_channel_write_C_mid_2 = 1'b0;
#0 ap_sync_reg_channel_write_C_mid_1 = 1'b0;
#0 ap_sync_reg_channel_write_C_mid_0 = 1'b0;
#0 ap_sync_reg_channel_write_tmp_mid_7 = 1'b0;
#0 ap_sync_reg_channel_write_tmp_mid_6 = 1'b0;
#0 ap_sync_reg_channel_write_tmp_mid_5 = 1'b0;
#0 ap_sync_reg_channel_write_tmp_mid_4 = 1'b0;
#0 ap_sync_reg_channel_write_tmp_mid_3 = 1'b0;
#0 ap_sync_reg_channel_write_tmp_mid_2 = 1'b0;
#0 ap_sync_reg_channel_write_tmp_mid_1 = 1'b0;
#0 ap_sync_reg_channel_write_tmp_mid_0 = 1'b0;
end

kernel_2mm_D_mid #(
    .DataWidth( 32 ),
    .AddressRange( 384 ),
    .AddressWidth( 9 ))
D_mid_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(func15_U0_D_mid_address0),
    .i_ce0(func15_U0_D_mid_ce0),
    .i_we0(func15_U0_D_mid_we0),
    .i_d0(func15_U0_D_mid_d0),
    .i_q0(D_mid_i_q0),
    .t_address0(func24_U0_D_address0),
    .t_ce0(func24_U0_D_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(D_mid_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(D_mid_i_full_n),
    .i_write(ap_channel_done_D_mid),
    .t_empty_n(D_mid_t_empty_n),
    .t_read(func24_U0_ap_ready)
);

kernel_2mm_C_mid_0 #(
    .DataWidth( 32 ),
    .AddressRange( 72 ),
    .AddressWidth( 7 ))
C_mid_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(func15_U0_C_mid_0_address0),
    .i_ce0(func15_U0_C_mid_0_ce0),
    .i_we0(func15_U0_C_mid_0_we0),
    .i_d0(func15_U0_C_mid_0_d0),
    .i_q0(C_mid_0_i_q0),
    .t_address0(func24_U0_C_0_address0),
    .t_ce0(func24_U0_C_0_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(C_mid_0_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(C_mid_0_i_full_n),
    .i_write(ap_channel_done_C_mid_0),
    .t_empty_n(C_mid_0_t_empty_n),
    .t_read(func24_U0_ap_ready)
);

kernel_2mm_C_mid_0 #(
    .DataWidth( 32 ),
    .AddressRange( 72 ),
    .AddressWidth( 7 ))
C_mid_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(func15_U0_C_mid_1_address0),
    .i_ce0(func15_U0_C_mid_1_ce0),
    .i_we0(func15_U0_C_mid_1_we0),
    .i_d0(func15_U0_C_mid_1_d0),
    .i_q0(C_mid_1_i_q0),
    .t_address0(func24_U0_C_1_address0),
    .t_ce0(func24_U0_C_1_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(C_mid_1_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(C_mid_1_i_full_n),
    .i_write(ap_channel_done_C_mid_1),
    .t_empty_n(C_mid_1_t_empty_n),
    .t_read(func24_U0_ap_ready)
);

kernel_2mm_C_mid_2 #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
C_mid_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(func15_U0_C_mid_2_address0),
    .i_ce0(func15_U0_C_mid_2_ce0),
    .i_we0(func15_U0_C_mid_2_we0),
    .i_d0(func15_U0_C_mid_2_d0),
    .i_q0(C_mid_2_i_q0),
    .t_address0(func24_U0_C_2_address0),
    .t_ce0(func24_U0_C_2_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(C_mid_2_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(C_mid_2_i_full_n),
    .i_write(ap_channel_done_C_mid_2),
    .t_empty_n(C_mid_2_t_empty_n),
    .t_read(func24_U0_ap_ready)
);

kernel_2mm_C_mid_2 #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
C_mid_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(func15_U0_C_mid_3_address0),
    .i_ce0(func15_U0_C_mid_3_ce0),
    .i_we0(func15_U0_C_mid_3_we0),
    .i_d0(func15_U0_C_mid_3_d0),
    .i_q0(C_mid_3_i_q0),
    .t_address0(func24_U0_C_3_address0),
    .t_ce0(func24_U0_C_3_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(C_mid_3_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(C_mid_3_i_full_n),
    .i_write(ap_channel_done_C_mid_3),
    .t_empty_n(C_mid_3_t_empty_n),
    .t_read(func24_U0_ap_ready)
);

kernel_2mm_C_mid_2 #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
C_mid_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(func15_U0_C_mid_4_address0),
    .i_ce0(func15_U0_C_mid_4_ce0),
    .i_we0(func15_U0_C_mid_4_we0),
    .i_d0(func15_U0_C_mid_4_d0),
    .i_q0(C_mid_4_i_q0),
    .t_address0(func24_U0_C_4_address0),
    .t_ce0(func24_U0_C_4_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(C_mid_4_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(C_mid_4_i_full_n),
    .i_write(ap_channel_done_C_mid_4),
    .t_empty_n(C_mid_4_t_empty_n),
    .t_read(func24_U0_ap_ready)
);

kernel_2mm_C_mid_2 #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
C_mid_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(func15_U0_C_mid_5_address0),
    .i_ce0(func15_U0_C_mid_5_ce0),
    .i_we0(func15_U0_C_mid_5_we0),
    .i_d0(func15_U0_C_mid_5_d0),
    .i_q0(C_mid_5_i_q0),
    .t_address0(func24_U0_C_5_address0),
    .t_ce0(func24_U0_C_5_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(C_mid_5_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(C_mid_5_i_full_n),
    .i_write(ap_channel_done_C_mid_5),
    .t_empty_n(C_mid_5_t_empty_n),
    .t_read(func24_U0_ap_ready)
);

kernel_2mm_C_mid_2 #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
C_mid_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(func15_U0_C_mid_6_address0),
    .i_ce0(func15_U0_C_mid_6_ce0),
    .i_we0(func15_U0_C_mid_6_we0),
    .i_d0(func15_U0_C_mid_6_d0),
    .i_q0(C_mid_6_i_q0),
    .t_address0(func24_U0_C_6_address0),
    .t_ce0(func24_U0_C_6_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(C_mid_6_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(C_mid_6_i_full_n),
    .i_write(ap_channel_done_C_mid_6),
    .t_empty_n(C_mid_6_t_empty_n),
    .t_read(func24_U0_ap_ready)
);

kernel_2mm_C_mid_2 #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
C_mid_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(func15_U0_C_mid_7_address0),
    .i_ce0(func15_U0_C_mid_7_ce0),
    .i_we0(func15_U0_C_mid_7_we0),
    .i_d0(func15_U0_C_mid_7_d0),
    .i_q0(C_mid_7_i_q0),
    .t_address0(func24_U0_C_7_address0),
    .t_ce0(func24_U0_C_7_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(C_mid_7_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(C_mid_7_i_full_n),
    .i_write(ap_channel_done_C_mid_7),
    .t_empty_n(C_mid_7_t_empty_n),
    .t_read(func24_U0_ap_ready)
);

kernel_2mm_C_mid_2 #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
tmp_mid_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(func15_U0_tmp_0_address0),
    .i_ce0(func15_U0_tmp_0_ce0),
    .i_we0(func15_U0_tmp_0_we0),
    .i_d0(func15_U0_tmp_0_d0),
    .i_q0(tmp_mid_0_i_q0),
    .t_address0(func24_U0_tmp_0_address0),
    .t_ce0(func24_U0_tmp_0_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(tmp_mid_0_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(tmp_mid_0_i_full_n),
    .i_write(ap_channel_done_tmp_mid_0),
    .t_empty_n(tmp_mid_0_t_empty_n),
    .t_read(func24_U0_ap_ready)
);

kernel_2mm_C_mid_2 #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
tmp_mid_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(func15_U0_tmp_1_address0),
    .i_ce0(func15_U0_tmp_1_ce0),
    .i_we0(func15_U0_tmp_1_we0),
    .i_d0(func15_U0_tmp_1_d0),
    .i_q0(tmp_mid_1_i_q0),
    .t_address0(func24_U0_tmp_1_address0),
    .t_ce0(func24_U0_tmp_1_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(tmp_mid_1_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(tmp_mid_1_i_full_n),
    .i_write(ap_channel_done_tmp_mid_1),
    .t_empty_n(tmp_mid_1_t_empty_n),
    .t_read(func24_U0_ap_ready)
);

kernel_2mm_tmp_mig8j #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
tmp_mid_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(func15_U0_tmp_2_address0),
    .i_ce0(func15_U0_tmp_2_ce0),
    .i_we0(func15_U0_tmp_2_we0),
    .i_d0(func15_U0_tmp_2_d0),
    .i_q0(tmp_mid_2_i_q0),
    .t_address0(func24_U0_tmp_2_address0),
    .t_ce0(func24_U0_tmp_2_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(tmp_mid_2_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(tmp_mid_2_i_full_n),
    .i_write(ap_channel_done_tmp_mid_2),
    .t_empty_n(tmp_mid_2_t_empty_n),
    .t_read(func24_U0_ap_ready)
);

kernel_2mm_tmp_mig8j #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
tmp_mid_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(func15_U0_tmp_3_address0),
    .i_ce0(func15_U0_tmp_3_ce0),
    .i_we0(func15_U0_tmp_3_we0),
    .i_d0(func15_U0_tmp_3_d0),
    .i_q0(tmp_mid_3_i_q0),
    .t_address0(func24_U0_tmp_3_address0),
    .t_ce0(func24_U0_tmp_3_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(tmp_mid_3_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(tmp_mid_3_i_full_n),
    .i_write(ap_channel_done_tmp_mid_3),
    .t_empty_n(tmp_mid_3_t_empty_n),
    .t_read(func24_U0_ap_ready)
);

kernel_2mm_tmp_mig8j #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
tmp_mid_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(func15_U0_tmp_4_address0),
    .i_ce0(func15_U0_tmp_4_ce0),
    .i_we0(func15_U0_tmp_4_we0),
    .i_d0(func15_U0_tmp_4_d0),
    .i_q0(tmp_mid_4_i_q0),
    .t_address0(func24_U0_tmp_4_address0),
    .t_ce0(func24_U0_tmp_4_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(tmp_mid_4_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(tmp_mid_4_i_full_n),
    .i_write(ap_channel_done_tmp_mid_4),
    .t_empty_n(tmp_mid_4_t_empty_n),
    .t_read(func24_U0_ap_ready)
);

kernel_2mm_tmp_mig8j #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
tmp_mid_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(func15_U0_tmp_5_address0),
    .i_ce0(func15_U0_tmp_5_ce0),
    .i_we0(func15_U0_tmp_5_we0),
    .i_d0(func15_U0_tmp_5_d0),
    .i_q0(tmp_mid_5_i_q0),
    .t_address0(func24_U0_tmp_5_address0),
    .t_ce0(func24_U0_tmp_5_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(tmp_mid_5_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(tmp_mid_5_i_full_n),
    .i_write(ap_channel_done_tmp_mid_5),
    .t_empty_n(tmp_mid_5_t_empty_n),
    .t_read(func24_U0_ap_ready)
);

kernel_2mm_tmp_mig8j #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
tmp_mid_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(func15_U0_tmp_6_address0),
    .i_ce0(func15_U0_tmp_6_ce0),
    .i_we0(func15_U0_tmp_6_we0),
    .i_d0(func15_U0_tmp_6_d0),
    .i_q0(tmp_mid_6_i_q0),
    .t_address0(func24_U0_tmp_6_address0),
    .t_ce0(func24_U0_tmp_6_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(tmp_mid_6_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(tmp_mid_6_i_full_n),
    .i_write(ap_channel_done_tmp_mid_6),
    .t_empty_n(tmp_mid_6_t_empty_n),
    .t_read(func24_U0_ap_ready)
);

kernel_2mm_tmp_mig8j #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
tmp_mid_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(func15_U0_tmp_7_address0),
    .i_ce0(func15_U0_tmp_7_ce0),
    .i_we0(func15_U0_tmp_7_we0),
    .i_d0(func15_U0_tmp_7_d0),
    .i_q0(tmp_mid_7_i_q0),
    .t_address0(func24_U0_tmp_7_address0),
    .t_ce0(func24_U0_tmp_7_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(tmp_mid_7_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(tmp_mid_7_i_full_n),
    .i_write(ap_channel_done_tmp_mid_7),
    .t_empty_n(tmp_mid_7_t_empty_n),
    .t_read(func24_U0_ap_ready)
);

func15 func15_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(func15_U0_ap_start),
    .ap_done(func15_U0_ap_done),
    .ap_continue(func15_U0_ap_continue),
    .ap_idle(func15_U0_ap_idle),
    .ap_ready(func15_U0_ap_ready),
    .A_0_address0(func15_U0_A_0_address0),
    .A_0_ce0(func15_U0_A_0_ce0),
    .A_0_q0(A_0_q0),
    .A_1_address0(func15_U0_A_1_address0),
    .A_1_ce0(func15_U0_A_1_ce0),
    .A_1_q0(A_1_q0),
    .B_0_address0(func15_U0_B_0_address0),
    .B_0_ce0(func15_U0_B_0_ce0),
    .B_0_q0(B_0_q0),
    .B_1_address0(func15_U0_B_1_address0),
    .B_1_ce0(func15_U0_B_1_ce0),
    .B_1_q0(B_1_q0),
    .C_0_address0(func15_U0_C_0_address0),
    .C_0_ce0(func15_U0_C_0_ce0),
    .C_0_q0(C_0_q0),
    .C_1_address0(func15_U0_C_1_address0),
    .C_1_ce0(func15_U0_C_1_ce0),
    .C_1_q0(C_1_q0),
    .C_2_address0(func15_U0_C_2_address0),
    .C_2_ce0(func15_U0_C_2_ce0),
    .C_2_q0(C_2_q0),
    .C_3_address0(func15_U0_C_3_address0),
    .C_3_ce0(func15_U0_C_3_ce0),
    .C_3_q0(C_3_q0),
    .C_4_address0(func15_U0_C_4_address0),
    .C_4_ce0(func15_U0_C_4_ce0),
    .C_4_q0(C_4_q0),
    .C_5_address0(func15_U0_C_5_address0),
    .C_5_ce0(func15_U0_C_5_ce0),
    .C_5_q0(C_5_q0),
    .C_6_address0(func15_U0_C_6_address0),
    .C_6_ce0(func15_U0_C_6_ce0),
    .C_6_q0(C_6_q0),
    .C_7_address0(func15_U0_C_7_address0),
    .C_7_ce0(func15_U0_C_7_ce0),
    .C_7_q0(C_7_q0),
    .D_address0(func15_U0_D_address0),
    .D_ce0(func15_U0_D_ce0),
    .D_q0(D_q0),
    .tmp_0_address0(func15_U0_tmp_0_address0),
    .tmp_0_ce0(func15_U0_tmp_0_ce0),
    .tmp_0_we0(func15_U0_tmp_0_we0),
    .tmp_0_d0(func15_U0_tmp_0_d0),
    .tmp_0_q0(tmp_mid_0_i_q0),
    .tmp_1_address0(func15_U0_tmp_1_address0),
    .tmp_1_ce0(func15_U0_tmp_1_ce0),
    .tmp_1_we0(func15_U0_tmp_1_we0),
    .tmp_1_d0(func15_U0_tmp_1_d0),
    .tmp_1_q0(tmp_mid_1_i_q0),
    .tmp_2_address0(func15_U0_tmp_2_address0),
    .tmp_2_ce0(func15_U0_tmp_2_ce0),
    .tmp_2_we0(func15_U0_tmp_2_we0),
    .tmp_2_d0(func15_U0_tmp_2_d0),
    .tmp_2_q0(tmp_mid_2_i_q0),
    .tmp_3_address0(func15_U0_tmp_3_address0),
    .tmp_3_ce0(func15_U0_tmp_3_ce0),
    .tmp_3_we0(func15_U0_tmp_3_we0),
    .tmp_3_d0(func15_U0_tmp_3_d0),
    .tmp_3_q0(tmp_mid_3_i_q0),
    .tmp_4_address0(func15_U0_tmp_4_address0),
    .tmp_4_ce0(func15_U0_tmp_4_ce0),
    .tmp_4_we0(func15_U0_tmp_4_we0),
    .tmp_4_d0(func15_U0_tmp_4_d0),
    .tmp_4_q0(tmp_mid_4_i_q0),
    .tmp_5_address0(func15_U0_tmp_5_address0),
    .tmp_5_ce0(func15_U0_tmp_5_ce0),
    .tmp_5_we0(func15_U0_tmp_5_we0),
    .tmp_5_d0(func15_U0_tmp_5_d0),
    .tmp_5_q0(tmp_mid_5_i_q0),
    .tmp_6_address0(func15_U0_tmp_6_address0),
    .tmp_6_ce0(func15_U0_tmp_6_ce0),
    .tmp_6_we0(func15_U0_tmp_6_we0),
    .tmp_6_d0(func15_U0_tmp_6_d0),
    .tmp_6_q0(tmp_mid_6_i_q0),
    .tmp_7_address0(func15_U0_tmp_7_address0),
    .tmp_7_ce0(func15_U0_tmp_7_ce0),
    .tmp_7_we0(func15_U0_tmp_7_we0),
    .tmp_7_d0(func15_U0_tmp_7_d0),
    .tmp_7_q0(tmp_mid_7_i_q0),
    .C_mid_0_address0(func15_U0_C_mid_0_address0),
    .C_mid_0_ce0(func15_U0_C_mid_0_ce0),
    .C_mid_0_we0(func15_U0_C_mid_0_we0),
    .C_mid_0_d0(func15_U0_C_mid_0_d0),
    .C_mid_1_address0(func15_U0_C_mid_1_address0),
    .C_mid_1_ce0(func15_U0_C_mid_1_ce0),
    .C_mid_1_we0(func15_U0_C_mid_1_we0),
    .C_mid_1_d0(func15_U0_C_mid_1_d0),
    .C_mid_2_address0(func15_U0_C_mid_2_address0),
    .C_mid_2_ce0(func15_U0_C_mid_2_ce0),
    .C_mid_2_we0(func15_U0_C_mid_2_we0),
    .C_mid_2_d0(func15_U0_C_mid_2_d0),
    .C_mid_3_address0(func15_U0_C_mid_3_address0),
    .C_mid_3_ce0(func15_U0_C_mid_3_ce0),
    .C_mid_3_we0(func15_U0_C_mid_3_we0),
    .C_mid_3_d0(func15_U0_C_mid_3_d0),
    .C_mid_4_address0(func15_U0_C_mid_4_address0),
    .C_mid_4_ce0(func15_U0_C_mid_4_ce0),
    .C_mid_4_we0(func15_U0_C_mid_4_we0),
    .C_mid_4_d0(func15_U0_C_mid_4_d0),
    .C_mid_5_address0(func15_U0_C_mid_5_address0),
    .C_mid_5_ce0(func15_U0_C_mid_5_ce0),
    .C_mid_5_we0(func15_U0_C_mid_5_we0),
    .C_mid_5_d0(func15_U0_C_mid_5_d0),
    .C_mid_6_address0(func15_U0_C_mid_6_address0),
    .C_mid_6_ce0(func15_U0_C_mid_6_ce0),
    .C_mid_6_we0(func15_U0_C_mid_6_we0),
    .C_mid_6_d0(func15_U0_C_mid_6_d0),
    .C_mid_7_address0(func15_U0_C_mid_7_address0),
    .C_mid_7_ce0(func15_U0_C_mid_7_ce0),
    .C_mid_7_we0(func15_U0_C_mid_7_we0),
    .C_mid_7_d0(func15_U0_C_mid_7_d0),
    .D_mid_address0(func15_U0_D_mid_address0),
    .D_mid_ce0(func15_U0_D_mid_ce0),
    .D_mid_we0(func15_U0_D_mid_we0),
    .D_mid_d0(func15_U0_D_mid_d0)
);

func24 func24_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(func24_U0_ap_start),
    .ap_done(func24_U0_ap_done),
    .ap_continue(func24_U0_ap_continue),
    .ap_idle(func24_U0_ap_idle),
    .ap_ready(func24_U0_ap_ready),
    .C_0_address0(func24_U0_C_0_address0),
    .C_0_ce0(func24_U0_C_0_ce0),
    .C_0_q0(C_mid_0_t_q0),
    .C_1_address0(func24_U0_C_1_address0),
    .C_1_ce0(func24_U0_C_1_ce0),
    .C_1_q0(C_mid_1_t_q0),
    .C_2_address0(func24_U0_C_2_address0),
    .C_2_ce0(func24_U0_C_2_ce0),
    .C_2_q0(C_mid_2_t_q0),
    .C_3_address0(func24_U0_C_3_address0),
    .C_3_ce0(func24_U0_C_3_ce0),
    .C_3_q0(C_mid_3_t_q0),
    .C_4_address0(func24_U0_C_4_address0),
    .C_4_ce0(func24_U0_C_4_ce0),
    .C_4_q0(C_mid_4_t_q0),
    .C_5_address0(func24_U0_C_5_address0),
    .C_5_ce0(func24_U0_C_5_ce0),
    .C_5_q0(C_mid_5_t_q0),
    .C_6_address0(func24_U0_C_6_address0),
    .C_6_ce0(func24_U0_C_6_ce0),
    .C_6_q0(C_mid_6_t_q0),
    .C_7_address0(func24_U0_C_7_address0),
    .C_7_ce0(func24_U0_C_7_ce0),
    .C_7_q0(C_mid_7_t_q0),
    .D_address0(func24_U0_D_address0),
    .D_ce0(func24_U0_D_ce0),
    .D_q0(D_mid_t_q0),
    .tmp_0_address0(func24_U0_tmp_0_address0),
    .tmp_0_ce0(func24_U0_tmp_0_ce0),
    .tmp_0_q0(tmp_mid_0_t_q0),
    .tmp_1_address0(func24_U0_tmp_1_address0),
    .tmp_1_ce0(func24_U0_tmp_1_ce0),
    .tmp_1_q0(tmp_mid_1_t_q0),
    .tmp_2_address0(func24_U0_tmp_2_address0),
    .tmp_2_ce0(func24_U0_tmp_2_ce0),
    .tmp_2_q0(tmp_mid_2_t_q0),
    .tmp_3_address0(func24_U0_tmp_3_address0),
    .tmp_3_ce0(func24_U0_tmp_3_ce0),
    .tmp_3_q0(tmp_mid_3_t_q0),
    .tmp_4_address0(func24_U0_tmp_4_address0),
    .tmp_4_ce0(func24_U0_tmp_4_ce0),
    .tmp_4_q0(tmp_mid_4_t_q0),
    .tmp_5_address0(func24_U0_tmp_5_address0),
    .tmp_5_ce0(func24_U0_tmp_5_ce0),
    .tmp_5_q0(tmp_mid_5_t_q0),
    .tmp_6_address0(func24_U0_tmp_6_address0),
    .tmp_6_ce0(func24_U0_tmp_6_ce0),
    .tmp_6_q0(tmp_mid_6_t_q0),
    .tmp_7_address0(func24_U0_tmp_7_address0),
    .tmp_7_ce0(func24_U0_tmp_7_ce0),
    .tmp_7_q0(tmp_mid_7_t_q0),
    .D_output_address0(func24_U0_D_output_address0),
    .D_output_ce0(func24_U0_D_output_ce0),
    .D_output_we0(func24_U0_D_output_we0),
    .D_output_d0(func24_U0_D_output_d0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_C_mid_0 <= 1'b0;
    end else begin
        if (((func15_U0_ap_done & func15_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_C_mid_0 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_C_mid_0 <= ap_sync_channel_write_C_mid_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_C_mid_1 <= 1'b0;
    end else begin
        if (((func15_U0_ap_done & func15_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_C_mid_1 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_C_mid_1 <= ap_sync_channel_write_C_mid_1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_C_mid_2 <= 1'b0;
    end else begin
        if (((func15_U0_ap_done & func15_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_C_mid_2 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_C_mid_2 <= ap_sync_channel_write_C_mid_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_C_mid_3 <= 1'b0;
    end else begin
        if (((func15_U0_ap_done & func15_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_C_mid_3 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_C_mid_3 <= ap_sync_channel_write_C_mid_3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_C_mid_4 <= 1'b0;
    end else begin
        if (((func15_U0_ap_done & func15_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_C_mid_4 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_C_mid_4 <= ap_sync_channel_write_C_mid_4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_C_mid_5 <= 1'b0;
    end else begin
        if (((func15_U0_ap_done & func15_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_C_mid_5 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_C_mid_5 <= ap_sync_channel_write_C_mid_5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_C_mid_6 <= 1'b0;
    end else begin
        if (((func15_U0_ap_done & func15_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_C_mid_6 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_C_mid_6 <= ap_sync_channel_write_C_mid_6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_C_mid_7 <= 1'b0;
    end else begin
        if (((func15_U0_ap_done & func15_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_C_mid_7 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_C_mid_7 <= ap_sync_channel_write_C_mid_7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_D_mid <= 1'b0;
    end else begin
        if (((func15_U0_ap_done & func15_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_D_mid <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_D_mid <= ap_sync_channel_write_D_mid;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_tmp_mid_0 <= 1'b0;
    end else begin
        if (((func15_U0_ap_done & func15_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_tmp_mid_0 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_tmp_mid_0 <= ap_sync_channel_write_tmp_mid_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_tmp_mid_1 <= 1'b0;
    end else begin
        if (((func15_U0_ap_done & func15_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_tmp_mid_1 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_tmp_mid_1 <= ap_sync_channel_write_tmp_mid_1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_tmp_mid_2 <= 1'b0;
    end else begin
        if (((func15_U0_ap_done & func15_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_tmp_mid_2 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_tmp_mid_2 <= ap_sync_channel_write_tmp_mid_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_tmp_mid_3 <= 1'b0;
    end else begin
        if (((func15_U0_ap_done & func15_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_tmp_mid_3 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_tmp_mid_3 <= ap_sync_channel_write_tmp_mid_3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_tmp_mid_4 <= 1'b0;
    end else begin
        if (((func15_U0_ap_done & func15_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_tmp_mid_4 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_tmp_mid_4 <= ap_sync_channel_write_tmp_mid_4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_tmp_mid_5 <= 1'b0;
    end else begin
        if (((func15_U0_ap_done & func15_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_tmp_mid_5 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_tmp_mid_5 <= ap_sync_channel_write_tmp_mid_5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_tmp_mid_6 <= 1'b0;
    end else begin
        if (((func15_U0_ap_done & func15_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_tmp_mid_6 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_tmp_mid_6 <= ap_sync_channel_write_tmp_mid_6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_tmp_mid_7 <= 1'b0;
    end else begin
        if (((func15_U0_ap_done & func15_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_tmp_mid_7 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_tmp_mid_7 <= ap_sync_channel_write_tmp_mid_7;
        end
    end
end

assign A_0_address0 = func15_U0_A_0_address0;

assign A_0_address1 = 8'd0;

assign A_0_ce0 = func15_U0_A_0_ce0;

assign A_0_ce1 = 1'b0;

assign A_0_d0 = 32'd0;

assign A_0_d1 = 32'd0;

assign A_0_read = func15_U0_A_0_write;

assign A_0_we0 = 1'b0;

assign A_0_we1 = 1'b0;

assign A_1_address0 = func15_U0_A_1_address0;

assign A_1_address1 = 8'd0;

assign A_1_ce0 = func15_U0_A_1_ce0;

assign A_1_ce1 = 1'b0;

assign A_1_d0 = 32'd0;

assign A_1_d1 = 32'd0;

assign A_1_read = func15_U0_A_1_write;

assign A_1_we0 = 1'b0;

assign A_1_we1 = 1'b0;

assign B_0_address0 = func15_U0_B_0_address0;

assign B_0_address1 = 8'd0;

assign B_0_ce0 = func15_U0_B_0_ce0;

assign B_0_ce1 = 1'b0;

assign B_0_d0 = 32'd0;

assign B_0_d1 = 32'd0;

assign B_0_read = func15_U0_B_0_write;

assign B_0_we0 = 1'b0;

assign B_0_we1 = 1'b0;

assign B_1_address0 = func15_U0_B_1_address0;

assign B_1_address1 = 8'd0;

assign B_1_ce0 = func15_U0_B_1_ce0;

assign B_1_ce1 = 1'b0;

assign B_1_d0 = 32'd0;

assign B_1_d1 = 32'd0;

assign B_1_read = func15_U0_B_1_write;

assign B_1_we0 = 1'b0;

assign B_1_we1 = 1'b0;

assign C_0_address0 = func15_U0_C_0_address0;

assign C_0_address1 = 7'd0;

assign C_0_ce0 = func15_U0_C_0_ce0;

assign C_0_ce1 = 1'b0;

assign C_0_d0 = 32'd0;

assign C_0_d1 = 32'd0;

assign C_0_read = func15_U0_C_0_write;

assign C_0_we0 = 1'b0;

assign C_0_we1 = 1'b0;

assign C_1_address0 = func15_U0_C_1_address0;

assign C_1_address1 = 7'd0;

assign C_1_ce0 = func15_U0_C_1_ce0;

assign C_1_ce1 = 1'b0;

assign C_1_d0 = 32'd0;

assign C_1_d1 = 32'd0;

assign C_1_read = func15_U0_C_1_write;

assign C_1_we0 = 1'b0;

assign C_1_we1 = 1'b0;

assign C_2_address0 = func15_U0_C_2_address0;

assign C_2_address1 = 6'd0;

assign C_2_ce0 = func15_U0_C_2_ce0;

assign C_2_ce1 = 1'b0;

assign C_2_d0 = 32'd0;

assign C_2_d1 = 32'd0;

assign C_2_read = func15_U0_C_2_write;

assign C_2_we0 = 1'b0;

assign C_2_we1 = 1'b0;

assign C_3_address0 = func15_U0_C_3_address0;

assign C_3_address1 = 6'd0;

assign C_3_ce0 = func15_U0_C_3_ce0;

assign C_3_ce1 = 1'b0;

assign C_3_d0 = 32'd0;

assign C_3_d1 = 32'd0;

assign C_3_read = func15_U0_C_3_write;

assign C_3_we0 = 1'b0;

assign C_3_we1 = 1'b0;

assign C_4_address0 = func15_U0_C_4_address0;

assign C_4_address1 = 6'd0;

assign C_4_ce0 = func15_U0_C_4_ce0;

assign C_4_ce1 = 1'b0;

assign C_4_d0 = 32'd0;

assign C_4_d1 = 32'd0;

assign C_4_read = func15_U0_C_4_write;

assign C_4_we0 = 1'b0;

assign C_4_we1 = 1'b0;

assign C_5_address0 = func15_U0_C_5_address0;

assign C_5_address1 = 6'd0;

assign C_5_ce0 = func15_U0_C_5_ce0;

assign C_5_ce1 = 1'b0;

assign C_5_d0 = 32'd0;

assign C_5_d1 = 32'd0;

assign C_5_read = func15_U0_C_5_write;

assign C_5_we0 = 1'b0;

assign C_5_we1 = 1'b0;

assign C_6_address0 = func15_U0_C_6_address0;

assign C_6_address1 = 6'd0;

assign C_6_ce0 = func15_U0_C_6_ce0;

assign C_6_ce1 = 1'b0;

assign C_6_d0 = 32'd0;

assign C_6_d1 = 32'd0;

assign C_6_read = func15_U0_C_6_write;

assign C_6_we0 = 1'b0;

assign C_6_we1 = 1'b0;

assign C_7_address0 = func15_U0_C_7_address0;

assign C_7_address1 = 6'd0;

assign C_7_ce0 = func15_U0_C_7_ce0;

assign C_7_ce1 = 1'b0;

assign C_7_d0 = 32'd0;

assign C_7_d1 = 32'd0;

assign C_7_read = func15_U0_C_7_write;

assign C_7_we0 = 1'b0;

assign C_7_we1 = 1'b0;

assign D_address0 = func15_U0_D_address0;

assign D_address1 = 9'd0;

assign D_ce0 = func15_U0_D_ce0;

assign D_ce1 = 1'b0;

assign D_d0 = 32'd0;

assign D_d1 = 32'd0;

assign D_output_address0 = func24_U0_D_output_address0;

assign D_output_address1 = 9'd0;

assign D_output_ce0 = func24_U0_D_output_ce0;

assign D_output_ce1 = 1'b0;

assign D_output_d0 = func24_U0_D_output_d0;

assign D_output_d1 = 32'd0;

assign D_output_we0 = func24_U0_D_output_we0;

assign D_output_we1 = 1'b0;

assign D_output_write = func24_U0_D_output_write;

assign D_read = func15_U0_D_write;

assign D_we0 = 1'b0;

assign D_we1 = 1'b0;

assign ap_channel_done_C_mid_0 = (func15_U0_ap_done & (ap_sync_reg_channel_write_C_mid_0 ^ 1'b1));

assign ap_channel_done_C_mid_1 = (func15_U0_ap_done & (ap_sync_reg_channel_write_C_mid_1 ^ 1'b1));

assign ap_channel_done_C_mid_2 = (func15_U0_ap_done & (ap_sync_reg_channel_write_C_mid_2 ^ 1'b1));

assign ap_channel_done_C_mid_3 = (func15_U0_ap_done & (ap_sync_reg_channel_write_C_mid_3 ^ 1'b1));

assign ap_channel_done_C_mid_4 = (func15_U0_ap_done & (ap_sync_reg_channel_write_C_mid_4 ^ 1'b1));

assign ap_channel_done_C_mid_5 = (func15_U0_ap_done & (ap_sync_reg_channel_write_C_mid_5 ^ 1'b1));

assign ap_channel_done_C_mid_6 = (func15_U0_ap_done & (ap_sync_reg_channel_write_C_mid_6 ^ 1'b1));

assign ap_channel_done_C_mid_7 = (func15_U0_ap_done & (ap_sync_reg_channel_write_C_mid_7 ^ 1'b1));

assign ap_channel_done_D_mid = (func15_U0_ap_done & (ap_sync_reg_channel_write_D_mid ^ 1'b1));

assign ap_channel_done_tmp_mid_0 = (func15_U0_ap_done & (ap_sync_reg_channel_write_tmp_mid_0 ^ 1'b1));

assign ap_channel_done_tmp_mid_1 = (func15_U0_ap_done & (ap_sync_reg_channel_write_tmp_mid_1 ^ 1'b1));

assign ap_channel_done_tmp_mid_2 = (func15_U0_ap_done & (ap_sync_reg_channel_write_tmp_mid_2 ^ 1'b1));

assign ap_channel_done_tmp_mid_3 = (func15_U0_ap_done & (ap_sync_reg_channel_write_tmp_mid_3 ^ 1'b1));

assign ap_channel_done_tmp_mid_4 = (func15_U0_ap_done & (ap_sync_reg_channel_write_tmp_mid_4 ^ 1'b1));

assign ap_channel_done_tmp_mid_5 = (func15_U0_ap_done & (ap_sync_reg_channel_write_tmp_mid_5 ^ 1'b1));

assign ap_channel_done_tmp_mid_6 = (func15_U0_ap_done & (ap_sync_reg_channel_write_tmp_mid_6 ^ 1'b1));

assign ap_channel_done_tmp_mid_7 = (func15_U0_ap_done & (ap_sync_reg_channel_write_tmp_mid_7 ^ 1'b1));

assign ap_done = func24_U0_ap_done;

assign ap_idle = (func24_U0_ap_idle & func15_U0_ap_idle & (1'b1 ^ C_mid_6_t_empty_n) & (1'b1 ^ C_mid_5_t_empty_n) & (1'b1 ^ C_mid_4_t_empty_n) & (1'b1 ^ C_mid_3_t_empty_n) & (1'b1 ^ C_mid_2_t_empty_n) & (1'b1 ^ C_mid_1_t_empty_n) & (1'b1 ^ C_mid_0_t_empty_n) & (tmp_mid_7_t_empty_n ^ 1'b1) & (tmp_mid_6_t_empty_n ^ 1'b1) & (tmp_mid_5_t_empty_n ^ 1'b1) & (tmp_mid_4_t_empty_n ^ 1'b1) & (tmp_mid_3_t_empty_n ^ 1'b1) & (tmp_mid_2_t_empty_n ^ 1'b1) & (tmp_mid_1_t_empty_n ^ 1'b1) & (tmp_mid_0_t_empty_n ^ 1'b1) & (1'b1 ^ D_mid_t_empty_n) & (1'b1 ^ C_mid_7_t_empty_n));

assign ap_ready = func15_U0_ap_ready;

assign ap_sync_channel_write_C_mid_0 = ((func15_U0_C_mid_0_full_n & ap_channel_done_C_mid_0) | ap_sync_reg_channel_write_C_mid_0);

assign ap_sync_channel_write_C_mid_1 = ((func15_U0_C_mid_1_full_n & ap_channel_done_C_mid_1) | ap_sync_reg_channel_write_C_mid_1);

assign ap_sync_channel_write_C_mid_2 = ((func15_U0_C_mid_2_full_n & ap_channel_done_C_mid_2) | ap_sync_reg_channel_write_C_mid_2);

assign ap_sync_channel_write_C_mid_3 = ((func15_U0_C_mid_3_full_n & ap_channel_done_C_mid_3) | ap_sync_reg_channel_write_C_mid_3);

assign ap_sync_channel_write_C_mid_4 = ((func15_U0_C_mid_4_full_n & ap_channel_done_C_mid_4) | ap_sync_reg_channel_write_C_mid_4);

assign ap_sync_channel_write_C_mid_5 = ((func15_U0_C_mid_5_full_n & ap_channel_done_C_mid_5) | ap_sync_reg_channel_write_C_mid_5);

assign ap_sync_channel_write_C_mid_6 = ((func15_U0_C_mid_6_full_n & ap_channel_done_C_mid_6) | ap_sync_reg_channel_write_C_mid_6);

assign ap_sync_channel_write_C_mid_7 = ((func15_U0_C_mid_7_full_n & ap_channel_done_C_mid_7) | ap_sync_reg_channel_write_C_mid_7);

assign ap_sync_channel_write_D_mid = ((func15_U0_D_mid_full_n & ap_channel_done_D_mid) | ap_sync_reg_channel_write_D_mid);

assign ap_sync_channel_write_tmp_mid_0 = ((func15_U0_tmp_0_full_n & ap_channel_done_tmp_mid_0) | ap_sync_reg_channel_write_tmp_mid_0);

assign ap_sync_channel_write_tmp_mid_1 = ((func15_U0_tmp_1_full_n & ap_channel_done_tmp_mid_1) | ap_sync_reg_channel_write_tmp_mid_1);

assign ap_sync_channel_write_tmp_mid_2 = ((func15_U0_tmp_2_full_n & ap_channel_done_tmp_mid_2) | ap_sync_reg_channel_write_tmp_mid_2);

assign ap_sync_channel_write_tmp_mid_3 = ((func15_U0_tmp_3_full_n & ap_channel_done_tmp_mid_3) | ap_sync_reg_channel_write_tmp_mid_3);

assign ap_sync_channel_write_tmp_mid_4 = ((func15_U0_tmp_4_full_n & ap_channel_done_tmp_mid_4) | ap_sync_reg_channel_write_tmp_mid_4);

assign ap_sync_channel_write_tmp_mid_5 = ((func15_U0_tmp_5_full_n & ap_channel_done_tmp_mid_5) | ap_sync_reg_channel_write_tmp_mid_5);

assign ap_sync_channel_write_tmp_mid_6 = ((func15_U0_tmp_6_full_n & ap_channel_done_tmp_mid_6) | ap_sync_reg_channel_write_tmp_mid_6);

assign ap_sync_channel_write_tmp_mid_7 = ((func15_U0_tmp_7_full_n & ap_channel_done_tmp_mid_7) | ap_sync_reg_channel_write_tmp_mid_7);

assign ap_sync_continue = ap_continue;

assign ap_sync_done = func24_U0_ap_done;

assign ap_sync_ready = func15_U0_ap_ready;

assign func15_U0_A_0_full_n = A_0_empty_n;

assign func15_U0_A_0_write = 1'b0;

assign func15_U0_A_1_full_n = A_1_empty_n;

assign func15_U0_A_1_write = 1'b0;

assign func15_U0_B_0_full_n = B_0_empty_n;

assign func15_U0_B_0_write = 1'b0;

assign func15_U0_B_1_full_n = B_1_empty_n;

assign func15_U0_B_1_write = 1'b0;

assign func15_U0_C_0_full_n = C_0_empty_n;

assign func15_U0_C_0_write = 1'b0;

assign func15_U0_C_1_full_n = C_1_empty_n;

assign func15_U0_C_1_write = 1'b0;

assign func15_U0_C_2_full_n = C_2_empty_n;

assign func15_U0_C_2_write = 1'b0;

assign func15_U0_C_3_full_n = C_3_empty_n;

assign func15_U0_C_3_write = 1'b0;

assign func15_U0_C_4_full_n = C_4_empty_n;

assign func15_U0_C_4_write = 1'b0;

assign func15_U0_C_5_full_n = C_5_empty_n;

assign func15_U0_C_5_write = 1'b0;

assign func15_U0_C_6_full_n = C_6_empty_n;

assign func15_U0_C_6_write = 1'b0;

assign func15_U0_C_7_full_n = C_7_empty_n;

assign func15_U0_C_7_write = 1'b0;

assign func15_U0_C_mid_0_full_n = C_mid_0_i_full_n;

assign func15_U0_C_mid_1_full_n = C_mid_1_i_full_n;

assign func15_U0_C_mid_2_full_n = C_mid_2_i_full_n;

assign func15_U0_C_mid_3_full_n = C_mid_3_i_full_n;

assign func15_U0_C_mid_4_full_n = C_mid_4_i_full_n;

assign func15_U0_C_mid_5_full_n = C_mid_5_i_full_n;

assign func15_U0_C_mid_6_full_n = C_mid_6_i_full_n;

assign func15_U0_C_mid_7_full_n = C_mid_7_i_full_n;

assign func15_U0_D_full_n = D_empty_n;

assign func15_U0_D_mid_full_n = D_mid_i_full_n;

assign func15_U0_D_write = 1'b0;

assign func15_U0_ap_continue = (ap_sync_channel_write_tmp_mid_7 & ap_sync_channel_write_tmp_mid_6 & ap_sync_channel_write_tmp_mid_5 & ap_sync_channel_write_tmp_mid_4 & ap_sync_channel_write_tmp_mid_3 & ap_sync_channel_write_tmp_mid_2 & ap_sync_channel_write_tmp_mid_1 & ap_sync_channel_write_tmp_mid_0 & ap_sync_channel_write_D_mid & ap_sync_channel_write_C_mid_7 & ap_sync_channel_write_C_mid_6 & ap_sync_channel_write_C_mid_5 & ap_sync_channel_write_C_mid_4 & ap_sync_channel_write_C_mid_3 & ap_sync_channel_write_C_mid_2 & ap_sync_channel_write_C_mid_1 & ap_sync_channel_write_C_mid_0);

assign func15_U0_ap_start = ap_start;

assign func15_U0_start_full_n = 1'b1;

assign func15_U0_start_write = 1'b0;

assign func15_U0_tmp_0_full_n = tmp_mid_0_i_full_n;

assign func15_U0_tmp_1_full_n = tmp_mid_1_i_full_n;

assign func15_U0_tmp_2_full_n = tmp_mid_2_i_full_n;

assign func15_U0_tmp_3_full_n = tmp_mid_3_i_full_n;

assign func15_U0_tmp_4_full_n = tmp_mid_4_i_full_n;

assign func15_U0_tmp_5_full_n = tmp_mid_5_i_full_n;

assign func15_U0_tmp_6_full_n = tmp_mid_6_i_full_n;

assign func15_U0_tmp_7_full_n = tmp_mid_7_i_full_n;

assign func24_U0_D_output_full_n = D_output_full_n;

assign func24_U0_D_output_write = 1'b0;

assign func24_U0_ap_continue = ap_continue;

assign func24_U0_ap_start = (tmp_mid_7_t_empty_n & tmp_mid_6_t_empty_n & tmp_mid_5_t_empty_n & tmp_mid_4_t_empty_n & tmp_mid_3_t_empty_n & tmp_mid_2_t_empty_n & tmp_mid_1_t_empty_n & tmp_mid_0_t_empty_n & D_mid_t_empty_n & C_mid_7_t_empty_n & C_mid_6_t_empty_n & C_mid_5_t_empty_n & C_mid_4_t_empty_n & C_mid_3_t_empty_n & C_mid_2_t_empty_n & C_mid_1_t_empty_n & C_mid_0_t_empty_n);

assign func24_U0_start_full_n = 1'b1;

assign func24_U0_start_write = 1'b0;

endmodule //kernel_2mm
